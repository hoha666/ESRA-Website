#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Esra.COMMON
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "CloudNasir")]
    public partial class DataClassesBPMSDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InserttblAnalizGamePart(tblAnalizGamePart instance);
        partial void UpdatetblAnalizGamePart(tblAnalizGamePart instance);
        partial void DeletetblAnalizGamePart(tblAnalizGamePart instance);
        partial void InserttblViewAngleType(tblViewAngleType instance);
        partial void UpdatetblViewAngleType(tblViewAngleType instance);
        partial void DeletetblViewAngleType(tblViewAngleType instance);
        partial void InserttblAreaActivity(tblAreaActivity instance);
        partial void UpdatetblAreaActivity(tblAreaActivity instance);
        partial void DeletetblAreaActivity(tblAreaActivity instance);
        partial void InserttblCategory(tblCategory instance);
        partial void UpdatetblCategory(tblCategory instance);
        partial void DeletetblCategory(tblCategory instance);
        partial void InserttblCategoryType(tblCategoryType instance);
        partial void UpdatetblCategoryType(tblCategoryType instance);
        partial void DeletetblCategoryType(tblCategoryType instance);
        partial void InserttblCertificationVersion(tblCertificationVersion instance);
        partial void UpdatetblCertificationVersion(tblCertificationVersion instance);
        partial void DeletetblCertificationVersion(tblCertificationVersion instance);
        partial void InserttblCompanyAriaActivity(tblCompanyAriaActivity instance);
        partial void UpdatetblCompanyAriaActivity(tblCompanyAriaActivity instance);
        partial void DeletetblCompanyAriaActivity(tblCompanyAriaActivity instance);
        partial void InserttblConsultation(tblConsultation instance);
        partial void UpdatetblConsultation(tblConsultation instance);
        partial void DeletetblConsultation(tblConsultation instance);
        partial void InserttblCountry(tblCountry instance);
        partial void UpdatetblCountry(tblCountry instance);
        partial void DeletetblCountry(tblCountry instance);
        partial void InserttblDeficiencyType(tblDeficiencyType instance);
        partial void UpdatetblDeficiencyType(tblDeficiencyType instance);
        partial void DeletetblDeficiencyType(tblDeficiencyType instance);
        partial void InserttblEditableType(tblEditableType instance);
        partial void UpdatetblEditableType(tblEditableType instance);
        partial void DeletetblEditableType(tblEditableType instance);
        partial void InserttblEsra(tblEsra instance);
        partial void UpdatetblEsra(tblEsra instance);
        partial void DeletetblEsra(tblEsra instance);
        partial void InserttblEsraStatus(tblEsraStatus instance);
        partial void UpdatetblEsraStatus(tblEsraStatus instance);
        partial void DeletetblEsraStatus(tblEsraStatus instance);
        partial void InserttblEsraType(tblEsraType instance);
        partial void UpdatetblEsraType(tblEsraType instance);
        partial void DeletetblEsraType(tblEsraType instance);
        partial void InserttblFile(tblFile instance);
        partial void UpdatetblFile(tblFile instance);
        partial void DeletetblFile(tblFile instance);
        partial void InserttblFounderGroup(tblFounderGroup instance);
        partial void UpdatetblFounderGroup(tblFounderGroup instance);
        partial void DeletetblFounderGroup(tblFounderGroup instance);
        partial void InserttblGameCategory(tblGameCategory instance);
        partial void UpdatetblGameCategory(tblGameCategory instance);
        partial void DeletetblGameCategory(tblGameCategory instance);
        partial void InserttblGameCreatorProject(tblGameCreatorProject instance);
        partial void UpdatetblGameCreatorProject(tblGameCreatorProject instance);
        partial void DeletetblGameCreatorProject(tblGameCreatorProject instance);
        partial void InserttblGamePart(tblGamePart instance);
        partial void UpdatetblGamePart(tblGamePart instance);
        partial void DeletetblGamePart(tblGamePart instance);
        partial void InserttblGamerScreenShot(tblGamerScreenShot instance);
        partial void UpdatetblGamerScreenShot(tblGamerScreenShot instance);
        partial void DeletetblGamerScreenShot(tblGamerScreenShot instance);
        partial void InserttblGamerScreenVideo(tblGamerScreenVideo instance);
        partial void UpdatetblGamerScreenVideo(tblGamerScreenVideo instance);
        partial void DeletetblGamerScreenVideo(tblGamerScreenVideo instance);
        partial void InserttblIdentificationType(tblIdentificationType instance);
        partial void UpdatetblIdentificationType(tblIdentificationType instance);
        partial void DeletetblIdentificationType(tblIdentificationType instance);
        partial void InserttblIndependentGameCreatorFile(tblIndependentGameCreatorFile instance);
        partial void UpdatetblIndependentGameCreatorFile(tblIndependentGameCreatorFile instance);
        partial void DeletetblIndependentGameCreatorFile(tblIndependentGameCreatorFile instance);
        partial void InserttblLanguage(tblLanguage instance);
        partial void UpdatetblLanguage(tblLanguage instance);
        partial void DeletetblLanguage(tblLanguage instance);
        partial void InserttblMilitary(tblMilitary instance);
        partial void UpdatetblMilitary(tblMilitary instance);
        partial void DeletetblMilitary(tblMilitary instance);
        partial void InserttblOrganizationBonyad(tblOrganizationBonyad instance);
        partial void UpdatetblOrganizationBonyad(tblOrganizationBonyad instance);
        partial void DeletetblOrganizationBonyad(tblOrganizationBonyad instance);
        partial void InserttblOrganizationBonyadFile(tblOrganizationBonyadFile instance);
        partial void UpdatetblOrganizationBonyadFile(tblOrganizationBonyadFile instance);
        partial void DeletetblOrganizationBonyadFile(tblOrganizationBonyadFile instance);
        partial void InserttblPictogram(tblPictogram instance);
        partial void UpdatetblPictogram(tblPictogram instance);
        partial void DeletetblPictogram(tblPictogram instance);
        partial void InserttblPlatform(tblPlatform instance);
        partial void UpdatetblPlatform(tblPlatform instance);
        partial void DeletetblPlatform(tblPlatform instance);
        partial void InserttblProducerNExclusiveNUser(tblProducerNExclusiveNUser instance);
        partial void UpdatetblProducerNExclusiveNUser(tblProducerNExclusiveNUser instance);
        partial void DeletetblProducerNExclusiveNUser(tblProducerNExclusiveNUser instance);
        partial void InserttblPublishCertification(tblPublishCertification instance);
        partial void UpdatetblPublishCertification(tblPublishCertification instance);
        partial void DeletetblPublishCertification(tblPublishCertification instance);
        partial void InserttblPublishCertificationValet(tblPublishCertificationValet instance);
        partial void UpdatetblPublishCertificationValet(tblPublishCertificationValet instance);
        partial void DeletetblPublishCertificationValet(tblPublishCertificationValet instance);
        partial void InserttblQuality(tblQuality instance);
        partial void UpdatetblQuality(tblQuality instance);
        partial void DeletetblQuality(tblQuality instance);
        partial void InserttblRate(tblRate instance);
        partial void UpdatetblRate(tblRate instance);
        partial void DeletetblRate(tblRate instance);
        partial void InserttblScreenshotType(tblScreenshotType instance);
        partial void UpdatetblScreenshotType(tblScreenshotType instance);
        partial void DeletetblScreenshotType(tblScreenshotType instance);
        partial void InserttblSkillType(tblSkillType instance);
        partial void UpdatetblSkillType(tblSkillType instance);
        partial void DeletetblSkillType(tblSkillType instance);
        partial void InserttblSourceMedia(tblSourceMedia instance);
        partial void UpdatetblSourceMedia(tblSourceMedia instance);
        partial void DeletetblSourceMedia(tblSourceMedia instance);
        partial void InserttblSourceMediaFile(tblSourceMediaFile instance);
        partial void UpdatetblSourceMediaFile(tblSourceMediaFile instance);
        partial void DeletetblSourceMediaFile(tblSourceMediaFile instance);
        partial void InserttblSourceMediaSentType(tblSourceMediaSentType instance);
        partial void UpdatetblSourceMediaSentType(tblSourceMediaSentType instance);
        partial void DeletetblSourceMediaSentType(tblSourceMediaSentType instance);
        partial void InserttblSourceMediaType(tblSourceMediaType instance);
        partial void UpdatetblSourceMediaType(tblSourceMediaType instance);
        partial void DeletetblSourceMediaType(tblSourceMediaType instance);
        partial void InserttblSourceType(tblSourceType instance);
        partial void UpdatetblSourceType(tblSourceType instance);
        partial void DeletetblSourceType(tblSourceType instance);
        partial void InserttblStaticPage(tblStaticPage instance);
        partial void UpdatetblStaticPage(tblStaticPage instance);
        partial void DeletetblStaticPage(tblStaticPage instance);
        partial void InserttblStaticPageFile(tblStaticPageFile instance);
        partial void UpdatetblStaticPageFile(tblStaticPageFile instance);
        partial void DeletetblStaticPageFile(tblStaticPageFile instance);
        partial void InserttblTag(tblTag instance);
        partial void UpdatetblTag(tblTag instance);
        partial void DeletetblTag(tblTag instance);
        partial void InserttblUserDocumentFile(tblUserDocumentFile instance);
        partial void UpdatetblUserDocumentFile(tblUserDocumentFile instance);
        partial void DeletetblUserDocumentFile(tblUserDocumentFile instance);
        partial void InserttblVersion(tblVersion instance);
        partial void UpdatetblVersion(tblVersion instance);
        partial void DeletetblVersion(tblVersion instance);
        partial void InserttblVersionAnaliz(tblVersionAnaliz instance);
        partial void UpdatetblVersionAnaliz(tblVersionAnaliz instance);
        partial void DeletetblVersionAnaliz(tblVersionAnaliz instance);
        partial void InserttblVersionCategory(tblVersionCategory instance);
        partial void UpdatetblVersionCategory(tblVersionCategory instance);
        partial void DeletetblVersionCategory(tblVersionCategory instance);
        partial void InserttblVersionEsra(tblVersionEsra instance);
        partial void UpdatetblVersionEsra(tblVersionEsra instance);
        partial void DeletetblVersionEsra(tblVersionEsra instance);
        partial void InserttblVersionExclusive(tblVersionExclusive instance);
        partial void UpdatetblVersionExclusive(tblVersionExclusive instance);
        partial void DeletetblVersionExclusive(tblVersionExclusive instance);
        partial void InserttblVersionGenre(tblVersionGenre instance);
        partial void UpdatetblVersionGenre(tblVersionGenre instance);
        partial void DeletetblVersionGenre(tblVersionGenre instance);
        partial void InserttblVersionNarrat(tblVersionNarrat instance);
        partial void UpdatetblVersionNarrat(tblVersionNarrat instance);
        partial void DeletetblVersionNarrat(tblVersionNarrat instance);
        partial void InserttblVersionPictogram(tblVersionPictogram instance);
        partial void UpdatetblVersionPictogram(tblVersionPictogram instance);
        partial void DeletetblVersionPictogram(tblVersionPictogram instance);
        partial void InserttblVersionScreenshot(tblVersionScreenshot instance);
        partial void UpdatetblVersionScreenshot(tblVersionScreenshot instance);
        partial void DeletetblVersionScreenshot(tblVersionScreenshot instance);
        partial void InserttblVersionSkill(tblVersionSkill instance);
        partial void UpdatetblVersionSkill(tblVersionSkill instance);
        partial void DeletetblVersionSkill(tblVersionSkill instance);
        partial void InserttblVersionViewAngle(tblVersionViewAngle instance);
        partial void UpdatetblVersionViewAngle(tblVersionViewAngle instance);
        partial void DeletetblVersionViewAngle(tblVersionViewAngle instance);
        partial void InsertOrganization(Organization instance);
        partial void UpdateOrganization(Organization instance);
        partial void DeleteOrganization(Organization instance);
        partial void InserttblGame(tblGame instance);
        partial void UpdatetblGame(tblGame instance);
        partial void DeletetblGame(tblGame instance);
        #endregion

        public DataClassesBPMSDataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClassesBPMSDataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClassesBPMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClassesBPMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<tblAnalizGamePart> tblAnalizGameParts
        {
            get
            {
                return this.GetTable<tblAnalizGamePart>();
            }
        }

        public System.Data.Linq.Table<tblViewAngleType> tblViewAngleTypes
        {
            get
            {
                return this.GetTable<tblViewAngleType>();
            }
        }

        public System.Data.Linq.Table<tblAreaActivity> tblAreaActivities
        {
            get
            {
                return this.GetTable<tblAreaActivity>();
            }
        }

        public System.Data.Linq.Table<tblCategory> tblCategories
        {
            get
            {
                return this.GetTable<tblCategory>();
            }
        }

        public System.Data.Linq.Table<tblCategoryType> tblCategoryTypes
        {
            get
            {
                return this.GetTable<tblCategoryType>();
            }
        }

        public System.Data.Linq.Table<tblCertificationVersion> tblCertificationVersions
        {
            get
            {
                return this.GetTable<tblCertificationVersion>();
            }
        }

        public System.Data.Linq.Table<tblCompanyAriaActivity> tblCompanyAriaActivities
        {
            get
            {
                return this.GetTable<tblCompanyAriaActivity>();
            }
        }

        public System.Data.Linq.Table<tblConsultation> tblConsultations
        {
            get
            {
                return this.GetTable<tblConsultation>();
            }
        }

        public System.Data.Linq.Table<tblCountry> tblCountries
        {
            get
            {
                return this.GetTable<tblCountry>();
            }
        }

        public System.Data.Linq.Table<tblDeficiencyType> tblDeficiencyTypes
        {
            get
            {
                return this.GetTable<tblDeficiencyType>();
            }
        }

        public System.Data.Linq.Table<tblEditableType> tblEditableTypes
        {
            get
            {
                return this.GetTable<tblEditableType>();
            }
        }

        public System.Data.Linq.Table<tblEsra> tblEsras
        {
            get
            {
                return this.GetTable<tblEsra>();
            }
        }

        public System.Data.Linq.Table<tblEsraStatus> tblEsraStatus
        {
            get
            {
                return this.GetTable<tblEsraStatus>();
            }
        }

        public System.Data.Linq.Table<tblEsraType> tblEsraTypes
        {
            get
            {
                return this.GetTable<tblEsraType>();
            }
        }

        public System.Data.Linq.Table<tblExclusive> tblExclusives
        {
            get
            {
                return this.GetTable<tblExclusive>();
            }
        }

        public System.Data.Linq.Table<tblFile> tblFiles
        {
            get
            {
                return this.GetTable<tblFile>();
            }
        }

        public System.Data.Linq.Table<tblFounderGroup> tblFounderGroups
        {
            get
            {
                return this.GetTable<tblFounderGroup>();
            }
        }

        public System.Data.Linq.Table<tblGameCategory> tblGameCategories
        {
            get
            {
                return this.GetTable<tblGameCategory>();
            }
        }

        public System.Data.Linq.Table<tblGameCreatorProject> tblGameCreatorProjects
        {
            get
            {
                return this.GetTable<tblGameCreatorProject>();
            }
        }

        public System.Data.Linq.Table<tblGamePart> tblGameParts
        {
            get
            {
                return this.GetTable<tblGamePart>();
            }
        }

        public System.Data.Linq.Table<tblGamerScreenShot> tblGamerScreenShots
        {
            get
            {
                return this.GetTable<tblGamerScreenShot>();
            }
        }

        public System.Data.Linq.Table<tblGamerScreenVideo> tblGamerScreenVideos
        {
            get
            {
                return this.GetTable<tblGamerScreenVideo>();
            }
        }

        public System.Data.Linq.Table<tblIdentificationType> tblIdentificationTypes
        {
            get
            {
                return this.GetTable<tblIdentificationType>();
            }
        }

        public System.Data.Linq.Table<tblIndependentGameCreator> tblIndependentGameCreators
        {
            get
            {
                return this.GetTable<tblIndependentGameCreator>();
            }
        }

        public System.Data.Linq.Table<tblIndependentGameCreatorFile> tblIndependentGameCreatorFiles
        {
            get
            {
                return this.GetTable<tblIndependentGameCreatorFile>();
            }
        }

        public System.Data.Linq.Table<tblLanguage> tblLanguages
        {
            get
            {
                return this.GetTable<tblLanguage>();
            }
        }

        public System.Data.Linq.Table<tblLegalProducer> tblLegalProducers
        {
            get
            {
                return this.GetTable<tblLegalProducer>();
            }
        }

        public System.Data.Linq.Table<tblMilitary> tblMilitaries
        {
            get
            {
                return this.GetTable<tblMilitary>();
            }
        }

        public System.Data.Linq.Table<tblOrganizationBonyad> tblOrganizationBonyads
        {
            get
            {
                return this.GetTable<tblOrganizationBonyad>();
            }
        }

        public System.Data.Linq.Table<tblOrganizationBonyadFile> tblOrganizationBonyadFiles
        {
            get
            {
                return this.GetTable<tblOrganizationBonyadFile>();
            }
        }

        public System.Data.Linq.Table<tblPictogram> tblPictograms
        {
            get
            {
                return this.GetTable<tblPictogram>();
            }
        }

        public System.Data.Linq.Table<tblPlatform> tblPlatforms
        {
            get
            {
                return this.GetTable<tblPlatform>();
            }
        }

        public System.Data.Linq.Table<tblProducerNExclusiveNUser> tblProducerNExclusiveNUsers
        {
            get
            {
                return this.GetTable<tblProducerNExclusiveNUser>();
            }
        }

        public System.Data.Linq.Table<tblPublishCertification> tblPublishCertifications
        {
            get
            {
                return this.GetTable<tblPublishCertification>();
            }
        }

        public System.Data.Linq.Table<tblPublishCertificationValet> tblPublishCertificationValets
        {
            get
            {
                return this.GetTable<tblPublishCertificationValet>();
            }
        }

        public System.Data.Linq.Table<tblQuality> tblQualities
        {
            get
            {
                return this.GetTable<tblQuality>();
            }
        }

        public System.Data.Linq.Table<tblRate> tblRates
        {
            get
            {
                return this.GetTable<tblRate>();
            }
        }

        public System.Data.Linq.Table<tblRealProducer> tblRealProducers
        {
            get
            {
                return this.GetTable<tblRealProducer>();
            }
        }

        public System.Data.Linq.Table<tblScreenshotType> tblScreenshotTypes
        {
            get
            {
                return this.GetTable<tblScreenshotType>();
            }
        }

        public System.Data.Linq.Table<tblSkillType> tblSkillTypes
        {
            get
            {
                return this.GetTable<tblSkillType>();
            }
        }

        public System.Data.Linq.Table<tblSourceMedia> tblSourceMedias
        {
            get
            {
                return this.GetTable<tblSourceMedia>();
            }
        }

        public System.Data.Linq.Table<tblSourceMediaFile> tblSourceMediaFiles
        {
            get
            {
                return this.GetTable<tblSourceMediaFile>();
            }
        }

        public System.Data.Linq.Table<tblSourceMediaSentType> tblSourceMediaSentTypes
        {
            get
            {
                return this.GetTable<tblSourceMediaSentType>();
            }
        }

        public System.Data.Linq.Table<tblSourceMediaType> tblSourceMediaTypes
        {
            get
            {
                return this.GetTable<tblSourceMediaType>();
            }
        }

        public System.Data.Linq.Table<tblSourceType> tblSourceTypes
        {
            get
            {
                return this.GetTable<tblSourceType>();
            }
        }

        public System.Data.Linq.Table<tblStaticPage> tblStaticPages
        {
            get
            {
                return this.GetTable<tblStaticPage>();
            }
        }

        public System.Data.Linq.Table<tblStaticPageFile> tblStaticPageFiles
        {
            get
            {
                return this.GetTable<tblStaticPageFile>();
            }
        }

        public System.Data.Linq.Table<tblTag> tblTags
        {
            get
            {
                return this.GetTable<tblTag>();
            }
        }

        public System.Data.Linq.Table<tblUserDocumentFile> tblUserDocumentFiles
        {
            get
            {
                return this.GetTable<tblUserDocumentFile>();
            }
        }

        public System.Data.Linq.Table<tblVersion> tblVersions
        {
            get
            {
                return this.GetTable<tblVersion>();
            }
        }

        public System.Data.Linq.Table<tblVersionAnaliz> tblVersionAnalizs
        {
            get
            {
                return this.GetTable<tblVersionAnaliz>();
            }
        }

        public System.Data.Linq.Table<tblVersionCategory> tblVersionCategories
        {
            get
            {
                return this.GetTable<tblVersionCategory>();
            }
        }

        public System.Data.Linq.Table<tblVersionEsra> tblVersionEsras
        {
            get
            {
                return this.GetTable<tblVersionEsra>();
            }
        }

        public System.Data.Linq.Table<tblVersionExclusive> tblVersionExclusives
        {
            get
            {
                return this.GetTable<tblVersionExclusive>();
            }
        }

        public System.Data.Linq.Table<tblVersionGenre> tblVersionGenres
        {
            get
            {
                return this.GetTable<tblVersionGenre>();
            }
        }

        public System.Data.Linq.Table<tblVersionNarrat> tblVersionNarrats
        {
            get
            {
                return this.GetTable<tblVersionNarrat>();
            }
        }

        public System.Data.Linq.Table<tblVersionPictogram> tblVersionPictograms
        {
            get
            {
                return this.GetTable<tblVersionPictogram>();
            }
        }

        public System.Data.Linq.Table<tblVersionScreenshot> tblVersionScreenshots
        {
            get
            {
                return this.GetTable<tblVersionScreenshot>();
            }
        }

        public System.Data.Linq.Table<tblVersionSkill> tblVersionSkills
        {
            get
            {
                return this.GetTable<tblVersionSkill>();
            }
        }

        public System.Data.Linq.Table<tblVersionViewAngle> tblVersionViewAngles
        {
            get
            {
                return this.GetTable<tblVersionViewAngle>();
            }
        }

        public System.Data.Linq.Table<Organization> Organizations
        {
            get
            {
                return this.GetTable<Organization>();
            }
        }

        public System.Data.Linq.Table<vwRatingGameResults_> vwRatingGameResults_s
        {
            get
            {
                return this.GetTable<vwRatingGameResults_>();
            }
        }

        public System.Data.Linq.Table<tblGame> tblGames
        {
            get
            {
                return this.GetTable<tblGame>();
            }
        }

        public System.Data.Linq.Table<vwIntroductionGameResult> vwIntroductionGameResults
        {
            get
            {
                return this.GetTable<vwIntroductionGameResult>();
            }
        }
        public System.Data.Linq.Table<vwIntroductionMobileNot> vwIntroductionMobileNot
        {
            get
            {
                return this.GetTable<vwIntroductionMobileNot>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblAnalizGamePart")]
    public partial class tblAnalizGamePart : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdVersionEsraStatusPictogram;

        private int _IdGamePart;

        private EntityRef<tblGamePart> _tblGamePart;

        private EntityRef<tblVersionAnaliz> _tblVersionAnaliz;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdVersionEsraStatusPictogramChanging(int value);
        partial void OnIdVersionEsraStatusPictogramChanged();
        partial void OnIdGamePartChanging(int value);
        partial void OnIdGamePartChanged();
        #endregion

        public tblAnalizGamePart()
        {
            this._tblGamePart = default(EntityRef<tblGamePart>);
            this._tblVersionAnaliz = default(EntityRef<tblVersionAnaliz>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersionEsraStatusPictogram", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdVersionEsraStatusPictogram
        {
            get
            {
                return this._IdVersionEsraStatusPictogram;
            }
            set
            {
                if ((this._IdVersionEsraStatusPictogram != value))
                {
                    if (this._tblVersionAnaliz.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionEsraStatusPictogramChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersionEsraStatusPictogram = value;
                    this.SendPropertyChanged("IdVersionEsraStatusPictogram");
                    this.OnIdVersionEsraStatusPictogramChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdGamePart", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdGamePart
        {
            get
            {
                return this._IdGamePart;
            }
            set
            {
                if ((this._IdGamePart != value))
                {
                    if (this._tblGamePart.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdGamePartChanging(value);
                    this.SendPropertyChanging();
                    this._IdGamePart = value;
                    this.SendPropertyChanged("IdGamePart");
                    this.OnIdGamePartChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblGamePart_tblAnalizGamePart", Storage = "_tblGamePart", ThisKey = "IdGamePart", OtherKey = "id", IsForeignKey = true)]
        public tblGamePart tblGamePart
        {
            get
            {
                return this._tblGamePart.Entity;
            }
            set
            {
                tblGamePart previousValue = this._tblGamePart.Entity;
                if (((previousValue != value)
                            || (this._tblGamePart.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblGamePart.Entity = null;
                        previousValue.tblAnalizGameParts.Remove(this);
                    }
                    this._tblGamePart.Entity = value;
                    if ((value != null))
                    {
                        value.tblAnalizGameParts.Add(this);
                        this._IdGamePart = value.id;
                    }
                    else
                    {
                        this._IdGamePart = default(int);
                    }
                    this.SendPropertyChanged("tblGamePart");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersionAnaliz_tblAnalizGamePart", Storage = "_tblVersionAnaliz", ThisKey = "IdVersionEsraStatusPictogram", OtherKey = "Id", IsForeignKey = true)]
        public tblVersionAnaliz tblVersionAnaliz
        {
            get
            {
                return this._tblVersionAnaliz.Entity;
            }
            set
            {
                tblVersionAnaliz previousValue = this._tblVersionAnaliz.Entity;
                if (((previousValue != value)
                            || (this._tblVersionAnaliz.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersionAnaliz.Entity = null;
                        previousValue.tblAnalizGameParts.Remove(this);
                    }
                    this._tblVersionAnaliz.Entity = value;
                    if ((value != null))
                    {
                        value.tblAnalizGameParts.Add(this);
                        this._IdVersionEsraStatusPictogram = value.Id;
                    }
                    else
                    {
                        this._IdVersionEsraStatusPictogram = default(int);
                    }
                    this.SendPropertyChanged("tblVersionAnaliz");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblViewAngleType")]
    public partial class tblViewAngleType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private string _Name;

        private EntitySet<tblVersionViewAngle> _tblVersionViewAngles;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblViewAngleType()
        {
            this._tblVersionViewAngles = new EntitySet<tblVersionViewAngle>(new Action<tblVersionViewAngle>(this.attach_tblVersionViewAngles), new Action<tblVersionViewAngle>(this.detach_tblVersionViewAngles));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblViewAngleType_tblVersionViewAngle", Storage = "_tblVersionViewAngles", ThisKey = "id", OtherKey = "idViewAngleType")]
        public EntitySet<tblVersionViewAngle> tblVersionViewAngles
        {
            get
            {
                return this._tblVersionViewAngles;
            }
            set
            {
                this._tblVersionViewAngles.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersionViewAngles(tblVersionViewAngle entity)
        {
            this.SendPropertyChanging();
            entity.tblViewAngleType = this;
        }

        private void detach_tblVersionViewAngles(tblVersionViewAngle entity)
        {
            this.SendPropertyChanging();
            entity.tblViewAngleType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblAreaActivity")]
    public partial class tblAreaActivity : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private string _Name;

        private System.Nullable<bool> _InBonyad;

        private EntitySet<tblCompanyAriaActivity> _tblCompanyAriaActivities;

        private EntitySet<tblGameCreatorProject> _tblGameCreatorProjects;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnInBonyadChanging(System.Nullable<bool> value);
        partial void OnInBonyadChanged();
        #endregion

        public tblAreaActivity()
        {
            this._tblCompanyAriaActivities = new EntitySet<tblCompanyAriaActivity>(new Action<tblCompanyAriaActivity>(this.attach_tblCompanyAriaActivities), new Action<tblCompanyAriaActivity>(this.detach_tblCompanyAriaActivities));
            this._tblGameCreatorProjects = new EntitySet<tblGameCreatorProject>(new Action<tblGameCreatorProject>(this.attach_tblGameCreatorProjects), new Action<tblGameCreatorProject>(this.detach_tblGameCreatorProjects));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InBonyad", DbType = "Bit")]
        public System.Nullable<bool> InBonyad
        {
            get
            {
                return this._InBonyad;
            }
            set
            {
                if ((this._InBonyad != value))
                {
                    this.OnInBonyadChanging(value);
                    this.SendPropertyChanging();
                    this._InBonyad = value;
                    this.SendPropertyChanged("InBonyad");
                    this.OnInBonyadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblAreaActivity_tblCompanyAriaActivity", Storage = "_tblCompanyAriaActivities", ThisKey = "id", OtherKey = "IdAriaActivity")]
        public EntitySet<tblCompanyAriaActivity> tblCompanyAriaActivities
        {
            get
            {
                return this._tblCompanyAriaActivities;
            }
            set
            {
                this._tblCompanyAriaActivities.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblAreaActivity_tblGameCreatorProject", Storage = "_tblGameCreatorProjects", ThisKey = "id", OtherKey = "IdAreaActivity")]
        public EntitySet<tblGameCreatorProject> tblGameCreatorProjects
        {
            get
            {
                return this._tblGameCreatorProjects;
            }
            set
            {
                this._tblGameCreatorProjects.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblCompanyAriaActivities(tblCompanyAriaActivity entity)
        {
            this.SendPropertyChanging();
            entity.tblAreaActivity = this;
        }

        private void detach_tblCompanyAriaActivities(tblCompanyAriaActivity entity)
        {
            this.SendPropertyChanging();
            entity.tblAreaActivity = null;
        }

        private void attach_tblGameCreatorProjects(tblGameCreatorProject entity)
        {
            this.SendPropertyChanging();
            entity.tblAreaActivity = this;
        }

        private void detach_tblGameCreatorProjects(tblGameCreatorProject entity)
        {
            this.SendPropertyChanging();
            entity.tblAreaActivity = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblCategory")]
    public partial class tblCategory : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private System.Nullable<int> _IdParent;

        private int _IdCategoryType;

        private EntitySet<tblCategory> _tblCategories;

        private EntitySet<tblVersionGenre> _tblVersionGenres;

        private EntityRef<tblCategory> _tblCategory1;

        private EntityRef<tblCategoryType> _tblCategoryType;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnIdParentChanging(System.Nullable<int> value);
        partial void OnIdParentChanged();
        partial void OnIdCategoryTypeChanging(int value);
        partial void OnIdCategoryTypeChanged();
        #endregion

        public tblCategory()
        {
            this._tblCategories = new EntitySet<tblCategory>(new Action<tblCategory>(this.attach_tblCategories), new Action<tblCategory>(this.detach_tblCategories));
            this._tblVersionGenres = new EntitySet<tblVersionGenre>(new Action<tblVersionGenre>(this.attach_tblVersionGenres), new Action<tblVersionGenre>(this.detach_tblVersionGenres));
            this._tblCategory1 = default(EntityRef<tblCategory>);
            this._tblCategoryType = default(EntityRef<tblCategoryType>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdParent", DbType = "Int")]
        public System.Nullable<int> IdParent
        {
            get
            {
                return this._IdParent;
            }
            set
            {
                if ((this._IdParent != value))
                {
                    if (this._tblCategory1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdParentChanging(value);
                    this.SendPropertyChanging();
                    this._IdParent = value;
                    this.SendPropertyChanged("IdParent");
                    this.OnIdParentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdCategoryType", DbType = "Int NOT NULL")]
        public int IdCategoryType
        {
            get
            {
                return this._IdCategoryType;
            }
            set
            {
                if ((this._IdCategoryType != value))
                {
                    if (this._tblCategoryType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdCategoryTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdCategoryType = value;
                    this.SendPropertyChanged("IdCategoryType");
                    this.OnIdCategoryTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblCategory_tblCategory", Storage = "_tblCategories", ThisKey = "Id", OtherKey = "IdParent")]
        public EntitySet<tblCategory> tblCategories
        {
            get
            {
                return this._tblCategories;
            }
            set
            {
                this._tblCategories.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblCategory_tblVersionGenre", Storage = "_tblVersionGenres", ThisKey = "Id", OtherKey = "IdGenre")]
        public EntitySet<tblVersionGenre> tblVersionGenres
        {
            get
            {
                return this._tblVersionGenres;
            }
            set
            {
                this._tblVersionGenres.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblCategory_tblCategory", Storage = "_tblCategory1", ThisKey = "IdParent", OtherKey = "Id", IsForeignKey = true)]
        public tblCategory tblCategory1
        {
            get
            {
                return this._tblCategory1.Entity;
            }
            set
            {
                tblCategory previousValue = this._tblCategory1.Entity;
                if (((previousValue != value)
                            || (this._tblCategory1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblCategory1.Entity = null;
                        previousValue.tblCategories.Remove(this);
                    }
                    this._tblCategory1.Entity = value;
                    if ((value != null))
                    {
                        value.tblCategories.Add(this);
                        this._IdParent = value.Id;
                    }
                    else
                    {
                        this._IdParent = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblCategory1");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblCategoryType_tblCategory", Storage = "_tblCategoryType", ThisKey = "IdCategoryType", OtherKey = "Id", IsForeignKey = true)]
        public tblCategoryType tblCategoryType
        {
            get
            {
                return this._tblCategoryType.Entity;
            }
            set
            {
                tblCategoryType previousValue = this._tblCategoryType.Entity;
                if (((previousValue != value)
                            || (this._tblCategoryType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblCategoryType.Entity = null;
                        previousValue.tblCategories.Remove(this);
                    }
                    this._tblCategoryType.Entity = value;
                    if ((value != null))
                    {
                        value.tblCategories.Add(this);
                        this._IdCategoryType = value.Id;
                    }
                    else
                    {
                        this._IdCategoryType = default(int);
                    }
                    this.SendPropertyChanged("tblCategoryType");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblCategories(tblCategory entity)
        {
            this.SendPropertyChanging();
            entity.tblCategory1 = this;
        }

        private void detach_tblCategories(tblCategory entity)
        {
            this.SendPropertyChanging();
            entity.tblCategory1 = null;
        }

        private void attach_tblVersionGenres(tblVersionGenre entity)
        {
            this.SendPropertyChanging();
            entity.tblCategory = this;
        }

        private void detach_tblVersionGenres(tblVersionGenre entity)
        {
            this.SendPropertyChanging();
            entity.tblCategory = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblCategoryType")]
    public partial class tblCategoryType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblCategory> _tblCategories;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblCategoryType()
        {
            this._tblCategories = new EntitySet<tblCategory>(new Action<tblCategory>(this.attach_tblCategories), new Action<tblCategory>(this.detach_tblCategories));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblCategoryType_tblCategory", Storage = "_tblCategories", ThisKey = "Id", OtherKey = "IdCategoryType")]
        public EntitySet<tblCategory> tblCategories
        {
            get
            {
                return this._tblCategories;
            }
            set
            {
                this._tblCategories.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblCategories(tblCategory entity)
        {
            this.SendPropertyChanging();
            entity.tblCategoryType = this;
        }

        private void detach_tblCategories(tblCategory entity)
        {
            this.SendPropertyChanging();
            entity.tblCategoryType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblCertificationVersion")]
    public partial class tblCertificationVersion : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdVersion;

        private int _IdPublishCertification;

        private System.Nullable<int> _IdUser;

        private string _CommentUser;

        private bool _CertificationStatus;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        private EntityRef<tblPublishCertification> _tblPublishCertification;

        private EntityRef<tblVersion> _tblVersion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdVersionChanging(int value);
        partial void OnIdVersionChanged();
        partial void OnIdPublishCertificationChanging(int value);
        partial void OnIdPublishCertificationChanged();
        partial void OnIdUserChanging(System.Nullable<int> value);
        partial void OnIdUserChanged();
        partial void OnCommentUserChanging(string value);
        partial void OnCommentUserChanged();
        partial void OnCertificationStatusChanging(bool value);
        partial void OnCertificationStatusChanged();
        #endregion

        public tblCertificationVersion()
        {
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblPublishCertification = default(EntityRef<tblPublishCertification>);
            this._tblVersion = default(EntityRef<tblVersion>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersion", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdVersion
        {
            get
            {
                return this._IdVersion;
            }
            set
            {
                if ((this._IdVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersion = value;
                    this.SendPropertyChanged("IdVersion");
                    this.OnIdVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdPublishCertification", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdPublishCertification
        {
            get
            {
                return this._IdPublishCertification;
            }
            set
            {
                if ((this._IdPublishCertification != value))
                {
                    if (this._tblPublishCertification.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdPublishCertificationChanging(value);
                    this.SendPropertyChanging();
                    this._IdPublishCertification = value;
                    this.SendPropertyChanged("IdPublishCertification");
                    this.OnIdPublishCertificationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdUser", DbType = "Int")]
        public System.Nullable<int> IdUser
        {
            get
            {
                return this._IdUser;
            }
            set
            {
                if ((this._IdUser != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdUserChanging(value);
                    this.SendPropertyChanging();
                    this._IdUser = value;
                    this.SendPropertyChanged("IdUser");
                    this.OnIdUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CommentUser", DbType = "NVarChar(MAX)")]
        public string CommentUser
        {
            get
            {
                return this._CommentUser;
            }
            set
            {
                if ((this._CommentUser != value))
                {
                    this.OnCommentUserChanging(value);
                    this.SendPropertyChanging();
                    this._CommentUser = value;
                    this.SendPropertyChanged("CommentUser");
                    this.OnCommentUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CertificationStatus", DbType = "Bit NOT NULL")]
        public bool CertificationStatus
        {
            get
            {
                return this._CertificationStatus;
            }
            set
            {
                if ((this._CertificationStatus != value))
                {
                    this.OnCertificationStatusChanging(value);
                    this.SendPropertyChanging();
                    this._CertificationStatus = value;
                    this.SendPropertyChanged("CertificationStatus");
                    this.OnCertificationStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblCertificationVersion", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdUser", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblCertificationVersions.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblCertificationVersions.Add(this);
                        this._IdUser = value.Id;
                    }
                    else
                    {
                        this._IdUser = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPublishCertification_tblCertificationVersion", Storage = "_tblPublishCertification", ThisKey = "IdPublishCertification", OtherKey = "Id", IsForeignKey = true)]
        public tblPublishCertification tblPublishCertification
        {
            get
            {
                return this._tblPublishCertification.Entity;
            }
            set
            {
                tblPublishCertification previousValue = this._tblPublishCertification.Entity;
                if (((previousValue != value)
                            || (this._tblPublishCertification.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblPublishCertification.Entity = null;
                        previousValue.tblCertificationVersions.Remove(this);
                    }
                    this._tblPublishCertification.Entity = value;
                    if ((value != null))
                    {
                        value.tblCertificationVersions.Add(this);
                        this._IdPublishCertification = value.Id;
                    }
                    else
                    {
                        this._IdPublishCertification = default(int);
                    }
                    this.SendPropertyChanged("tblPublishCertification");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblCertificationVersion", Storage = "_tblVersion", ThisKey = "IdVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblCertificationVersions.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblCertificationVersions.Add(this);
                        this._IdVersion = value.Id;
                    }
                    else
                    {
                        this._IdVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblCompanyAriaActivity")]
    public partial class tblCompanyAriaActivity : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdAriaActivity;

        private int _IdOrganizationBonyad;

        private bool _InBonyad;

        private EntityRef<tblAreaActivity> _tblAreaActivity;

        private EntityRef<tblOrganizationBonyad> _tblOrganizationBonyad;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdAriaActivityChanging(int value);
        partial void OnIdAriaActivityChanged();
        partial void OnIdOrganizationBonyadChanging(int value);
        partial void OnIdOrganizationBonyadChanged();
        partial void OnInBonyadChanging(bool value);
        partial void OnInBonyadChanged();
        #endregion

        public tblCompanyAriaActivity()
        {
            this._tblAreaActivity = default(EntityRef<tblAreaActivity>);
            this._tblOrganizationBonyad = default(EntityRef<tblOrganizationBonyad>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdAriaActivity", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdAriaActivity
        {
            get
            {
                return this._IdAriaActivity;
            }
            set
            {
                if ((this._IdAriaActivity != value))
                {
                    if (this._tblAreaActivity.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdAriaActivityChanging(value);
                    this.SendPropertyChanging();
                    this._IdAriaActivity = value;
                    this.SendPropertyChanged("IdAriaActivity");
                    this.OnIdAriaActivityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdOrganizationBonyad", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdOrganizationBonyad
        {
            get
            {
                return this._IdOrganizationBonyad;
            }
            set
            {
                if ((this._IdOrganizationBonyad != value))
                {
                    if (this._tblOrganizationBonyad.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdOrganizationBonyadChanging(value);
                    this.SendPropertyChanging();
                    this._IdOrganizationBonyad = value;
                    this.SendPropertyChanged("IdOrganizationBonyad");
                    this.OnIdOrganizationBonyadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InBonyad", DbType = "Bit NOT NULL", IsPrimaryKey = true)]
        public bool InBonyad
        {
            get
            {
                return this._InBonyad;
            }
            set
            {
                if ((this._InBonyad != value))
                {
                    this.OnInBonyadChanging(value);
                    this.SendPropertyChanging();
                    this._InBonyad = value;
                    this.SendPropertyChanged("InBonyad");
                    this.OnInBonyadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblAreaActivity_tblCompanyAriaActivity", Storage = "_tblAreaActivity", ThisKey = "IdAriaActivity", OtherKey = "id", IsForeignKey = true)]
        public tblAreaActivity tblAreaActivity
        {
            get
            {
                return this._tblAreaActivity.Entity;
            }
            set
            {
                tblAreaActivity previousValue = this._tblAreaActivity.Entity;
                if (((previousValue != value)
                            || (this._tblAreaActivity.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblAreaActivity.Entity = null;
                        previousValue.tblCompanyAriaActivities.Remove(this);
                    }
                    this._tblAreaActivity.Entity = value;
                    if ((value != null))
                    {
                        value.tblCompanyAriaActivities.Add(this);
                        this._IdAriaActivity = value.id;
                    }
                    else
                    {
                        this._IdAriaActivity = default(int);
                    }
                    this.SendPropertyChanged("tblAreaActivity");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblCompanyAriaActivity", Storage = "_tblOrganizationBonyad", ThisKey = "IdOrganizationBonyad", OtherKey = "Id", IsForeignKey = true)]
        public tblOrganizationBonyad tblOrganizationBonyad
        {
            get
            {
                return this._tblOrganizationBonyad.Entity;
            }
            set
            {
                tblOrganizationBonyad previousValue = this._tblOrganizationBonyad.Entity;
                if (((previousValue != value)
                            || (this._tblOrganizationBonyad.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblOrganizationBonyad.Entity = null;
                        previousValue.tblCompanyAriaActivities.Remove(this);
                    }
                    this._tblOrganizationBonyad.Entity = value;
                    if ((value != null))
                    {
                        value.tblCompanyAriaActivities.Add(this);
                        this._IdOrganizationBonyad = value.Id;
                    }
                    else
                    {
                        this._IdOrganizationBonyad = default(int);
                    }
                    this.SendPropertyChanged("tblOrganizationBonyad");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblConsultation")]
    public partial class tblConsultation : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _QuestionerNameNFamily;

        private string _QuestionerEmail;

        private string _Question;

        private System.Nullable<System.DateTime> _QuestionDateTime;

        private string _TrackingCode;

        private string _Answer;

        private System.DateTime _AnswerDateTime;

        private int _IdResponser;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnQuestionerNameNFamilyChanging(string value);
        partial void OnQuestionerNameNFamilyChanged();
        partial void OnQuestionerEmailChanging(string value);
        partial void OnQuestionerEmailChanged();
        partial void OnQuestionChanging(string value);
        partial void OnQuestionChanged();
        partial void OnQuestionDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnQuestionDateTimeChanged();
        partial void OnTrackingCodeChanging(string value);
        partial void OnTrackingCodeChanged();
        partial void OnAnswerChanging(string value);
        partial void OnAnswerChanged();
        partial void OnAnswerDateTimeChanging(System.DateTime value);
        partial void OnAnswerDateTimeChanged();
        partial void OnIdResponserChanging(int value);
        partial void OnIdResponserChanged();
        #endregion

        public tblConsultation()
        {
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QuestionerNameNFamily", DbType = "NVarChar(500)")]
        public string QuestionerNameNFamily
        {
            get
            {
                return this._QuestionerNameNFamily;
            }
            set
            {
                if ((this._QuestionerNameNFamily != value))
                {
                    this.OnQuestionerNameNFamilyChanging(value);
                    this.SendPropertyChanging();
                    this._QuestionerNameNFamily = value;
                    this.SendPropertyChanged("QuestionerNameNFamily");
                    this.OnQuestionerNameNFamilyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QuestionerEmail", DbType = "NVarChar(300)")]
        public string QuestionerEmail
        {
            get
            {
                return this._QuestionerEmail;
            }
            set
            {
                if ((this._QuestionerEmail != value))
                {
                    this.OnQuestionerEmailChanging(value);
                    this.SendPropertyChanging();
                    this._QuestionerEmail = value;
                    this.SendPropertyChanged("QuestionerEmail");
                    this.OnQuestionerEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Question", DbType = "NText", UpdateCheck = UpdateCheck.Never)]
        public string Question
        {
            get
            {
                return this._Question;
            }
            set
            {
                if ((this._Question != value))
                {
                    this.OnQuestionChanging(value);
                    this.SendPropertyChanging();
                    this._Question = value;
                    this.SendPropertyChanged("Question");
                    this.OnQuestionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_QuestionDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> QuestionDateTime
        {
            get
            {
                return this._QuestionDateTime;
            }
            set
            {
                if ((this._QuestionDateTime != value))
                {
                    this.OnQuestionDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._QuestionDateTime = value;
                    this.SendPropertyChanged("QuestionDateTime");
                    this.OnQuestionDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TrackingCode", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string TrackingCode
        {
            get
            {
                return this._TrackingCode;
            }
            set
            {
                if ((this._TrackingCode != value))
                {
                    this.OnTrackingCodeChanging(value);
                    this.SendPropertyChanging();
                    this._TrackingCode = value;
                    this.SendPropertyChanged("TrackingCode");
                    this.OnTrackingCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Answer", DbType = "NText", UpdateCheck = UpdateCheck.Never)]
        public string Answer
        {
            get
            {
                return this._Answer;
            }
            set
            {
                if ((this._Answer != value))
                {
                    this.OnAnswerChanging(value);
                    this.SendPropertyChanging();
                    this._Answer = value;
                    this.SendPropertyChanged("Answer");
                    this.OnAnswerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AnswerDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime AnswerDateTime
        {
            get
            {
                return this._AnswerDateTime;
            }
            set
            {
                if ((this._AnswerDateTime != value))
                {
                    this.OnAnswerDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._AnswerDateTime = value;
                    this.SendPropertyChanged("AnswerDateTime");
                    this.OnAnswerDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdResponser", DbType = "Int NOT NULL")]
        public int IdResponser
        {
            get
            {
                return this._IdResponser;
            }
            set
            {
                if ((this._IdResponser != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdResponserChanging(value);
                    this.SendPropertyChanging();
                    this._IdResponser = value;
                    this.SendPropertyChanged("IdResponser");
                    this.OnIdResponserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblConsultation", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdResponser", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblConsultations.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblConsultations.Add(this);
                        this._IdResponser = value.Id;
                    }
                    else
                    {
                        this._IdResponser = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblCountry")]
    public partial class tblCountry : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private string _LocalName;

        private string _RegionalCode;

        private EntitySet<tblOrganizationBonyad> _tblOrganizationBonyads;

        private EntitySet<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUsers;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnLocalNameChanging(string value);
        partial void OnLocalNameChanged();
        partial void OnRegionalCodeChanging(string value);
        partial void OnRegionalCodeChanged();
        #endregion

        public tblCountry()
        {
            this._tblOrganizationBonyads = new EntitySet<tblOrganizationBonyad>(new Action<tblOrganizationBonyad>(this.attach_tblOrganizationBonyads), new Action<tblOrganizationBonyad>(this.detach_tblOrganizationBonyads));
            this._tblProducerNExclusiveNUsers = new EntitySet<tblProducerNExclusiveNUser>(new Action<tblProducerNExclusiveNUser>(this.attach_tblProducerNExclusiveNUsers), new Action<tblProducerNExclusiveNUser>(this.detach_tblProducerNExclusiveNUsers));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(300) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LocalName", DbType = "NVarChar(300)")]
        public string LocalName
        {
            get
            {
                return this._LocalName;
            }
            set
            {
                if ((this._LocalName != value))
                {
                    this.OnLocalNameChanging(value);
                    this.SendPropertyChanging();
                    this._LocalName = value;
                    this.SendPropertyChanged("LocalName");
                    this.OnLocalNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RegionalCode", DbType = "VarChar(10)")]
        public string RegionalCode
        {
            get
            {
                return this._RegionalCode;
            }
            set
            {
                if ((this._RegionalCode != value))
                {
                    this.OnRegionalCodeChanging(value);
                    this.SendPropertyChanging();
                    this._RegionalCode = value;
                    this.SendPropertyChanged("RegionalCode");
                    this.OnRegionalCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblCountry_tblOrganizationBonyad", Storage = "_tblOrganizationBonyads", ThisKey = "Id", OtherKey = "IdCountry")]
        public EntitySet<tblOrganizationBonyad> tblOrganizationBonyads
        {
            get
            {
                return this._tblOrganizationBonyads;
            }
            set
            {
                this._tblOrganizationBonyads.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblCountry_tblProducerNExclusiveNUser", Storage = "_tblProducerNExclusiveNUsers", ThisKey = "Id", OtherKey = "IdCountry")]
        public EntitySet<tblProducerNExclusiveNUser> tblProducerNExclusiveNUsers
        {
            get
            {
                return this._tblProducerNExclusiveNUsers;
            }
            set
            {
                this._tblProducerNExclusiveNUsers.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblOrganizationBonyads(tblOrganizationBonyad entity)
        {
            this.SendPropertyChanging();
            entity.tblCountry = this;
        }

        private void detach_tblOrganizationBonyads(tblOrganizationBonyad entity)
        {
            this.SendPropertyChanging();
            entity.tblCountry = null;
        }

        private void attach_tblProducerNExclusiveNUsers(tblProducerNExclusiveNUser entity)
        {
            this.SendPropertyChanging();
            entity.tblCountry = this;
        }

        private void detach_tblProducerNExclusiveNUsers(tblProducerNExclusiveNUser entity)
        {
            this.SendPropertyChanging();
            entity.tblCountry = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblDeficiencyType")]
    public partial class tblDeficiencyType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblSourceMedia> _tblSourceMedias;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblDeficiencyType()
        {
            this._tblSourceMedias = new EntitySet<tblSourceMedia>(new Action<tblSourceMedia>(this.attach_tblSourceMedias), new Action<tblSourceMedia>(this.detach_tblSourceMedias));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblDeficiencyType_tblSourceMedia", Storage = "_tblSourceMedias", ThisKey = "Id", OtherKey = "IdDeficiencyType")]
        public EntitySet<tblSourceMedia> tblSourceMedias
        {
            get
            {
                return this._tblSourceMedias;
            }
            set
            {
                this._tblSourceMedias.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblSourceMedias(tblSourceMedia entity)
        {
            this.SendPropertyChanging();
            entity.tblDeficiencyType = this;
        }

        private void detach_tblSourceMedias(tblSourceMedia entity)
        {
            this.SendPropertyChanging();
            entity.tblDeficiencyType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblEditableType")]
    public partial class tblEditableType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblVersion> _tblVersions;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblEditableType()
        {
            this._tblVersions = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions), new Action<tblVersion>(this.detach_tblVersions));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEditableType_tblVersion", Storage = "_tblVersions", ThisKey = "Id", OtherKey = "IdEditableType")]
        public EntitySet<tblVersion> tblVersions
        {
            get
            {
                return this._tblVersions;
            }
            set
            {
                this._tblVersions.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblEditableType = this;
        }

        private void detach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblEditableType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblEsra")]
    public partial class tblEsra : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Age;

        private System.Nullable<int> _IdHead;

        private EntitySet<tblEsra> _tblEsras;

        private EntitySet<tblVersionEsra> _tblVersionEsras;

        private EntitySet<tblVersionEsra> _tblVersionEsras1;

        private EntityRef<tblEsra> _tblEsra1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnAgeChanging(string value);
        partial void OnAgeChanged();
        partial void OnIdHeadChanging(System.Nullable<int> value);
        partial void OnIdHeadChanged();
        #endregion

        public tblEsra()
        {
            this._tblEsras = new EntitySet<tblEsra>(new Action<tblEsra>(this.attach_tblEsras), new Action<tblEsra>(this.detach_tblEsras));
            this._tblVersionEsras = new EntitySet<tblVersionEsra>(new Action<tblVersionEsra>(this.attach_tblVersionEsras), new Action<tblVersionEsra>(this.detach_tblVersionEsras));
            this._tblVersionEsras1 = new EntitySet<tblVersionEsra>(new Action<tblVersionEsra>(this.attach_tblVersionEsras1), new Action<tblVersionEsra>(this.detach_tblVersionEsras1));
            this._tblEsra1 = default(EntityRef<tblEsra>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Age", DbType = "NVarChar(50)")]
        public string Age
        {
            get
            {
                return this._Age;
            }
            set
            {
                if ((this._Age != value))
                {
                    this.OnAgeChanging(value);
                    this.SendPropertyChanging();
                    this._Age = value;
                    this.SendPropertyChanged("Age");
                    this.OnAgeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdHead", DbType = "Int")]
        public System.Nullable<int> IdHead
        {
            get
            {
                return this._IdHead;
            }
            set
            {
                if ((this._IdHead != value))
                {
                    if (this._tblEsra1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdHeadChanging(value);
                    this.SendPropertyChanging();
                    this._IdHead = value;
                    this.SendPropertyChanged("IdHead");
                    this.OnIdHeadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEsra_tblEsra", Storage = "_tblEsras", ThisKey = "Id", OtherKey = "IdHead")]
        public EntitySet<tblEsra> tblEsras
        {
            get
            {
                return this._tblEsras;
            }
            set
            {
                this._tblEsras.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEsra_tblVersionEsra", Storage = "_tblVersionEsras", ThisKey = "Id", OtherKey = "IdEsra")]
        public EntitySet<tblVersionEsra> tblVersionEsras
        {
            get
            {
                return this._tblVersionEsras;
            }
            set
            {
                this._tblVersionEsras.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEsra_tblVersionEsra1", Storage = "_tblVersionEsras1", ThisKey = "Id", OtherKey = "IdSystem")]
        public EntitySet<tblVersionEsra> tblVersionEsras1
        {
            get
            {
                return this._tblVersionEsras1;
            }
            set
            {
                this._tblVersionEsras1.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEsra_tblEsra", Storage = "_tblEsra1", ThisKey = "IdHead", OtherKey = "Id", IsForeignKey = true)]
        public tblEsra tblEsra1
        {
            get
            {
                return this._tblEsra1.Entity;
            }
            set
            {
                tblEsra previousValue = this._tblEsra1.Entity;
                if (((previousValue != value)
                            || (this._tblEsra1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblEsra1.Entity = null;
                        previousValue.tblEsras.Remove(this);
                    }
                    this._tblEsra1.Entity = value;
                    if ((value != null))
                    {
                        value.tblEsras.Add(this);
                        this._IdHead = value.Id;
                    }
                    else
                    {
                        this._IdHead = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblEsra1");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblEsras(tblEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblEsra1 = this;
        }

        private void detach_tblEsras(tblEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblEsra1 = null;
        }

        private void attach_tblVersionEsras(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblEsra = this;
        }

        private void detach_tblVersionEsras(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblEsra = null;
        }

        private void attach_tblVersionEsras1(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblEsra1 = this;
        }

        private void detach_tblVersionEsras1(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblEsra1 = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblEsraStatus")]
    public partial class tblEsraStatus : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblVersionEsra> _tblVersionEsras;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblEsraStatus()
        {
            this._tblVersionEsras = new EntitySet<tblVersionEsra>(new Action<tblVersionEsra>(this.attach_tblVersionEsras), new Action<tblVersionEsra>(this.detach_tblVersionEsras));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEsraStatus_tblVersionEsra", Storage = "_tblVersionEsras", ThisKey = "Id", OtherKey = "IdEsraStatus")]
        public EntitySet<tblVersionEsra> tblVersionEsras
        {
            get
            {
                return this._tblVersionEsras;
            }
            set
            {
                this._tblVersionEsras.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersionEsras(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblEsraStatus = this;
        }

        private void detach_tblVersionEsras(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblEsraStatus = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblEsraType")]
    public partial class tblEsraType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblVersionEsra> _tblVersionEsras;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblEsraType()
        {
            this._tblVersionEsras = new EntitySet<tblVersionEsra>(new Action<tblVersionEsra>(this.attach_tblVersionEsras), new Action<tblVersionEsra>(this.detach_tblVersionEsras));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEsraType_tblVersionEsra", Storage = "_tblVersionEsras", ThisKey = "Id", OtherKey = "IdEsraType")]
        public EntitySet<tblVersionEsra> tblVersionEsras
        {
            get
            {
                return this._tblVersionEsras;
            }
            set
            {
                this._tblVersionEsras.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersionEsras(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblEsraType = this;
        }

        private void detach_tblVersionEsras(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblEsraType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblExclusive")]
    public partial class tblExclusive
    {

        private int _IdExclusive;

        private string _Address;

        public tblExclusive()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdExclusive", DbType = "Int NOT NULL")]
        public int IdExclusive
        {
            get
            {
                return this._IdExclusive;
            }
            set
            {
                if ((this._IdExclusive != value))
                {
                    this._IdExclusive = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "NVarChar(1000)")]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this._Address = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblFile")]
    public partial class tblFile : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private string _URL;

        private System.DateTime _UploadDateTime;

        private string _FileType;

        private EntitySet<tblGamerScreenShot> _tblGamerScreenShots;

        private EntitySet<tblGamerScreenVideo> _tblGamerScreenVideos;

        private EntitySet<tblIndependentGameCreatorFile> _tblIndependentGameCreatorFiles;

        private EntitySet<tblOrganizationBonyadFile> _tblOrganizationBonyadFiles;

        private EntitySet<tblPublishCertificationValet> _tblPublishCertificationValets;

        private EntitySet<tblSourceMediaFile> _tblSourceMediaFiles;

        private EntitySet<tblStaticPageFile> _tblStaticPageFiles;

        private EntitySet<tblUserDocumentFile> _tblUserDocumentFiles;

        private EntitySet<tblVersionAnaliz> _tblVersionAnalizs;

        private EntitySet<tblVersionScreenshot> _tblVersionScreenshots;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnURLChanging(string value);
        partial void OnURLChanged();
        partial void OnUploadDateTimeChanging(System.DateTime value);
        partial void OnUploadDateTimeChanged();
        partial void OnFileTypeChanging(string value);
        partial void OnFileTypeChanged();
        #endregion

        public tblFile()
        {
            this._tblGamerScreenShots = new EntitySet<tblGamerScreenShot>(new Action<tblGamerScreenShot>(this.attach_tblGamerScreenShots), new Action<tblGamerScreenShot>(this.detach_tblGamerScreenShots));
            this._tblGamerScreenVideos = new EntitySet<tblGamerScreenVideo>(new Action<tblGamerScreenVideo>(this.attach_tblGamerScreenVideos), new Action<tblGamerScreenVideo>(this.detach_tblGamerScreenVideos));
            this._tblIndependentGameCreatorFiles = new EntitySet<tblIndependentGameCreatorFile>(new Action<tblIndependentGameCreatorFile>(this.attach_tblIndependentGameCreatorFiles), new Action<tblIndependentGameCreatorFile>(this.detach_tblIndependentGameCreatorFiles));
            this._tblOrganizationBonyadFiles = new EntitySet<tblOrganizationBonyadFile>(new Action<tblOrganizationBonyadFile>(this.attach_tblOrganizationBonyadFiles), new Action<tblOrganizationBonyadFile>(this.detach_tblOrganizationBonyadFiles));
            this._tblPublishCertificationValets = new EntitySet<tblPublishCertificationValet>(new Action<tblPublishCertificationValet>(this.attach_tblPublishCertificationValets), new Action<tblPublishCertificationValet>(this.detach_tblPublishCertificationValets));
            this._tblSourceMediaFiles = new EntitySet<tblSourceMediaFile>(new Action<tblSourceMediaFile>(this.attach_tblSourceMediaFiles), new Action<tblSourceMediaFile>(this.detach_tblSourceMediaFiles));
            this._tblStaticPageFiles = new EntitySet<tblStaticPageFile>(new Action<tblStaticPageFile>(this.attach_tblStaticPageFiles), new Action<tblStaticPageFile>(this.detach_tblStaticPageFiles));
            this._tblUserDocumentFiles = new EntitySet<tblUserDocumentFile>(new Action<tblUserDocumentFile>(this.attach_tblUserDocumentFiles), new Action<tblUserDocumentFile>(this.detach_tblUserDocumentFiles));
            this._tblVersionAnalizs = new EntitySet<tblVersionAnaliz>(new Action<tblVersionAnaliz>(this.attach_tblVersionAnalizs), new Action<tblVersionAnaliz>(this.detach_tblVersionAnalizs));
            this._tblVersionScreenshots = new EntitySet<tblVersionScreenshot>(new Action<tblVersionScreenshot>(this.attach_tblVersionScreenshots), new Action<tblVersionScreenshot>(this.detach_tblVersionScreenshots));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(1000)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_URL", DbType = "NVarChar(2000)")]
        public string URL
        {
            get
            {
                return this._URL;
            }
            set
            {
                if ((this._URL != value))
                {
                    this.OnURLChanging(value);
                    this.SendPropertyChanging();
                    this._URL = value;
                    this.SendPropertyChanged("URL");
                    this.OnURLChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UploadDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime UploadDateTime
        {
            get
            {
                return this._UploadDateTime;
            }
            set
            {
                if ((this._UploadDateTime != value))
                {
                    this.OnUploadDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._UploadDateTime = value;
                    this.SendPropertyChanged("UploadDateTime");
                    this.OnUploadDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FileType", DbType = "VarChar(50)")]
        public string FileType
        {
            get
            {
                return this._FileType;
            }
            set
            {
                if ((this._FileType != value))
                {
                    this.OnFileTypeChanging(value);
                    this.SendPropertyChanging();
                    this._FileType = value;
                    this.SendPropertyChanged("FileType");
                    this.OnFileTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblGamerScreenShot", Storage = "_tblGamerScreenShots", ThisKey = "Id", OtherKey = "IdFile")]
        public EntitySet<tblGamerScreenShot> tblGamerScreenShots
        {
            get
            {
                return this._tblGamerScreenShots;
            }
            set
            {
                this._tblGamerScreenShots.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblGamerScreenVideo", Storage = "_tblGamerScreenVideos", ThisKey = "Id", OtherKey = "IdFile")]
        public EntitySet<tblGamerScreenVideo> tblGamerScreenVideos
        {
            get
            {
                return this._tblGamerScreenVideos;
            }
            set
            {
                this._tblGamerScreenVideos.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblIndependentGameCreatorFile", Storage = "_tblIndependentGameCreatorFiles", ThisKey = "Id", OtherKey = "IdFile")]
        public EntitySet<tblIndependentGameCreatorFile> tblIndependentGameCreatorFiles
        {
            get
            {
                return this._tblIndependentGameCreatorFiles;
            }
            set
            {
                this._tblIndependentGameCreatorFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblOrganizationBonyadFile", Storage = "_tblOrganizationBonyadFiles", ThisKey = "Id", OtherKey = "IdFile")]
        public EntitySet<tblOrganizationBonyadFile> tblOrganizationBonyadFiles
        {
            get
            {
                return this._tblOrganizationBonyadFiles;
            }
            set
            {
                this._tblOrganizationBonyadFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblPublishCertificationValet", Storage = "_tblPublishCertificationValets", ThisKey = "Id", OtherKey = "IdFile")]
        public EntitySet<tblPublishCertificationValet> tblPublishCertificationValets
        {
            get
            {
                return this._tblPublishCertificationValets;
            }
            set
            {
                this._tblPublishCertificationValets.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblSourceMediaFile", Storage = "_tblSourceMediaFiles", ThisKey = "Id", OtherKey = "IdFile")]
        public EntitySet<tblSourceMediaFile> tblSourceMediaFiles
        {
            get
            {
                return this._tblSourceMediaFiles;
            }
            set
            {
                this._tblSourceMediaFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblStaticPageFile", Storage = "_tblStaticPageFiles", ThisKey = "Id", OtherKey = "IdFile")]
        public EntitySet<tblStaticPageFile> tblStaticPageFiles
        {
            get
            {
                return this._tblStaticPageFiles;
            }
            set
            {
                this._tblStaticPageFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblUserDocumentFile", Storage = "_tblUserDocumentFiles", ThisKey = "Id", OtherKey = "IdFile")]
        public EntitySet<tblUserDocumentFile> tblUserDocumentFiles
        {
            get
            {
                return this._tblUserDocumentFiles;
            }
            set
            {
                this._tblUserDocumentFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblVersionAnaliz", Storage = "_tblVersionAnalizs", ThisKey = "Id", OtherKey = "IdFile")]
        public EntitySet<tblVersionAnaliz> tblVersionAnalizs
        {
            get
            {
                return this._tblVersionAnalizs;
            }
            set
            {
                this._tblVersionAnalizs.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblVersionScreenshot", Storage = "_tblVersionScreenshots", ThisKey = "Id", OtherKey = "IdFile")]
        public EntitySet<tblVersionScreenshot> tblVersionScreenshots
        {
            get
            {
                return this._tblVersionScreenshots;
            }
            set
            {
                this._tblVersionScreenshots.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblGamerScreenShots(tblGamerScreenShot entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = this;
        }

        private void detach_tblGamerScreenShots(tblGamerScreenShot entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = null;
        }

        private void attach_tblGamerScreenVideos(tblGamerScreenVideo entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = this;
        }

        private void detach_tblGamerScreenVideos(tblGamerScreenVideo entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = null;
        }

        private void attach_tblIndependentGameCreatorFiles(tblIndependentGameCreatorFile entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = this;
        }

        private void detach_tblIndependentGameCreatorFiles(tblIndependentGameCreatorFile entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = null;
        }

        private void attach_tblOrganizationBonyadFiles(tblOrganizationBonyadFile entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = this;
        }

        private void detach_tblOrganizationBonyadFiles(tblOrganizationBonyadFile entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = null;
        }

        private void attach_tblPublishCertificationValets(tblPublishCertificationValet entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = this;
        }

        private void detach_tblPublishCertificationValets(tblPublishCertificationValet entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = null;
        }

        private void attach_tblSourceMediaFiles(tblSourceMediaFile entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = this;
        }

        private void detach_tblSourceMediaFiles(tblSourceMediaFile entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = null;
        }

        private void attach_tblStaticPageFiles(tblStaticPageFile entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = this;
        }

        private void detach_tblStaticPageFiles(tblStaticPageFile entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = null;
        }

        private void attach_tblUserDocumentFiles(tblUserDocumentFile entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = this;
        }

        private void detach_tblUserDocumentFiles(tblUserDocumentFile entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = null;
        }

        private void attach_tblVersionAnalizs(tblVersionAnaliz entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = this;
        }

        private void detach_tblVersionAnalizs(tblVersionAnaliz entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = null;
        }

        private void attach_tblVersionScreenshots(tblVersionScreenshot entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = this;
        }

        private void detach_tblVersionScreenshots(tblVersionScreenshot entity)
        {
            this.SendPropertyChanging();
            entity.tblFile = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblFounderGroup")]
    public partial class tblFounderGroup : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdOrganizationBonyad;

        private int _IdUser;

        private EntityRef<tblOrganizationBonyad> _tblOrganizationBonyad;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdOrganizationBonyadChanging(int value);
        partial void OnIdOrganizationBonyadChanged();
        partial void OnIdUserChanging(int value);
        partial void OnIdUserChanged();
        #endregion

        public tblFounderGroup()
        {
            this._tblOrganizationBonyad = default(EntityRef<tblOrganizationBonyad>);
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdOrganizationBonyad", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdOrganizationBonyad
        {
            get
            {
                return this._IdOrganizationBonyad;
            }
            set
            {
                if ((this._IdOrganizationBonyad != value))
                {
                    if (this._tblOrganizationBonyad.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdOrganizationBonyadChanging(value);
                    this.SendPropertyChanging();
                    this._IdOrganizationBonyad = value;
                    this.SendPropertyChanged("IdOrganizationBonyad");
                    this.OnIdOrganizationBonyadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdUser", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdUser
        {
            get
            {
                return this._IdUser;
            }
            set
            {
                if ((this._IdUser != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdUserChanging(value);
                    this.SendPropertyChanging();
                    this._IdUser = value;
                    this.SendPropertyChanged("IdUser");
                    this.OnIdUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblFounderGroup", Storage = "_tblOrganizationBonyad", ThisKey = "IdOrganizationBonyad", OtherKey = "Id", IsForeignKey = true)]
        public tblOrganizationBonyad tblOrganizationBonyad
        {
            get
            {
                return this._tblOrganizationBonyad.Entity;
            }
            set
            {
                tblOrganizationBonyad previousValue = this._tblOrganizationBonyad.Entity;
                if (((previousValue != value)
                            || (this._tblOrganizationBonyad.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblOrganizationBonyad.Entity = null;
                        previousValue.tblFounderGroups.Remove(this);
                    }
                    this._tblOrganizationBonyad.Entity = value;
                    if ((value != null))
                    {
                        value.tblFounderGroups.Add(this);
                        this._IdOrganizationBonyad = value.Id;
                    }
                    else
                    {
                        this._IdOrganizationBonyad = default(int);
                    }
                    this.SendPropertyChanged("tblOrganizationBonyad");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblFounderGroup", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdUser", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblFounderGroups.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblFounderGroups.Add(this);
                        this._IdUser = value.Id;
                    }
                    else
                    {
                        this._IdUser = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblGameCategory")]
    public partial class tblGameCategory : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblVersionCategory> _tblVersionCategories;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblGameCategory()
        {
            this._tblVersionCategories = new EntitySet<tblVersionCategory>(new Action<tblVersionCategory>(this.attach_tblVersionCategories), new Action<tblVersionCategory>(this.detach_tblVersionCategories));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblGameCategory_tblVersionCategory", Storage = "_tblVersionCategories", ThisKey = "Id", OtherKey = "IdCategory")]
        public EntitySet<tblVersionCategory> tblVersionCategories
        {
            get
            {
                return this._tblVersionCategories;
            }
            set
            {
                this._tblVersionCategories.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersionCategories(tblVersionCategory entity)
        {
            this.SendPropertyChanging();
            entity.tblGameCategory = this;
        }

        private void detach_tblVersionCategories(tblVersionCategory entity)
        {
            this.SendPropertyChanging();
            entity.tblGameCategory = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblGameCreatorProjects")]
    public partial class tblGameCreatorProject : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private int _IdIndependentGameCreator;

        private string _Title;

        private string _Employer;

        private string _Responsibility;

        private System.DateTime _StartDate;

        private System.DateTime _EndDate;

        private int _IdAreaActivity;

        private string _AreaActivityComment;

        private EntityRef<tblAreaActivity> _tblAreaActivity;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnIdIndependentGameCreatorChanging(int value);
        partial void OnIdIndependentGameCreatorChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        partial void OnEmployerChanging(string value);
        partial void OnEmployerChanged();
        partial void OnResponsibilityChanging(string value);
        partial void OnResponsibilityChanged();
        partial void OnStartDateChanging(System.DateTime value);
        partial void OnStartDateChanged();
        partial void OnEndDateChanging(System.DateTime value);
        partial void OnEndDateChanged();
        partial void OnIdAreaActivityChanging(int value);
        partial void OnIdAreaActivityChanged();
        partial void OnAreaActivityCommentChanging(string value);
        partial void OnAreaActivityCommentChanged();
        #endregion

        public tblGameCreatorProject()
        {
            this._tblAreaActivity = default(EntityRef<tblAreaActivity>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdIndependentGameCreator", DbType = "Int NOT NULL")]
        public int IdIndependentGameCreator
        {
            get
            {
                return this._IdIndependentGameCreator;
            }
            set
            {
                if ((this._IdIndependentGameCreator != value))
                {
                    this.OnIdIndependentGameCreatorChanging(value);
                    this.SendPropertyChanging();
                    this._IdIndependentGameCreator = value;
                    this.SendPropertyChanged("IdIndependentGameCreator");
                    this.OnIdIndependentGameCreatorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "NVarChar(100)")]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if ((this._Title != value))
                {
                    this.OnTitleChanging(value);
                    this.SendPropertyChanging();
                    this._Title = value;
                    this.SendPropertyChanged("Title");
                    this.OnTitleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Employer", DbType = "NVarChar(100)")]
        public string Employer
        {
            get
            {
                return this._Employer;
            }
            set
            {
                if ((this._Employer != value))
                {
                    this.OnEmployerChanging(value);
                    this.SendPropertyChanging();
                    this._Employer = value;
                    this.SendPropertyChanged("Employer");
                    this.OnEmployerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Responsibility", DbType = "NVarChar(100)")]
        public string Responsibility
        {
            get
            {
                return this._Responsibility;
            }
            set
            {
                if ((this._Responsibility != value))
                {
                    this.OnResponsibilityChanging(value);
                    this.SendPropertyChanging();
                    this._Responsibility = value;
                    this.SendPropertyChanged("Responsibility");
                    this.OnResponsibilityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartDate", DbType = "DateTime NOT NULL")]
        public System.DateTime StartDate
        {
            get
            {
                return this._StartDate;
            }
            set
            {
                if ((this._StartDate != value))
                {
                    this.OnStartDateChanging(value);
                    this.SendPropertyChanging();
                    this._StartDate = value;
                    this.SendPropertyChanged("StartDate");
                    this.OnStartDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndDate", DbType = "DateTime NOT NULL")]
        public System.DateTime EndDate
        {
            get
            {
                return this._EndDate;
            }
            set
            {
                if ((this._EndDate != value))
                {
                    this.OnEndDateChanging(value);
                    this.SendPropertyChanging();
                    this._EndDate = value;
                    this.SendPropertyChanged("EndDate");
                    this.OnEndDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdAreaActivity", DbType = "Int NOT NULL")]
        public int IdAreaActivity
        {
            get
            {
                return this._IdAreaActivity;
            }
            set
            {
                if ((this._IdAreaActivity != value))
                {
                    if (this._tblAreaActivity.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdAreaActivityChanging(value);
                    this.SendPropertyChanging();
                    this._IdAreaActivity = value;
                    this.SendPropertyChanged("IdAreaActivity");
                    this.OnIdAreaActivityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AreaActivityComment", DbType = "NVarChar(2000)")]
        public string AreaActivityComment
        {
            get
            {
                return this._AreaActivityComment;
            }
            set
            {
                if ((this._AreaActivityComment != value))
                {
                    this.OnAreaActivityCommentChanging(value);
                    this.SendPropertyChanging();
                    this._AreaActivityComment = value;
                    this.SendPropertyChanged("AreaActivityComment");
                    this.OnAreaActivityCommentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblAreaActivity_tblGameCreatorProject", Storage = "_tblAreaActivity", ThisKey = "IdAreaActivity", OtherKey = "id", IsForeignKey = true)]
        public tblAreaActivity tblAreaActivity
        {
            get
            {
                return this._tblAreaActivity.Entity;
            }
            set
            {
                tblAreaActivity previousValue = this._tblAreaActivity.Entity;
                if (((previousValue != value)
                            || (this._tblAreaActivity.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblAreaActivity.Entity = null;
                        previousValue.tblGameCreatorProjects.Remove(this);
                    }
                    this._tblAreaActivity.Entity = value;
                    if ((value != null))
                    {
                        value.tblGameCreatorProjects.Add(this);
                        this._IdAreaActivity = value.id;
                    }
                    else
                    {
                        this._IdAreaActivity = default(int);
                    }
                    this.SendPropertyChanged("tblAreaActivity");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblGamePart")]
    public partial class tblGamePart : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private string _Name;

        private EntitySet<tblAnalizGamePart> _tblAnalizGameParts;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblGamePart()
        {
            this._tblAnalizGameParts = new EntitySet<tblAnalizGamePart>(new Action<tblAnalizGamePart>(this.attach_tblAnalizGameParts), new Action<tblAnalizGamePart>(this.detach_tblAnalizGameParts));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblGamePart_tblAnalizGamePart", Storage = "_tblAnalizGameParts", ThisKey = "id", OtherKey = "IdGamePart")]
        public EntitySet<tblAnalizGamePart> tblAnalizGameParts
        {
            get
            {
                return this._tblAnalizGameParts;
            }
            set
            {
                this._tblAnalizGameParts.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblAnalizGameParts(tblAnalizGamePart entity)
        {
            this.SendPropertyChanging();
            entity.tblGamePart = this;
        }

        private void detach_tblAnalizGameParts(tblAnalizGamePart entity)
        {
            this.SendPropertyChanging();
            entity.tblGamePart = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblGamerScreenShot")]
    public partial class tblGamerScreenShot : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdSourceMedia;

        private int _IdFile;

        private System.Nullable<int> _IdScreenShotType;

        private EntityRef<tblFile> _tblFile;

        private EntityRef<tblScreenshotType> _tblScreenshotType;

        private EntityRef<tblSourceMedia> _tblSourceMedia;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdSourceMediaChanging(int value);
        partial void OnIdSourceMediaChanged();
        partial void OnIdFileChanging(int value);
        partial void OnIdFileChanged();
        partial void OnIdScreenShotTypeChanging(System.Nullable<int> value);
        partial void OnIdScreenShotTypeChanged();
        #endregion

        public tblGamerScreenShot()
        {
            this._tblFile = default(EntityRef<tblFile>);
            this._tblScreenshotType = default(EntityRef<tblScreenshotType>);
            this._tblSourceMedia = default(EntityRef<tblSourceMedia>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdSourceMedia", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdSourceMedia
        {
            get
            {
                return this._IdSourceMedia;
            }
            set
            {
                if ((this._IdSourceMedia != value))
                {
                    if (this._tblSourceMedia.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdSourceMediaChanging(value);
                    this.SendPropertyChanging();
                    this._IdSourceMedia = value;
                    this.SendPropertyChanged("IdSourceMedia");
                    this.OnIdSourceMediaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdFile", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdFile
        {
            get
            {
                return this._IdFile;
            }
            set
            {
                if ((this._IdFile != value))
                {
                    if (this._tblFile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdFileChanging(value);
                    this.SendPropertyChanging();
                    this._IdFile = value;
                    this.SendPropertyChanged("IdFile");
                    this.OnIdFileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdScreenShotType", DbType = "Int")]
        public System.Nullable<int> IdScreenShotType
        {
            get
            {
                return this._IdScreenShotType;
            }
            set
            {
                if ((this._IdScreenShotType != value))
                {
                    if (this._tblScreenshotType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdScreenShotTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdScreenShotType = value;
                    this.SendPropertyChanged("IdScreenShotType");
                    this.OnIdScreenShotTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblGamerScreenShot", Storage = "_tblFile", ThisKey = "IdFile", OtherKey = "Id", IsForeignKey = true)]
        public tblFile tblFile
        {
            get
            {
                return this._tblFile.Entity;
            }
            set
            {
                tblFile previousValue = this._tblFile.Entity;
                if (((previousValue != value)
                            || (this._tblFile.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblFile.Entity = null;
                        previousValue.tblGamerScreenShots.Remove(this);
                    }
                    this._tblFile.Entity = value;
                    if ((value != null))
                    {
                        value.tblGamerScreenShots.Add(this);
                        this._IdFile = value.Id;
                    }
                    else
                    {
                        this._IdFile = default(int);
                    }
                    this.SendPropertyChanged("tblFile");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblScreenshotType_tblGamerScreenShot", Storage = "_tblScreenshotType", ThisKey = "IdScreenShotType", OtherKey = "Id", IsForeignKey = true)]
        public tblScreenshotType tblScreenshotType
        {
            get
            {
                return this._tblScreenshotType.Entity;
            }
            set
            {
                tblScreenshotType previousValue = this._tblScreenshotType.Entity;
                if (((previousValue != value)
                            || (this._tblScreenshotType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblScreenshotType.Entity = null;
                        previousValue.tblGamerScreenShots.Remove(this);
                    }
                    this._tblScreenshotType.Entity = value;
                    if ((value != null))
                    {
                        value.tblGamerScreenShots.Add(this);
                        this._IdScreenShotType = value.Id;
                    }
                    else
                    {
                        this._IdScreenShotType = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblScreenshotType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceMedia_tblGamerScreenShot", Storage = "_tblSourceMedia", ThisKey = "IdSourceMedia", OtherKey = "Id", IsForeignKey = true)]
        public tblSourceMedia tblSourceMedia
        {
            get
            {
                return this._tblSourceMedia.Entity;
            }
            set
            {
                tblSourceMedia previousValue = this._tblSourceMedia.Entity;
                if (((previousValue != value)
                            || (this._tblSourceMedia.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblSourceMedia.Entity = null;
                        previousValue.tblGamerScreenShots.Remove(this);
                    }
                    this._tblSourceMedia.Entity = value;
                    if ((value != null))
                    {
                        value.tblGamerScreenShots.Add(this);
                        this._IdSourceMedia = value.Id;
                    }
                    else
                    {
                        this._IdSourceMedia = default(int);
                    }
                    this.SendPropertyChanged("tblSourceMedia");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblGamerScreenVideo")]
    public partial class tblGamerScreenVideo : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdSourceMedia;

        private int _IdFile;

        private int _IdPictogramFirstLevel;

        private System.Nullable<int> _IdScreenShotType;

        private string _GamerComment;

        private EntityRef<tblFile> _tblFile;

        private EntityRef<tblPictogram> _tblPictogram;

        private EntityRef<tblScreenshotType> _tblScreenshotType;

        private EntityRef<tblSourceMedia> _tblSourceMedia;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdSourceMediaChanging(int value);
        partial void OnIdSourceMediaChanged();
        partial void OnIdFileChanging(int value);
        partial void OnIdFileChanged();
        partial void OnIdPictogramFirstLevelChanging(int value);
        partial void OnIdPictogramFirstLevelChanged();
        partial void OnIdScreenShotTypeChanging(System.Nullable<int> value);
        partial void OnIdScreenShotTypeChanged();
        partial void OnGamerCommentChanging(string value);
        partial void OnGamerCommentChanged();
        #endregion

        public tblGamerScreenVideo()
        {
            this._tblFile = default(EntityRef<tblFile>);
            this._tblPictogram = default(EntityRef<tblPictogram>);
            this._tblScreenshotType = default(EntityRef<tblScreenshotType>);
            this._tblSourceMedia = default(EntityRef<tblSourceMedia>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdSourceMedia", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdSourceMedia
        {
            get
            {
                return this._IdSourceMedia;
            }
            set
            {
                if ((this._IdSourceMedia != value))
                {
                    if (this._tblSourceMedia.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdSourceMediaChanging(value);
                    this.SendPropertyChanging();
                    this._IdSourceMedia = value;
                    this.SendPropertyChanged("IdSourceMedia");
                    this.OnIdSourceMediaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdFile", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdFile
        {
            get
            {
                return this._IdFile;
            }
            set
            {
                if ((this._IdFile != value))
                {
                    if (this._tblFile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdFileChanging(value);
                    this.SendPropertyChanging();
                    this._IdFile = value;
                    this.SendPropertyChanged("IdFile");
                    this.OnIdFileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdPictogramFirstLevel", DbType = "Int NOT NULL")]
        public int IdPictogramFirstLevel
        {
            get
            {
                return this._IdPictogramFirstLevel;
            }
            set
            {
                if ((this._IdPictogramFirstLevel != value))
                {
                    if (this._tblPictogram.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdPictogramFirstLevelChanging(value);
                    this.SendPropertyChanging();
                    this._IdPictogramFirstLevel = value;
                    this.SendPropertyChanged("IdPictogramFirstLevel");
                    this.OnIdPictogramFirstLevelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdScreenShotType", DbType = "Int")]
        public System.Nullable<int> IdScreenShotType
        {
            get
            {
                return this._IdScreenShotType;
            }
            set
            {
                if ((this._IdScreenShotType != value))
                {
                    if (this._tblScreenshotType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdScreenShotTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdScreenShotType = value;
                    this.SendPropertyChanged("IdScreenShotType");
                    this.OnIdScreenShotTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GamerComment", DbType = "NVarChar(MAX)")]
        public string GamerComment
        {
            get
            {
                return this._GamerComment;
            }
            set
            {
                if ((this._GamerComment != value))
                {
                    this.OnGamerCommentChanging(value);
                    this.SendPropertyChanging();
                    this._GamerComment = value;
                    this.SendPropertyChanged("GamerComment");
                    this.OnGamerCommentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblGamerScreenVideo", Storage = "_tblFile", ThisKey = "IdFile", OtherKey = "Id", IsForeignKey = true)]
        public tblFile tblFile
        {
            get
            {
                return this._tblFile.Entity;
            }
            set
            {
                tblFile previousValue = this._tblFile.Entity;
                if (((previousValue != value)
                            || (this._tblFile.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblFile.Entity = null;
                        previousValue.tblGamerScreenVideos.Remove(this);
                    }
                    this._tblFile.Entity = value;
                    if ((value != null))
                    {
                        value.tblGamerScreenVideos.Add(this);
                        this._IdFile = value.Id;
                    }
                    else
                    {
                        this._IdFile = default(int);
                    }
                    this.SendPropertyChanged("tblFile");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPictogram_tblGamerScreenVideo", Storage = "_tblPictogram", ThisKey = "IdPictogramFirstLevel", OtherKey = "Id", IsForeignKey = true)]
        public tblPictogram tblPictogram
        {
            get
            {
                return this._tblPictogram.Entity;
            }
            set
            {
                tblPictogram previousValue = this._tblPictogram.Entity;
                if (((previousValue != value)
                            || (this._tblPictogram.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblPictogram.Entity = null;
                        previousValue.tblGamerScreenVideos.Remove(this);
                    }
                    this._tblPictogram.Entity = value;
                    if ((value != null))
                    {
                        value.tblGamerScreenVideos.Add(this);
                        this._IdPictogramFirstLevel = value.Id;
                    }
                    else
                    {
                        this._IdPictogramFirstLevel = default(int);
                    }
                    this.SendPropertyChanged("tblPictogram");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblScreenshotType_tblGamerScreenVideo", Storage = "_tblScreenshotType", ThisKey = "IdScreenShotType", OtherKey = "Id", IsForeignKey = true)]
        public tblScreenshotType tblScreenshotType
        {
            get
            {
                return this._tblScreenshotType.Entity;
            }
            set
            {
                tblScreenshotType previousValue = this._tblScreenshotType.Entity;
                if (((previousValue != value)
                            || (this._tblScreenshotType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblScreenshotType.Entity = null;
                        previousValue.tblGamerScreenVideos.Remove(this);
                    }
                    this._tblScreenshotType.Entity = value;
                    if ((value != null))
                    {
                        value.tblGamerScreenVideos.Add(this);
                        this._IdScreenShotType = value.Id;
                    }
                    else
                    {
                        this._IdScreenShotType = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblScreenshotType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceMedia_tblGamerScreenVideo", Storage = "_tblSourceMedia", ThisKey = "IdSourceMedia", OtherKey = "Id", IsForeignKey = true)]
        public tblSourceMedia tblSourceMedia
        {
            get
            {
                return this._tblSourceMedia.Entity;
            }
            set
            {
                tblSourceMedia previousValue = this._tblSourceMedia.Entity;
                if (((previousValue != value)
                            || (this._tblSourceMedia.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblSourceMedia.Entity = null;
                        previousValue.tblGamerScreenVideos.Remove(this);
                    }
                    this._tblSourceMedia.Entity = value;
                    if ((value != null))
                    {
                        value.tblGamerScreenVideos.Add(this);
                        this._IdSourceMedia = value.Id;
                    }
                    else
                    {
                        this._IdSourceMedia = default(int);
                    }
                    this.SendPropertyChanged("tblSourceMedia");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblIdentificationType")]
    public partial class tblIdentificationType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblIndependentGameCreatorFile> _tblIndependentGameCreatorFiles;

        private EntitySet<tblOrganizationBonyadFile> _tblOrganizationBonyadFiles;

        private EntitySet<tblUserDocumentFile> _tblUserDocumentFiles;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblIdentificationType()
        {
            this._tblIndependentGameCreatorFiles = new EntitySet<tblIndependentGameCreatorFile>(new Action<tblIndependentGameCreatorFile>(this.attach_tblIndependentGameCreatorFiles), new Action<tblIndependentGameCreatorFile>(this.detach_tblIndependentGameCreatorFiles));
            this._tblOrganizationBonyadFiles = new EntitySet<tblOrganizationBonyadFile>(new Action<tblOrganizationBonyadFile>(this.attach_tblOrganizationBonyadFiles), new Action<tblOrganizationBonyadFile>(this.detach_tblOrganizationBonyadFiles));
            this._tblUserDocumentFiles = new EntitySet<tblUserDocumentFile>(new Action<tblUserDocumentFile>(this.attach_tblUserDocumentFiles), new Action<tblUserDocumentFile>(this.detach_tblUserDocumentFiles));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblIdentificationType_tblIndependentGameCreatorFile", Storage = "_tblIndependentGameCreatorFiles", ThisKey = "Id", OtherKey = "IdIdentificationType")]
        public EntitySet<tblIndependentGameCreatorFile> tblIndependentGameCreatorFiles
        {
            get
            {
                return this._tblIndependentGameCreatorFiles;
            }
            set
            {
                this._tblIndependentGameCreatorFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblIdentificationType_tblOrganizationBonyadFile", Storage = "_tblOrganizationBonyadFiles", ThisKey = "Id", OtherKey = "IdIdentificationType")]
        public EntitySet<tblOrganizationBonyadFile> tblOrganizationBonyadFiles
        {
            get
            {
                return this._tblOrganizationBonyadFiles;
            }
            set
            {
                this._tblOrganizationBonyadFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblIdentificationType_tblUserDocumentFile", Storage = "_tblUserDocumentFiles", ThisKey = "Id", OtherKey = "IdIdentificationType")]
        public EntitySet<tblUserDocumentFile> tblUserDocumentFiles
        {
            get
            {
                return this._tblUserDocumentFiles;
            }
            set
            {
                this._tblUserDocumentFiles.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblIndependentGameCreatorFiles(tblIndependentGameCreatorFile entity)
        {
            this.SendPropertyChanging();
            entity.tblIdentificationType = this;
        }

        private void detach_tblIndependentGameCreatorFiles(tblIndependentGameCreatorFile entity)
        {
            this.SendPropertyChanging();
            entity.tblIdentificationType = null;
        }

        private void attach_tblOrganizationBonyadFiles(tblOrganizationBonyadFile entity)
        {
            this.SendPropertyChanging();
            entity.tblIdentificationType = this;
        }

        private void detach_tblOrganizationBonyadFiles(tblOrganizationBonyadFile entity)
        {
            this.SendPropertyChanging();
            entity.tblIdentificationType = null;
        }

        private void attach_tblUserDocumentFiles(tblUserDocumentFile entity)
        {
            this.SendPropertyChanging();
            entity.tblIdentificationType = this;
        }

        private void detach_tblUserDocumentFiles(tblUserDocumentFile entity)
        {
            this.SendPropertyChanging();
            entity.tblIdentificationType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblIndependentGameCreator")]
    public partial class tblIndependentGameCreator
    {

        private int _IdUser;

        private string _Address;

        private string _Email;

        public tblIndependentGameCreator()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdUser", DbType = "Int NOT NULL")]
        public int IdUser
        {
            get
            {
                return this._IdUser;
            }
            set
            {
                if ((this._IdUser != value))
                {
                    this._IdUser = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "NVarChar(1000)")]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this._Address = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "NVarChar(500)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this._Email = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblIndependentGameCreatorFile")]
    public partial class tblIndependentGameCreatorFile : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdIndependentGameCreator;

        private int _IdFile;

        private int _IdIdentificationType;

        private EntityRef<tblFile> _tblFile;

        private EntityRef<tblIdentificationType> _tblIdentificationType;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdIndependentGameCreatorChanging(int value);
        partial void OnIdIndependentGameCreatorChanged();
        partial void OnIdFileChanging(int value);
        partial void OnIdFileChanged();
        partial void OnIdIdentificationTypeChanging(int value);
        partial void OnIdIdentificationTypeChanged();
        #endregion

        public tblIndependentGameCreatorFile()
        {
            this._tblFile = default(EntityRef<tblFile>);
            this._tblIdentificationType = default(EntityRef<tblIdentificationType>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdIndependentGameCreator", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdIndependentGameCreator
        {
            get
            {
                return this._IdIndependentGameCreator;
            }
            set
            {
                if ((this._IdIndependentGameCreator != value))
                {
                    this.OnIdIndependentGameCreatorChanging(value);
                    this.SendPropertyChanging();
                    this._IdIndependentGameCreator = value;
                    this.SendPropertyChanged("IdIndependentGameCreator");
                    this.OnIdIndependentGameCreatorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdFile", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdFile
        {
            get
            {
                return this._IdFile;
            }
            set
            {
                if ((this._IdFile != value))
                {
                    if (this._tblFile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdFileChanging(value);
                    this.SendPropertyChanging();
                    this._IdFile = value;
                    this.SendPropertyChanged("IdFile");
                    this.OnIdFileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdIdentificationType", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdIdentificationType
        {
            get
            {
                return this._IdIdentificationType;
            }
            set
            {
                if ((this._IdIdentificationType != value))
                {
                    if (this._tblIdentificationType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdIdentificationTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdIdentificationType = value;
                    this.SendPropertyChanged("IdIdentificationType");
                    this.OnIdIdentificationTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblIndependentGameCreatorFile", Storage = "_tblFile", ThisKey = "IdFile", OtherKey = "Id", IsForeignKey = true)]
        public tblFile tblFile
        {
            get
            {
                return this._tblFile.Entity;
            }
            set
            {
                tblFile previousValue = this._tblFile.Entity;
                if (((previousValue != value)
                            || (this._tblFile.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblFile.Entity = null;
                        previousValue.tblIndependentGameCreatorFiles.Remove(this);
                    }
                    this._tblFile.Entity = value;
                    if ((value != null))
                    {
                        value.tblIndependentGameCreatorFiles.Add(this);
                        this._IdFile = value.Id;
                    }
                    else
                    {
                        this._IdFile = default(int);
                    }
                    this.SendPropertyChanged("tblFile");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblIdentificationType_tblIndependentGameCreatorFile", Storage = "_tblIdentificationType", ThisKey = "IdIdentificationType", OtherKey = "Id", IsForeignKey = true)]
        public tblIdentificationType tblIdentificationType
        {
            get
            {
                return this._tblIdentificationType.Entity;
            }
            set
            {
                tblIdentificationType previousValue = this._tblIdentificationType.Entity;
                if (((previousValue != value)
                            || (this._tblIdentificationType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblIdentificationType.Entity = null;
                        previousValue.tblIndependentGameCreatorFiles.Remove(this);
                    }
                    this._tblIdentificationType.Entity = value;
                    if ((value != null))
                    {
                        value.tblIndependentGameCreatorFiles.Add(this);
                        this._IdIdentificationType = value.Id;
                    }
                    else
                    {
                        this._IdIdentificationType = default(int);
                    }
                    this.SendPropertyChanged("tblIdentificationType");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblLanguage")]
    public partial class tblLanguage : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private string _LocalName;

        private EntitySet<tblVersion> _tblVersions;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnLocalNameChanging(string value);
        partial void OnLocalNameChanged();
        #endregion

        public tblLanguage()
        {
            this._tblVersions = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions), new Action<tblVersion>(this.detach_tblVersions));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(300) NOT NULL", CanBeNull = false)]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LocalName", DbType = "NVarChar(300)")]
        public string LocalName
        {
            get
            {
                return this._LocalName;
            }
            set
            {
                if ((this._LocalName != value))
                {
                    this.OnLocalNameChanging(value);
                    this.SendPropertyChanging();
                    this._LocalName = value;
                    this.SendPropertyChanged("LocalName");
                    this.OnLocalNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblLanguage_tblVersion", Storage = "_tblVersions", ThisKey = "Id", OtherKey = "IdLanguage")]
        public EntitySet<tblVersion> tblVersions
        {
            get
            {
                return this._tblVersions;
            }
            set
            {
                this._tblVersions.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblLanguage = this;
        }

        private void detach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblLanguage = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblLegalProducer")]
    public partial class tblLegalProducer
    {

        private int _IdProducer;

        private string _Fax;

        private string _CEO;

        private bool _IsIndependent;

        public tblLegalProducer()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdProducer", DbType = "Int NOT NULL")]
        public int IdProducer
        {
            get
            {
                return this._IdProducer;
            }
            set
            {
                if ((this._IdProducer != value))
                {
                    this._IdProducer = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fax", DbType = "VarChar(50)")]
        public string Fax
        {
            get
            {
                return this._Fax;
            }
            set
            {
                if ((this._Fax != value))
                {
                    this._Fax = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CEO", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string CEO
        {
            get
            {
                return this._CEO;
            }
            set
            {
                if ((this._CEO != value))
                {
                    this._CEO = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsIndependent", DbType = "Bit NOT NULL")]
        public bool IsIndependent
        {
            get
            {
                return this._IsIndependent;
            }
            set
            {
                if ((this._IsIndependent != value))
                {
                    this._IsIndependent = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblMilitary")]
    public partial class tblMilitary : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUsers;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblMilitary()
        {
            this._tblProducerNExclusiveNUsers = new EntitySet<tblProducerNExclusiveNUser>(new Action<tblProducerNExclusiveNUser>(this.attach_tblProducerNExclusiveNUsers), new Action<tblProducerNExclusiveNUser>(this.detach_tblProducerNExclusiveNUsers));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblMilitary_tblProducerNExclusiveNUser", Storage = "_tblProducerNExclusiveNUsers", ThisKey = "Id", OtherKey = "IdNezamVazife")]
        public EntitySet<tblProducerNExclusiveNUser> tblProducerNExclusiveNUsers
        {
            get
            {
                return this._tblProducerNExclusiveNUsers;
            }
            set
            {
                this._tblProducerNExclusiveNUsers.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblProducerNExclusiveNUsers(tblProducerNExclusiveNUser entity)
        {
            this.SendPropertyChanging();
            entity.tblMilitary = this;
        }

        private void detach_tblProducerNExclusiveNUsers(tblProducerNExclusiveNUser entity)
        {
            this.SendPropertyChanging();
            entity.tblMilitary = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblOrganizationBonyad")]
    public partial class tblOrganizationBonyad : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _RegistrationNumber;

        private System.Nullable<System.DateTime> _RegistrationDateTime;

        private int _IdCountry;

        private System.Nullable<int> _IdCEO;

        private string _NationalID;

        private System.Nullable<System.DateTime> _BusinessLicensesExpireDateTime;

        private string _PostalCode;

        private bool _Allowed;

        private System.Nullable<int> _IdForeignPublisher;

        private bool _IsCommercial;

        private string _LicenseNumber;

        private EntitySet<tblCompanyAriaActivity> _tblCompanyAriaActivities;

        private EntitySet<tblFounderGroup> _tblFounderGroups;

        private EntitySet<tblOrganizationBonyad> _tblOrganizationBonyads;

        private EntitySet<tblOrganizationBonyadFile> _tblOrganizationBonyadFiles;

        private EntitySet<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUsers;

        private EntitySet<tblVersion> _tblVersions;

        private EntitySet<tblGame> _tblGames;

        private EntityRef<tblCountry> _tblCountry;

        private EntityRef<tblOrganizationBonyad> _tblOrganizationBonyad1;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnRegistrationNumberChanging(string value);
        partial void OnRegistrationNumberChanged();
        partial void OnRegistrationDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnRegistrationDateTimeChanged();
        partial void OnIdCountryChanging(int value);
        partial void OnIdCountryChanged();
        partial void OnIdCEOChanging(System.Nullable<int> value);
        partial void OnIdCEOChanged();
        partial void OnNationalIDChanging(string value);
        partial void OnNationalIDChanged();
        partial void OnBusinessLicensesExpireDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnBusinessLicensesExpireDateTimeChanged();
        partial void OnPostalCodeChanging(string value);
        partial void OnPostalCodeChanged();
        partial void OnAllowedChanging(bool value);
        partial void OnAllowedChanged();
        partial void OnIdForeignPublisherChanging(System.Nullable<int> value);
        partial void OnIdForeignPublisherChanged();
        partial void OnIsCommercialChanging(bool value);
        partial void OnIsCommercialChanged();
        partial void OnLicenseNumberChanging(string value);
        partial void OnLicenseNumberChanged();
        #endregion

        public tblOrganizationBonyad()
        {
            this._tblCompanyAriaActivities = new EntitySet<tblCompanyAriaActivity>(new Action<tblCompanyAriaActivity>(this.attach_tblCompanyAriaActivities), new Action<tblCompanyAriaActivity>(this.detach_tblCompanyAriaActivities));
            this._tblFounderGroups = new EntitySet<tblFounderGroup>(new Action<tblFounderGroup>(this.attach_tblFounderGroups), new Action<tblFounderGroup>(this.detach_tblFounderGroups));
            this._tblOrganizationBonyads = new EntitySet<tblOrganizationBonyad>(new Action<tblOrganizationBonyad>(this.attach_tblOrganizationBonyads), new Action<tblOrganizationBonyad>(this.detach_tblOrganizationBonyads));
            this._tblOrganizationBonyadFiles = new EntitySet<tblOrganizationBonyadFile>(new Action<tblOrganizationBonyadFile>(this.attach_tblOrganizationBonyadFiles), new Action<tblOrganizationBonyadFile>(this.detach_tblOrganizationBonyadFiles));
            this._tblProducerNExclusiveNUsers = new EntitySet<tblProducerNExclusiveNUser>(new Action<tblProducerNExclusiveNUser>(this.attach_tblProducerNExclusiveNUsers), new Action<tblProducerNExclusiveNUser>(this.detach_tblProducerNExclusiveNUsers));
            this._tblVersions = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions), new Action<tblVersion>(this.detach_tblVersions));
            this._tblGames = new EntitySet<tblGame>(new Action<tblGame>(this.attach_tblGames), new Action<tblGame>(this.detach_tblGames));
            this._tblCountry = default(EntityRef<tblCountry>);
            this._tblOrganizationBonyad1 = default(EntityRef<tblOrganizationBonyad>);
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RegistrationNumber", DbType = "NVarChar(50)")]
        public string RegistrationNumber
        {
            get
            {
                return this._RegistrationNumber;
            }
            set
            {
                if ((this._RegistrationNumber != value))
                {
                    this.OnRegistrationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._RegistrationNumber = value;
                    this.SendPropertyChanged("RegistrationNumber");
                    this.OnRegistrationNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RegistrationDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> RegistrationDateTime
        {
            get
            {
                return this._RegistrationDateTime;
            }
            set
            {
                if ((this._RegistrationDateTime != value))
                {
                    this.OnRegistrationDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._RegistrationDateTime = value;
                    this.SendPropertyChanged("RegistrationDateTime");
                    this.OnRegistrationDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdCountry", DbType = "Int NOT NULL")]
        public int IdCountry
        {
            get
            {
                return this._IdCountry;
            }
            set
            {
                if ((this._IdCountry != value))
                {
                    if (this._tblCountry.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdCountryChanging(value);
                    this.SendPropertyChanging();
                    this._IdCountry = value;
                    this.SendPropertyChanged("IdCountry");
                    this.OnIdCountryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdCEO", DbType = "Int")]
        public System.Nullable<int> IdCEO
        {
            get
            {
                return this._IdCEO;
            }
            set
            {
                if ((this._IdCEO != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdCEOChanging(value);
                    this.SendPropertyChanging();
                    this._IdCEO = value;
                    this.SendPropertyChanged("IdCEO");
                    this.OnIdCEOChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NationalID", DbType = "NVarChar(50)")]
        public string NationalID
        {
            get
            {
                return this._NationalID;
            }
            set
            {
                if ((this._NationalID != value))
                {
                    this.OnNationalIDChanging(value);
                    this.SendPropertyChanging();
                    this._NationalID = value;
                    this.SendPropertyChanged("NationalID");
                    this.OnNationalIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BusinessLicensesExpireDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> BusinessLicensesExpireDateTime
        {
            get
            {
                return this._BusinessLicensesExpireDateTime;
            }
            set
            {
                if ((this._BusinessLicensesExpireDateTime != value))
                {
                    this.OnBusinessLicensesExpireDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._BusinessLicensesExpireDateTime = value;
                    this.SendPropertyChanged("BusinessLicensesExpireDateTime");
                    this.OnBusinessLicensesExpireDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PostalCode", DbType = "Char(10)")]
        public string PostalCode
        {
            get
            {
                return this._PostalCode;
            }
            set
            {
                if ((this._PostalCode != value))
                {
                    this.OnPostalCodeChanging(value);
                    this.SendPropertyChanging();
                    this._PostalCode = value;
                    this.SendPropertyChanged("PostalCode");
                    this.OnPostalCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Allowed", DbType = "Bit NOT NULL")]
        public bool Allowed
        {
            get
            {
                return this._Allowed;
            }
            set
            {
                if ((this._Allowed != value))
                {
                    this.OnAllowedChanging(value);
                    this.SendPropertyChanging();
                    this._Allowed = value;
                    this.SendPropertyChanged("Allowed");
                    this.OnAllowedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdForeignPublisher", DbType = "Int")]
        public System.Nullable<int> IdForeignPublisher
        {
            get
            {
                return this._IdForeignPublisher;
            }
            set
            {
                if ((this._IdForeignPublisher != value))
                {
                    if (this._tblOrganizationBonyad1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdForeignPublisherChanging(value);
                    this.SendPropertyChanging();
                    this._IdForeignPublisher = value;
                    this.SendPropertyChanged("IdForeignPublisher");
                    this.OnIdForeignPublisherChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsCommercial", DbType = "Bit NOT NULL")]
        public bool IsCommercial
        {
            get
            {
                return this._IsCommercial;
            }
            set
            {
                if ((this._IsCommercial != value))
                {
                    this.OnIsCommercialChanging(value);
                    this.SendPropertyChanging();
                    this._IsCommercial = value;
                    this.SendPropertyChanged("IsCommercial");
                    this.OnIsCommercialChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LicenseNumber", DbType = "NVarChar(100)")]
        public string LicenseNumber
        {
            get
            {
                return this._LicenseNumber;
            }
            set
            {
                if ((this._LicenseNumber != value))
                {
                    this.OnLicenseNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LicenseNumber = value;
                    this.SendPropertyChanged("LicenseNumber");
                    this.OnLicenseNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblCompanyAriaActivity", Storage = "_tblCompanyAriaActivities", ThisKey = "Id", OtherKey = "IdOrganizationBonyad")]
        public EntitySet<tblCompanyAriaActivity> tblCompanyAriaActivities
        {
            get
            {
                return this._tblCompanyAriaActivities;
            }
            set
            {
                this._tblCompanyAriaActivities.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblFounderGroup", Storage = "_tblFounderGroups", ThisKey = "Id", OtherKey = "IdOrganizationBonyad")]
        public EntitySet<tblFounderGroup> tblFounderGroups
        {
            get
            {
                return this._tblFounderGroups;
            }
            set
            {
                this._tblFounderGroups.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblOrganizationBonyad", Storage = "_tblOrganizationBonyads", ThisKey = "Id", OtherKey = "IdForeignPublisher")]
        public EntitySet<tblOrganizationBonyad> tblOrganizationBonyads
        {
            get
            {
                return this._tblOrganizationBonyads;
            }
            set
            {
                this._tblOrganizationBonyads.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblOrganizationBonyadFile", Storage = "_tblOrganizationBonyadFiles", ThisKey = "Id", OtherKey = "IdOrganizationBonyad")]
        public EntitySet<tblOrganizationBonyadFile> tblOrganizationBonyadFiles
        {
            get
            {
                return this._tblOrganizationBonyadFiles;
            }
            set
            {
                this._tblOrganizationBonyadFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblProducerNExclusiveNUser", Storage = "_tblProducerNExclusiveNUsers", ThisKey = "Id", OtherKey = "IdOrganization")]
        public EntitySet<tblProducerNExclusiveNUser> tblProducerNExclusiveNUsers
        {
            get
            {
                return this._tblProducerNExclusiveNUsers;
            }
            set
            {
                this._tblProducerNExclusiveNUsers.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblVersion", Storage = "_tblVersions", ThisKey = "Id", OtherKey = "IdProducer")]
        public EntitySet<tblVersion> tblVersions
        {
            get
            {
                return this._tblVersions;
            }
            set
            {
                this._tblVersions.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblGame", Storage = "_tblGames", ThisKey = "Id", OtherKey = "IdProducer")]
        public EntitySet<tblGame> tblGames
        {
            get
            {
                return this._tblGames;
            }
            set
            {
                this._tblGames.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblCountry_tblOrganizationBonyad", Storage = "_tblCountry", ThisKey = "IdCountry", OtherKey = "Id", IsForeignKey = true)]
        public tblCountry tblCountry
        {
            get
            {
                return this._tblCountry.Entity;
            }
            set
            {
                tblCountry previousValue = this._tblCountry.Entity;
                if (((previousValue != value)
                            || (this._tblCountry.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblCountry.Entity = null;
                        previousValue.tblOrganizationBonyads.Remove(this);
                    }
                    this._tblCountry.Entity = value;
                    if ((value != null))
                    {
                        value.tblOrganizationBonyads.Add(this);
                        this._IdCountry = value.Id;
                    }
                    else
                    {
                        this._IdCountry = default(int);
                    }
                    this.SendPropertyChanged("tblCountry");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblOrganizationBonyad", Storage = "_tblOrganizationBonyad1", ThisKey = "IdForeignPublisher", OtherKey = "Id", IsForeignKey = true)]
        public tblOrganizationBonyad tblOrganizationBonyad1
        {
            get
            {
                return this._tblOrganizationBonyad1.Entity;
            }
            set
            {
                tblOrganizationBonyad previousValue = this._tblOrganizationBonyad1.Entity;
                if (((previousValue != value)
                            || (this._tblOrganizationBonyad1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblOrganizationBonyad1.Entity = null;
                        previousValue.tblOrganizationBonyads.Remove(this);
                    }
                    this._tblOrganizationBonyad1.Entity = value;
                    if ((value != null))
                    {
                        value.tblOrganizationBonyads.Add(this);
                        this._IdForeignPublisher = value.Id;
                    }
                    else
                    {
                        this._IdForeignPublisher = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblOrganizationBonyad1");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblOrganizationBonyad", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdCEO", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblOrganizationBonyads.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblOrganizationBonyads.Add(this);
                        this._IdCEO = value.Id;
                    }
                    else
                    {
                        this._IdCEO = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblCompanyAriaActivities(tblCompanyAriaActivity entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = this;
        }

        private void detach_tblCompanyAriaActivities(tblCompanyAriaActivity entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = null;
        }

        private void attach_tblFounderGroups(tblFounderGroup entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = this;
        }

        private void detach_tblFounderGroups(tblFounderGroup entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = null;
        }

        private void attach_tblOrganizationBonyads(tblOrganizationBonyad entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad1 = this;
        }

        private void detach_tblOrganizationBonyads(tblOrganizationBonyad entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad1 = null;
        }

        private void attach_tblOrganizationBonyadFiles(tblOrganizationBonyadFile entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = this;
        }

        private void detach_tblOrganizationBonyadFiles(tblOrganizationBonyadFile entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = null;
        }

        private void attach_tblProducerNExclusiveNUsers(tblProducerNExclusiveNUser entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = this;
        }

        private void detach_tblProducerNExclusiveNUsers(tblProducerNExclusiveNUser entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = null;
        }

        private void attach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = this;
        }

        private void detach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = null;
        }

        private void attach_tblGames(tblGame entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = this;
        }

        private void detach_tblGames(tblGame entity)
        {
            this.SendPropertyChanging();
            entity.tblOrganizationBonyad = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblOrganizationBonyadFile")]
    public partial class tblOrganizationBonyadFile : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdOrganizationBonyad;

        private int _IdFile;

        private int _IdIdentificationType;

        private string _Comment;

        private EntityRef<tblFile> _tblFile;

        private EntityRef<tblIdentificationType> _tblIdentificationType;

        private EntityRef<tblOrganizationBonyad> _tblOrganizationBonyad;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdOrganizationBonyadChanging(int value);
        partial void OnIdOrganizationBonyadChanged();
        partial void OnIdFileChanging(int value);
        partial void OnIdFileChanged();
        partial void OnIdIdentificationTypeChanging(int value);
        partial void OnIdIdentificationTypeChanged();
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
        #endregion

        public tblOrganizationBonyadFile()
        {
            this._tblFile = default(EntityRef<tblFile>);
            this._tblIdentificationType = default(EntityRef<tblIdentificationType>);
            this._tblOrganizationBonyad = default(EntityRef<tblOrganizationBonyad>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdOrganizationBonyad", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdOrganizationBonyad
        {
            get
            {
                return this._IdOrganizationBonyad;
            }
            set
            {
                if ((this._IdOrganizationBonyad != value))
                {
                    if (this._tblOrganizationBonyad.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdOrganizationBonyadChanging(value);
                    this.SendPropertyChanging();
                    this._IdOrganizationBonyad = value;
                    this.SendPropertyChanged("IdOrganizationBonyad");
                    this.OnIdOrganizationBonyadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdFile", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdFile
        {
            get
            {
                return this._IdFile;
            }
            set
            {
                if ((this._IdFile != value))
                {
                    if (this._tblFile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdFileChanging(value);
                    this.SendPropertyChanging();
                    this._IdFile = value;
                    this.SendPropertyChanged("IdFile");
                    this.OnIdFileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdIdentificationType", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdIdentificationType
        {
            get
            {
                return this._IdIdentificationType;
            }
            set
            {
                if ((this._IdIdentificationType != value))
                {
                    if (this._tblIdentificationType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdIdentificationTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdIdentificationType = value;
                    this.SendPropertyChanged("IdIdentificationType");
                    this.OnIdIdentificationTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Comment", DbType = "NVarChar(MAX)")]
        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                if ((this._Comment != value))
                {
                    this.OnCommentChanging(value);
                    this.SendPropertyChanging();
                    this._Comment = value;
                    this.SendPropertyChanged("Comment");
                    this.OnCommentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblOrganizationBonyadFile", Storage = "_tblFile", ThisKey = "IdFile", OtherKey = "Id", IsForeignKey = true)]
        public tblFile tblFile
        {
            get
            {
                return this._tblFile.Entity;
            }
            set
            {
                tblFile previousValue = this._tblFile.Entity;
                if (((previousValue != value)
                            || (this._tblFile.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblFile.Entity = null;
                        previousValue.tblOrganizationBonyadFiles.Remove(this);
                    }
                    this._tblFile.Entity = value;
                    if ((value != null))
                    {
                        value.tblOrganizationBonyadFiles.Add(this);
                        this._IdFile = value.Id;
                    }
                    else
                    {
                        this._IdFile = default(int);
                    }
                    this.SendPropertyChanged("tblFile");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblIdentificationType_tblOrganizationBonyadFile", Storage = "_tblIdentificationType", ThisKey = "IdIdentificationType", OtherKey = "Id", IsForeignKey = true)]
        public tblIdentificationType tblIdentificationType
        {
            get
            {
                return this._tblIdentificationType.Entity;
            }
            set
            {
                tblIdentificationType previousValue = this._tblIdentificationType.Entity;
                if (((previousValue != value)
                            || (this._tblIdentificationType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblIdentificationType.Entity = null;
                        previousValue.tblOrganizationBonyadFiles.Remove(this);
                    }
                    this._tblIdentificationType.Entity = value;
                    if ((value != null))
                    {
                        value.tblOrganizationBonyadFiles.Add(this);
                        this._IdIdentificationType = value.Id;
                    }
                    else
                    {
                        this._IdIdentificationType = default(int);
                    }
                    this.SendPropertyChanged("tblIdentificationType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblOrganizationBonyadFile", Storage = "_tblOrganizationBonyad", ThisKey = "IdOrganizationBonyad", OtherKey = "Id", IsForeignKey = true)]
        public tblOrganizationBonyad tblOrganizationBonyad
        {
            get
            {
                return this._tblOrganizationBonyad.Entity;
            }
            set
            {
                tblOrganizationBonyad previousValue = this._tblOrganizationBonyad.Entity;
                if (((previousValue != value)
                            || (this._tblOrganizationBonyad.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblOrganizationBonyad.Entity = null;
                        previousValue.tblOrganizationBonyadFiles.Remove(this);
                    }
                    this._tblOrganizationBonyad.Entity = value;
                    if ((value != null))
                    {
                        value.tblOrganizationBonyadFiles.Add(this);
                        this._IdOrganizationBonyad = value.Id;
                    }
                    else
                    {
                        this._IdOrganizationBonyad = default(int);
                    }
                    this.SendPropertyChanged("tblOrganizationBonyad");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblPictogram")]
    public partial class tblPictogram : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private System.Nullable<bool> _Type;

        private System.Nullable<int> _IdHead;

        private EntitySet<tblGamerScreenVideo> _tblGamerScreenVideos;

        private EntitySet<tblPictogram> _tblPictograms;

        private EntitySet<tblVersionAnaliz> _tblVersionAnalizs;

        private EntitySet<tblVersionPictogram> _tblVersionPictograms;

        private EntityRef<tblPictogram> _tblPictogram1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnTypeChanging(System.Nullable<bool> value);
        partial void OnTypeChanged();
        partial void OnIdHeadChanging(System.Nullable<int> value);
        partial void OnIdHeadChanged();
        #endregion

        public tblPictogram()
        {
            this._tblGamerScreenVideos = new EntitySet<tblGamerScreenVideo>(new Action<tblGamerScreenVideo>(this.attach_tblGamerScreenVideos), new Action<tblGamerScreenVideo>(this.detach_tblGamerScreenVideos));
            this._tblPictograms = new EntitySet<tblPictogram>(new Action<tblPictogram>(this.attach_tblPictograms), new Action<tblPictogram>(this.detach_tblPictograms));
            this._tblVersionAnalizs = new EntitySet<tblVersionAnaliz>(new Action<tblVersionAnaliz>(this.attach_tblVersionAnalizs), new Action<tblVersionAnaliz>(this.detach_tblVersionAnalizs));
            this._tblVersionPictograms = new EntitySet<tblVersionPictogram>(new Action<tblVersionPictogram>(this.attach_tblVersionPictograms), new Action<tblVersionPictogram>(this.detach_tblVersionPictograms));
            this._tblPictogram1 = default(EntityRef<tblPictogram>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Bit")]
        public System.Nullable<bool> Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdHead", DbType = "Int")]
        public System.Nullable<int> IdHead
        {
            get
            {
                return this._IdHead;
            }
            set
            {
                if ((this._IdHead != value))
                {
                    if (this._tblPictogram1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdHeadChanging(value);
                    this.SendPropertyChanging();
                    this._IdHead = value;
                    this.SendPropertyChanged("IdHead");
                    this.OnIdHeadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPictogram_tblGamerScreenVideo", Storage = "_tblGamerScreenVideos", ThisKey = "Id", OtherKey = "IdPictogramFirstLevel")]
        public EntitySet<tblGamerScreenVideo> tblGamerScreenVideos
        {
            get
            {
                return this._tblGamerScreenVideos;
            }
            set
            {
                this._tblGamerScreenVideos.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPictogram_tblPictogram", Storage = "_tblPictograms", ThisKey = "Id", OtherKey = "IdHead")]
        public EntitySet<tblPictogram> tblPictograms
        {
            get
            {
                return this._tblPictograms;
            }
            set
            {
                this._tblPictograms.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPictogram_tblVersionAnaliz", Storage = "_tblVersionAnalizs", ThisKey = "Id", OtherKey = "IdPictogram")]
        public EntitySet<tblVersionAnaliz> tblVersionAnalizs
        {
            get
            {
                return this._tblVersionAnalizs;
            }
            set
            {
                this._tblVersionAnalizs.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPictogram_tblVersionPictogram", Storage = "_tblVersionPictograms", ThisKey = "Id", OtherKey = "IdPictogram")]
        public EntitySet<tblVersionPictogram> tblVersionPictograms
        {
            get
            {
                return this._tblVersionPictograms;
            }
            set
            {
                this._tblVersionPictograms.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPictogram_tblPictogram", Storage = "_tblPictogram1", ThisKey = "IdHead", OtherKey = "Id", IsForeignKey = true)]
        public tblPictogram tblPictogram1
        {
            get
            {
                return this._tblPictogram1.Entity;
            }
            set
            {
                tblPictogram previousValue = this._tblPictogram1.Entity;
                if (((previousValue != value)
                            || (this._tblPictogram1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblPictogram1.Entity = null;
                        previousValue.tblPictograms.Remove(this);
                    }
                    this._tblPictogram1.Entity = value;
                    if ((value != null))
                    {
                        value.tblPictograms.Add(this);
                        this._IdHead = value.Id;
                    }
                    else
                    {
                        this._IdHead = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblPictogram1");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblGamerScreenVideos(tblGamerScreenVideo entity)
        {
            this.SendPropertyChanging();
            entity.tblPictogram = this;
        }

        private void detach_tblGamerScreenVideos(tblGamerScreenVideo entity)
        {
            this.SendPropertyChanging();
            entity.tblPictogram = null;
        }

        private void attach_tblPictograms(tblPictogram entity)
        {
            this.SendPropertyChanging();
            entity.tblPictogram1 = this;
        }

        private void detach_tblPictograms(tblPictogram entity)
        {
            this.SendPropertyChanging();
            entity.tblPictogram1 = null;
        }

        private void attach_tblVersionAnalizs(tblVersionAnaliz entity)
        {
            this.SendPropertyChanging();
            entity.tblPictogram = this;
        }

        private void detach_tblVersionAnalizs(tblVersionAnaliz entity)
        {
            this.SendPropertyChanging();
            entity.tblPictogram = null;
        }

        private void attach_tblVersionPictograms(tblVersionPictogram entity)
        {
            this.SendPropertyChanging();
            entity.tblPictogram = this;
        }

        private void detach_tblVersionPictograms(tblVersionPictogram entity)
        {
            this.SendPropertyChanging();
            entity.tblPictogram = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblPlatform")]
    public partial class tblPlatform : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblVersion> _tblVersions;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblPlatform()
        {
            this._tblVersions = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions), new Action<tblVersion>(this.detach_tblVersions));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPlatform_tblVersion", Storage = "_tblVersions", ThisKey = "Id", OtherKey = "IdPlatform")]
        public EntitySet<tblVersion> tblVersions
        {
            get
            {
                return this._tblVersions;
            }
            set
            {
                this._tblVersions.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblPlatform = this;
        }

        private void detach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblPlatform = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblProducerNExclusiveNUser")]
    public partial class tblProducerNExclusiveNUser : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private System.Nullable<int> _Type;

        private int _IdCountry;

        private string _WebSite;

        private int _IdOrganization;

        private string _Mobile;

        private string _Address;

        private System.Nullable<int> _IdNezamVazife;

        private EntitySet<tblCertificationVersion> _tblCertificationVersions;

        private EntitySet<tblConsultation> _tblConsultations;

        private EntitySet<tblFounderGroup> _tblFounderGroups;

        private EntitySet<tblOrganizationBonyad> _tblOrganizationBonyads;

        private EntitySet<tblPublishCertification> _tblPublishCertifications;

        private EntitySet<tblPublishCertificationValet> _tblPublishCertificationValets;

        private EntitySet<tblPublishCertificationValet> _tblPublishCertificationValets1;

        private EntitySet<tblStaticPage> _tblStaticPages;

        private EntitySet<tblUserDocumentFile> _tblUserDocumentFiles;

        private EntitySet<tblVersion> _tblVersions;

        private EntitySet<tblVersion> _tblVersions1;

        private EntitySet<tblVersion> _tblVersions2;

        private EntitySet<tblVersion> _tblVersions3;

        private EntitySet<tblVersionEsra> _tblVersionEsras;

        private EntitySet<tblVersionExclusive> _tblVersionExclusives;

        private EntitySet<tblVersionPictogram> _tblVersionPictograms;

        private EntitySet<tblVersionSkill> _tblVersionSkills;

        private EntityRef<tblCountry> _tblCountry;

        private EntityRef<tblMilitary> _tblMilitary;

        private EntityRef<tblOrganizationBonyad> _tblOrganizationBonyad;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnTypeChanging(System.Nullable<int> value);
        partial void OnTypeChanged();
        partial void OnIdCountryChanging(int value);
        partial void OnIdCountryChanged();
        partial void OnWebSiteChanging(string value);
        partial void OnWebSiteChanged();
        partial void OnIdOrganizationChanging(int value);
        partial void OnIdOrganizationChanged();
        partial void OnMobileChanging(string value);
        partial void OnMobileChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnIdNezamVazifeChanging(System.Nullable<int> value);
        partial void OnIdNezamVazifeChanged();
        #endregion

        public tblProducerNExclusiveNUser()
        {
            this._tblCertificationVersions = new EntitySet<tblCertificationVersion>(new Action<tblCertificationVersion>(this.attach_tblCertificationVersions), new Action<tblCertificationVersion>(this.detach_tblCertificationVersions));
            this._tblConsultations = new EntitySet<tblConsultation>(new Action<tblConsultation>(this.attach_tblConsultations), new Action<tblConsultation>(this.detach_tblConsultations));
            this._tblFounderGroups = new EntitySet<tblFounderGroup>(new Action<tblFounderGroup>(this.attach_tblFounderGroups), new Action<tblFounderGroup>(this.detach_tblFounderGroups));
            this._tblOrganizationBonyads = new EntitySet<tblOrganizationBonyad>(new Action<tblOrganizationBonyad>(this.attach_tblOrganizationBonyads), new Action<tblOrganizationBonyad>(this.detach_tblOrganizationBonyads));
            this._tblPublishCertifications = new EntitySet<tblPublishCertification>(new Action<tblPublishCertification>(this.attach_tblPublishCertifications), new Action<tblPublishCertification>(this.detach_tblPublishCertifications));
            this._tblPublishCertificationValets = new EntitySet<tblPublishCertificationValet>(new Action<tblPublishCertificationValet>(this.attach_tblPublishCertificationValets), new Action<tblPublishCertificationValet>(this.detach_tblPublishCertificationValets));
            this._tblPublishCertificationValets1 = new EntitySet<tblPublishCertificationValet>(new Action<tblPublishCertificationValet>(this.attach_tblPublishCertificationValets1), new Action<tblPublishCertificationValet>(this.detach_tblPublishCertificationValets1));
            this._tblStaticPages = new EntitySet<tblStaticPage>(new Action<tblStaticPage>(this.attach_tblStaticPages), new Action<tblStaticPage>(this.detach_tblStaticPages));
            this._tblUserDocumentFiles = new EntitySet<tblUserDocumentFile>(new Action<tblUserDocumentFile>(this.attach_tblUserDocumentFiles), new Action<tblUserDocumentFile>(this.detach_tblUserDocumentFiles));
            this._tblVersions = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions), new Action<tblVersion>(this.detach_tblVersions));
            this._tblVersions1 = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions1), new Action<tblVersion>(this.detach_tblVersions1));
            this._tblVersions2 = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions2), new Action<tblVersion>(this.detach_tblVersions2));
            this._tblVersions3 = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions3), new Action<tblVersion>(this.detach_tblVersions3));
            this._tblVersionEsras = new EntitySet<tblVersionEsra>(new Action<tblVersionEsra>(this.attach_tblVersionEsras), new Action<tblVersionEsra>(this.detach_tblVersionEsras));
            this._tblVersionExclusives = new EntitySet<tblVersionExclusive>(new Action<tblVersionExclusive>(this.attach_tblVersionExclusives), new Action<tblVersionExclusive>(this.detach_tblVersionExclusives));
            this._tblVersionPictograms = new EntitySet<tblVersionPictogram>(new Action<tblVersionPictogram>(this.attach_tblVersionPictograms), new Action<tblVersionPictogram>(this.detach_tblVersionPictograms));
            this._tblVersionSkills = new EntitySet<tblVersionSkill>(new Action<tblVersionSkill>(this.attach_tblVersionSkills), new Action<tblVersionSkill>(this.detach_tblVersionSkills));
            this._tblCountry = default(EntityRef<tblCountry>);
            this._tblMilitary = default(EntityRef<tblMilitary>);
            this._tblOrganizationBonyad = default(EntityRef<tblOrganizationBonyad>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int")]
        public System.Nullable<int> Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdCountry", DbType = "Int NOT NULL")]
        public int IdCountry
        {
            get
            {
                return this._IdCountry;
            }
            set
            {
                if ((this._IdCountry != value))
                {
                    if (this._tblCountry.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdCountryChanging(value);
                    this.SendPropertyChanging();
                    this._IdCountry = value;
                    this.SendPropertyChanged("IdCountry");
                    this.OnIdCountryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WebSite", DbType = "NVarChar(1000)")]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging(value);
                    this.SendPropertyChanging();
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdOrganization", DbType = "Int NOT NULL")]
        public int IdOrganization
        {
            get
            {
                return this._IdOrganization;
            }
            set
            {
                if ((this._IdOrganization != value))
                {
                    if (this._tblOrganizationBonyad.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdOrganizationChanging(value);
                    this.SendPropertyChanging();
                    this._IdOrganization = value;
                    this.SendPropertyChanged("IdOrganization");
                    this.OnIdOrganizationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "Char(11)")]
        public string Mobile
        {
            get
            {
                return this._Mobile;
            }
            set
            {
                if ((this._Mobile != value))
                {
                    this.OnMobileChanging(value);
                    this.SendPropertyChanging();
                    this._Mobile = value;
                    this.SendPropertyChanged("Mobile");
                    this.OnMobileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "NVarChar(1000)")]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging(value);
                    this.SendPropertyChanging();
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdNezamVazife", DbType = "Int")]
        public System.Nullable<int> IdNezamVazife
        {
            get
            {
                return this._IdNezamVazife;
            }
            set
            {
                if ((this._IdNezamVazife != value))
                {
                    if (this._tblMilitary.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdNezamVazifeChanging(value);
                    this.SendPropertyChanging();
                    this._IdNezamVazife = value;
                    this.SendPropertyChanged("IdNezamVazife");
                    this.OnIdNezamVazifeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblCertificationVersion", Storage = "_tblCertificationVersions", ThisKey = "Id", OtherKey = "IdUser")]
        public EntitySet<tblCertificationVersion> tblCertificationVersions
        {
            get
            {
                return this._tblCertificationVersions;
            }
            set
            {
                this._tblCertificationVersions.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblConsultation", Storage = "_tblConsultations", ThisKey = "Id", OtherKey = "IdResponser")]
        public EntitySet<tblConsultation> tblConsultations
        {
            get
            {
                return this._tblConsultations;
            }
            set
            {
                this._tblConsultations.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblFounderGroup", Storage = "_tblFounderGroups", ThisKey = "Id", OtherKey = "IdUser")]
        public EntitySet<tblFounderGroup> tblFounderGroups
        {
            get
            {
                return this._tblFounderGroups;
            }
            set
            {
                this._tblFounderGroups.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblOrganizationBonyad", Storage = "_tblOrganizationBonyads", ThisKey = "Id", OtherKey = "IdCEO")]
        public EntitySet<tblOrganizationBonyad> tblOrganizationBonyads
        {
            get
            {
                return this._tblOrganizationBonyads;
            }
            set
            {
                this._tblOrganizationBonyads.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblPublishCertification", Storage = "_tblPublishCertifications", ThisKey = "Id", OtherKey = "IdApplicantUser")]
        public EntitySet<tblPublishCertification> tblPublishCertifications
        {
            get
            {
                return this._tblPublishCertifications;
            }
            set
            {
                this._tblPublishCertifications.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblPublishCertificationValet", Storage = "_tblPublishCertificationValets", ThisKey = "Id", OtherKey = "IdUserEsra")]
        public EntitySet<tblPublishCertificationValet> tblPublishCertificationValets
        {
            get
            {
                return this._tblPublishCertificationValets;
            }
            set
            {
                this._tblPublishCertificationValets.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblPublishCertificationValet1", Storage = "_tblPublishCertificationValets1", ThisKey = "Id", OtherKey = "idUserNezarat")]
        public EntitySet<tblPublishCertificationValet> tblPublishCertificationValets1
        {
            get
            {
                return this._tblPublishCertificationValets1;
            }
            set
            {
                this._tblPublishCertificationValets1.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblStaticPage", Storage = "_tblStaticPages", ThisKey = "Id", OtherKey = "IdAuthor")]
        public EntitySet<tblStaticPage> tblStaticPages
        {
            get
            {
                return this._tblStaticPages;
            }
            set
            {
                this._tblStaticPages.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblUserDocumentFile", Storage = "_tblUserDocumentFiles", ThisKey = "Id", OtherKey = "IdUser")]
        public EntitySet<tblUserDocumentFile> tblUserDocumentFiles
        {
            get
            {
                return this._tblUserDocumentFiles;
            }
            set
            {
                this._tblUserDocumentFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersion", Storage = "_tblVersions", ThisKey = "Id", OtherKey = "IdUser")]
        public EntitySet<tblVersion> tblVersions
        {
            get
            {
                return this._tblVersions;
            }
            set
            {
                this._tblVersions.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersion1", Storage = "_tblVersions1", ThisKey = "Id", OtherKey = "IdNarrator")]
        public EntitySet<tblVersion> tblVersions1
        {
            get
            {
                return this._tblVersions1;
            }
            set
            {
                this._tblVersions1.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersion2", Storage = "_tblVersions2", ThisKey = "Id", OtherKey = "IdGamer")]
        public EntitySet<tblVersion> tblVersions2
        {
            get
            {
                return this._tblVersions2;
            }
            set
            {
                this._tblVersions2.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersion3", Storage = "_tblVersions3", ThisKey = "Id", OtherKey = "IdAnalizor")]
        public EntitySet<tblVersion> tblVersions3
        {
            get
            {
                return this._tblVersions3;
            }
            set
            {
                this._tblVersions3.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersionEsra", Storage = "_tblVersionEsras", ThisKey = "Id", OtherKey = "IdUser")]
        public EntitySet<tblVersionEsra> tblVersionEsras
        {
            get
            {
                return this._tblVersionEsras;
            }
            set
            {
                this._tblVersionEsras.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersionExclusive", Storage = "_tblVersionExclusives", ThisKey = "Id", OtherKey = "IdExclusive")]
        public EntitySet<tblVersionExclusive> tblVersionExclusives
        {
            get
            {
                return this._tblVersionExclusives;
            }
            set
            {
                this._tblVersionExclusives.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersionPictogram", Storage = "_tblVersionPictograms", ThisKey = "Id", OtherKey = "IdUser")]
        public EntitySet<tblVersionPictogram> tblVersionPictograms
        {
            get
            {
                return this._tblVersionPictograms;
            }
            set
            {
                this._tblVersionPictograms.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersionSkill", Storage = "_tblVersionSkills", ThisKey = "Id", OtherKey = "IdUser")]
        public EntitySet<tblVersionSkill> tblVersionSkills
        {
            get
            {
                return this._tblVersionSkills;
            }
            set
            {
                this._tblVersionSkills.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblCountry_tblProducerNExclusiveNUser", Storage = "_tblCountry", ThisKey = "IdCountry", OtherKey = "Id", IsForeignKey = true)]
        public tblCountry tblCountry
        {
            get
            {
                return this._tblCountry.Entity;
            }
            set
            {
                tblCountry previousValue = this._tblCountry.Entity;
                if (((previousValue != value)
                            || (this._tblCountry.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblCountry.Entity = null;
                        previousValue.tblProducerNExclusiveNUsers.Remove(this);
                    }
                    this._tblCountry.Entity = value;
                    if ((value != null))
                    {
                        value.tblProducerNExclusiveNUsers.Add(this);
                        this._IdCountry = value.Id;
                    }
                    else
                    {
                        this._IdCountry = default(int);
                    }
                    this.SendPropertyChanged("tblCountry");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblMilitary_tblProducerNExclusiveNUser", Storage = "_tblMilitary", ThisKey = "IdNezamVazife", OtherKey = "Id", IsForeignKey = true)]
        public tblMilitary tblMilitary
        {
            get
            {
                return this._tblMilitary.Entity;
            }
            set
            {
                tblMilitary previousValue = this._tblMilitary.Entity;
                if (((previousValue != value)
                            || (this._tblMilitary.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblMilitary.Entity = null;
                        previousValue.tblProducerNExclusiveNUsers.Remove(this);
                    }
                    this._tblMilitary.Entity = value;
                    if ((value != null))
                    {
                        value.tblProducerNExclusiveNUsers.Add(this);
                        this._IdNezamVazife = value.Id;
                    }
                    else
                    {
                        this._IdNezamVazife = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblMilitary");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblProducerNExclusiveNUser", Storage = "_tblOrganizationBonyad", ThisKey = "IdOrganization", OtherKey = "Id", IsForeignKey = true)]
        public tblOrganizationBonyad tblOrganizationBonyad
        {
            get
            {
                return this._tblOrganizationBonyad.Entity;
            }
            set
            {
                tblOrganizationBonyad previousValue = this._tblOrganizationBonyad.Entity;
                if (((previousValue != value)
                            || (this._tblOrganizationBonyad.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblOrganizationBonyad.Entity = null;
                        previousValue.tblProducerNExclusiveNUsers.Remove(this);
                    }
                    this._tblOrganizationBonyad.Entity = value;
                    if ((value != null))
                    {
                        value.tblProducerNExclusiveNUsers.Add(this);
                        this._IdOrganization = value.Id;
                    }
                    else
                    {
                        this._IdOrganization = default(int);
                    }
                    this.SendPropertyChanged("tblOrganizationBonyad");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblCertificationVersions(tblCertificationVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblCertificationVersions(tblCertificationVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblConsultations(tblConsultation entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblConsultations(tblConsultation entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblFounderGroups(tblFounderGroup entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblFounderGroups(tblFounderGroup entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblOrganizationBonyads(tblOrganizationBonyad entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblOrganizationBonyads(tblOrganizationBonyad entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblPublishCertifications(tblPublishCertification entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblPublishCertifications(tblPublishCertification entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblPublishCertificationValets(tblPublishCertificationValet entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblPublishCertificationValets(tblPublishCertificationValet entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblPublishCertificationValets1(tblPublishCertificationValet entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser1 = this;
        }

        private void detach_tblPublishCertificationValets1(tblPublishCertificationValet entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser1 = null;
        }

        private void attach_tblStaticPages(tblStaticPage entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblStaticPages(tblStaticPage entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblUserDocumentFiles(tblUserDocumentFile entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblUserDocumentFiles(tblUserDocumentFile entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblVersions1(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser1 = this;
        }

        private void detach_tblVersions1(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser1 = null;
        }

        private void attach_tblVersions2(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser2 = this;
        }

        private void detach_tblVersions2(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser2 = null;
        }

        private void attach_tblVersions3(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser3 = this;
        }

        private void detach_tblVersions3(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser3 = null;
        }

        private void attach_tblVersionEsras(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblVersionEsras(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblVersionExclusives(tblVersionExclusive entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblVersionExclusives(tblVersionExclusive entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblVersionPictograms(tblVersionPictogram entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblVersionPictograms(tblVersionPictogram entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }

        private void attach_tblVersionSkills(tblVersionSkill entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = this;
        }

        private void detach_tblVersionSkills(tblVersionSkill entity)
        {
            this.SendPropertyChanging();
            entity.tblProducerNExclusiveNUser = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblPublishCertification")]
    public partial class tblPublishCertification : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _CertificationNumber;

        private System.DateTime _StartDateTime;

        private System.DateTime _EndDateTime;

        private int _IdApplicantUser;

        private System.Nullable<System.DateTime> _ConfermDateTime;

        private string _SignatureName;

        private EntitySet<tblCertificationVersion> _tblCertificationVersions;

        private EntitySet<tblPublishCertificationValet> _tblPublishCertificationValets;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCertificationNumberChanging(string value);
        partial void OnCertificationNumberChanged();
        partial void OnStartDateTimeChanging(System.DateTime value);
        partial void OnStartDateTimeChanged();
        partial void OnEndDateTimeChanging(System.DateTime value);
        partial void OnEndDateTimeChanged();
        partial void OnIdApplicantUserChanging(int value);
        partial void OnIdApplicantUserChanged();
        partial void OnConfermDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnConfermDateTimeChanged();
        partial void OnSignatureNameChanging(string value);
        partial void OnSignatureNameChanged();
        #endregion

        public tblPublishCertification()
        {
            this._tblCertificationVersions = new EntitySet<tblCertificationVersion>(new Action<tblCertificationVersion>(this.attach_tblCertificationVersions), new Action<tblCertificationVersion>(this.detach_tblCertificationVersions));
            this._tblPublishCertificationValets = new EntitySet<tblPublishCertificationValet>(new Action<tblPublishCertificationValet>(this.attach_tblPublishCertificationValets), new Action<tblPublishCertificationValet>(this.detach_tblPublishCertificationValets));
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CertificationNumber", DbType = "NVarChar(20) NOT NULL", CanBeNull = false)]
        public string CertificationNumber
        {
            get
            {
                return this._CertificationNumber;
            }
            set
            {
                if ((this._CertificationNumber != value))
                {
                    this.OnCertificationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._CertificationNumber = value;
                    this.SendPropertyChanged("CertificationNumber");
                    this.OnCertificationNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime StartDateTime
        {
            get
            {
                return this._StartDateTime;
            }
            set
            {
                if ((this._StartDateTime != value))
                {
                    this.OnStartDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._StartDateTime = value;
                    this.SendPropertyChanged("StartDateTime");
                    this.OnStartDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime EndDateTime
        {
            get
            {
                return this._EndDateTime;
            }
            set
            {
                if ((this._EndDateTime != value))
                {
                    this.OnEndDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._EndDateTime = value;
                    this.SendPropertyChanged("EndDateTime");
                    this.OnEndDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdApplicantUser", DbType = "Int NOT NULL")]
        public int IdApplicantUser
        {
            get
            {
                return this._IdApplicantUser;
            }
            set
            {
                if ((this._IdApplicantUser != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdApplicantUserChanging(value);
                    this.SendPropertyChanging();
                    this._IdApplicantUser = value;
                    this.SendPropertyChanged("IdApplicantUser");
                    this.OnIdApplicantUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConfermDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ConfermDateTime
        {
            get
            {
                return this._ConfermDateTime;
            }
            set
            {
                if ((this._ConfermDateTime != value))
                {
                    this.OnConfermDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._ConfermDateTime = value;
                    this.SendPropertyChanged("ConfermDateTime");
                    this.OnConfermDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SignatureName", DbType = "NVarChar(100)")]
        public string SignatureName
        {
            get
            {
                return this._SignatureName;
            }
            set
            {
                if ((this._SignatureName != value))
                {
                    this.OnSignatureNameChanging(value);
                    this.SendPropertyChanging();
                    this._SignatureName = value;
                    this.SendPropertyChanged("SignatureName");
                    this.OnSignatureNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPublishCertification_tblCertificationVersion", Storage = "_tblCertificationVersions", ThisKey = "Id", OtherKey = "IdPublishCertification")]
        public EntitySet<tblCertificationVersion> tblCertificationVersions
        {
            get
            {
                return this._tblCertificationVersions;
            }
            set
            {
                this._tblCertificationVersions.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPublishCertification_tblPublishCertificationValet", Storage = "_tblPublishCertificationValets", ThisKey = "Id", OtherKey = "IdPublishCertification")]
        public EntitySet<tblPublishCertificationValet> tblPublishCertificationValets
        {
            get
            {
                return this._tblPublishCertificationValets;
            }
            set
            {
                this._tblPublishCertificationValets.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblPublishCertification", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdApplicantUser", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblPublishCertifications.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblPublishCertifications.Add(this);
                        this._IdApplicantUser = value.Id;
                    }
                    else
                    {
                        this._IdApplicantUser = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblCertificationVersions(tblCertificationVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblPublishCertification = this;
        }

        private void detach_tblCertificationVersions(tblCertificationVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblPublishCertification = null;
        }

        private void attach_tblPublishCertificationValets(tblPublishCertificationValet entity)
        {
            this.SendPropertyChanging();
            entity.tblPublishCertification = this;
        }

        private void detach_tblPublishCertificationValets(tblPublishCertificationValet entity)
        {
            this.SendPropertyChanging();
            entity.tblPublishCertification = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblPublishCertificationValet")]
    public partial class tblPublishCertificationValet : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdPublishCertification;

        private int _IdFile;

        private int _IdUserEsra;

        private int _idUserNezarat;

        private int _IdScreenshotType;

        private EntityRef<tblFile> _tblFile;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser1;

        private EntityRef<tblPublishCertification> _tblPublishCertification;

        private EntityRef<tblScreenshotType> _tblScreenshotType;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdPublishCertificationChanging(int value);
        partial void OnIdPublishCertificationChanged();
        partial void OnIdFileChanging(int value);
        partial void OnIdFileChanged();
        partial void OnIdUserEsraChanging(int value);
        partial void OnIdUserEsraChanged();
        partial void OnidUserNezaratChanging(int value);
        partial void OnidUserNezaratChanged();
        partial void OnIdScreenshotTypeChanging(int value);
        partial void OnIdScreenshotTypeChanged();
        #endregion

        public tblPublishCertificationValet()
        {
            this._tblFile = default(EntityRef<tblFile>);
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblProducerNExclusiveNUser1 = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblPublishCertification = default(EntityRef<tblPublishCertification>);
            this._tblScreenshotType = default(EntityRef<tblScreenshotType>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdPublishCertification", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdPublishCertification
        {
            get
            {
                return this._IdPublishCertification;
            }
            set
            {
                if ((this._IdPublishCertification != value))
                {
                    if (this._tblPublishCertification.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdPublishCertificationChanging(value);
                    this.SendPropertyChanging();
                    this._IdPublishCertification = value;
                    this.SendPropertyChanged("IdPublishCertification");
                    this.OnIdPublishCertificationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdFile", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdFile
        {
            get
            {
                return this._IdFile;
            }
            set
            {
                if ((this._IdFile != value))
                {
                    if (this._tblFile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdFileChanging(value);
                    this.SendPropertyChanging();
                    this._IdFile = value;
                    this.SendPropertyChanged("IdFile");
                    this.OnIdFileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdUserEsra", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdUserEsra
        {
            get
            {
                return this._IdUserEsra;
            }
            set
            {
                if ((this._IdUserEsra != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdUserEsraChanging(value);
                    this.SendPropertyChanging();
                    this._IdUserEsra = value;
                    this.SendPropertyChanged("IdUserEsra");
                    this.OnIdUserEsraChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_idUserNezarat", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int idUserNezarat
        {
            get
            {
                return this._idUserNezarat;
            }
            set
            {
                if ((this._idUserNezarat != value))
                {
                    if (this._tblProducerNExclusiveNUser1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnidUserNezaratChanging(value);
                    this.SendPropertyChanging();
                    this._idUserNezarat = value;
                    this.SendPropertyChanged("idUserNezarat");
                    this.OnidUserNezaratChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdScreenshotType", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdScreenshotType
        {
            get
            {
                return this._IdScreenshotType;
            }
            set
            {
                if ((this._IdScreenshotType != value))
                {
                    if (this._tblScreenshotType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdScreenshotTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdScreenshotType = value;
                    this.SendPropertyChanged("IdScreenshotType");
                    this.OnIdScreenshotTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblPublishCertificationValet", Storage = "_tblFile", ThisKey = "IdFile", OtherKey = "Id", IsForeignKey = true)]
        public tblFile tblFile
        {
            get
            {
                return this._tblFile.Entity;
            }
            set
            {
                tblFile previousValue = this._tblFile.Entity;
                if (((previousValue != value)
                            || (this._tblFile.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblFile.Entity = null;
                        previousValue.tblPublishCertificationValets.Remove(this);
                    }
                    this._tblFile.Entity = value;
                    if ((value != null))
                    {
                        value.tblPublishCertificationValets.Add(this);
                        this._IdFile = value.Id;
                    }
                    else
                    {
                        this._IdFile = default(int);
                    }
                    this.SendPropertyChanged("tblFile");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblPublishCertificationValet", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdUserEsra", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblPublishCertificationValets.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblPublishCertificationValets.Add(this);
                        this._IdUserEsra = value.Id;
                    }
                    else
                    {
                        this._IdUserEsra = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblPublishCertificationValet1", Storage = "_tblProducerNExclusiveNUser1", ThisKey = "idUserNezarat", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser1
        {
            get
            {
                return this._tblProducerNExclusiveNUser1.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser1.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser1.Entity = null;
                        previousValue.tblPublishCertificationValets1.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser1.Entity = value;
                    if ((value != null))
                    {
                        value.tblPublishCertificationValets1.Add(this);
                        this._idUserNezarat = value.Id;
                    }
                    else
                    {
                        this._idUserNezarat = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser1");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPublishCertification_tblPublishCertificationValet", Storage = "_tblPublishCertification", ThisKey = "IdPublishCertification", OtherKey = "Id", IsForeignKey = true)]
        public tblPublishCertification tblPublishCertification
        {
            get
            {
                return this._tblPublishCertification.Entity;
            }
            set
            {
                tblPublishCertification previousValue = this._tblPublishCertification.Entity;
                if (((previousValue != value)
                            || (this._tblPublishCertification.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblPublishCertification.Entity = null;
                        previousValue.tblPublishCertificationValets.Remove(this);
                    }
                    this._tblPublishCertification.Entity = value;
                    if ((value != null))
                    {
                        value.tblPublishCertificationValets.Add(this);
                        this._IdPublishCertification = value.Id;
                    }
                    else
                    {
                        this._IdPublishCertification = default(int);
                    }
                    this.SendPropertyChanged("tblPublishCertification");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblScreenshotType_tblPublishCertificationValet", Storage = "_tblScreenshotType", ThisKey = "IdScreenshotType", OtherKey = "Id", IsForeignKey = true)]
        public tblScreenshotType tblScreenshotType
        {
            get
            {
                return this._tblScreenshotType.Entity;
            }
            set
            {
                tblScreenshotType previousValue = this._tblScreenshotType.Entity;
                if (((previousValue != value)
                            || (this._tblScreenshotType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblScreenshotType.Entity = null;
                        previousValue.tblPublishCertificationValets.Remove(this);
                    }
                    this._tblScreenshotType.Entity = value;
                    if ((value != null))
                    {
                        value.tblPublishCertificationValets.Add(this);
                        this._IdScreenshotType = value.Id;
                    }
                    else
                    {
                        this._IdScreenshotType = default(int);
                    }
                    this.SendPropertyChanged("tblScreenshotType");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblQuality")]
    public partial class tblQuality : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblVersion> _tblVersions;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblQuality()
        {
            this._tblVersions = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions), new Action<tblVersion>(this.detach_tblVersions));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblQuality_tblVersion", Storage = "_tblVersions", ThisKey = "Id", OtherKey = "IdQuality")]
        public EntitySet<tblVersion> tblVersions
        {
            get
            {
                return this._tblVersions;
            }
            set
            {
                this._tblVersions.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblQuality = this;
        }

        private void detach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblQuality = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblRate")]
    public partial class tblRate : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private string _Name;

        private System.Nullable<int> _idHead;

        private EntitySet<tblVersionAnaliz> _tblVersionAnalizs;

        private EntitySet<tblVersionPictogram> _tblVersionPictograms;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnidHeadChanging(System.Nullable<int> value);
        partial void OnidHeadChanged();
        #endregion

        public tblRate()
        {
            this._tblVersionAnalizs = new EntitySet<tblVersionAnaliz>(new Action<tblVersionAnaliz>(this.attach_tblVersionAnalizs), new Action<tblVersionAnaliz>(this.detach_tblVersionAnalizs));
            this._tblVersionPictograms = new EntitySet<tblVersionPictogram>(new Action<tblVersionPictogram>(this.attach_tblVersionPictograms), new Action<tblVersionPictogram>(this.detach_tblVersionPictograms));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_idHead", DbType = "Int")]
        public System.Nullable<int> idHead
        {
            get
            {
                return this._idHead;
            }
            set
            {
                if ((this._idHead != value))
                {
                    this.OnidHeadChanging(value);
                    this.SendPropertyChanging();
                    this._idHead = value;
                    this.SendPropertyChanged("idHead");
                    this.OnidHeadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblRate_tblVersionAnaliz", Storage = "_tblVersionAnalizs", ThisKey = "id", OtherKey = "idRate")]
        public EntitySet<tblVersionAnaliz> tblVersionAnalizs
        {
            get
            {
                return this._tblVersionAnalizs;
            }
            set
            {
                this._tblVersionAnalizs.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblRate_tblVersionPictogram", Storage = "_tblVersionPictograms", ThisKey = "id", OtherKey = "IdRate")]
        public EntitySet<tblVersionPictogram> tblVersionPictograms
        {
            get
            {
                return this._tblVersionPictograms;
            }
            set
            {
                this._tblVersionPictograms.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersionAnalizs(tblVersionAnaliz entity)
        {
            this.SendPropertyChanging();
            entity.tblRate = this;
        }

        private void detach_tblVersionAnalizs(tblVersionAnaliz entity)
        {
            this.SendPropertyChanging();
            entity.tblRate = null;
        }

        private void attach_tblVersionPictograms(tblVersionPictogram entity)
        {
            this.SendPropertyChanging();
            entity.tblRate = this;
        }

        private void detach_tblVersionPictograms(tblVersionPictogram entity)
        {
            this.SendPropertyChanging();
            entity.tblRate = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblRealProducer")]
    public partial class tblRealProducer
    {

        private int _IdProducer;

        private bool _IsIndependent;

        public tblRealProducer()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdProducer", DbType = "Int NOT NULL")]
        public int IdProducer
        {
            get
            {
                return this._IdProducer;
            }
            set
            {
                if ((this._IdProducer != value))
                {
                    this._IdProducer = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsIndependent", DbType = "Bit NOT NULL")]
        public bool IsIndependent
        {
            get
            {
                return this._IsIndependent;
            }
            set
            {
                if ((this._IsIndependent != value))
                {
                    this._IsIndependent = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblScreenshotType")]
    public partial class tblScreenshotType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblGamerScreenShot> _tblGamerScreenShots;

        private EntitySet<tblGamerScreenVideo> _tblGamerScreenVideos;

        private EntitySet<tblPublishCertificationValet> _tblPublishCertificationValets;

        private EntitySet<tblVersionScreenshot> _tblVersionScreenshots;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblScreenshotType()
        {
            this._tblGamerScreenShots = new EntitySet<tblGamerScreenShot>(new Action<tblGamerScreenShot>(this.attach_tblGamerScreenShots), new Action<tblGamerScreenShot>(this.detach_tblGamerScreenShots));
            this._tblGamerScreenVideos = new EntitySet<tblGamerScreenVideo>(new Action<tblGamerScreenVideo>(this.attach_tblGamerScreenVideos), new Action<tblGamerScreenVideo>(this.detach_tblGamerScreenVideos));
            this._tblPublishCertificationValets = new EntitySet<tblPublishCertificationValet>(new Action<tblPublishCertificationValet>(this.attach_tblPublishCertificationValets), new Action<tblPublishCertificationValet>(this.detach_tblPublishCertificationValets));
            this._tblVersionScreenshots = new EntitySet<tblVersionScreenshot>(new Action<tblVersionScreenshot>(this.attach_tblVersionScreenshots), new Action<tblVersionScreenshot>(this.detach_tblVersionScreenshots));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblScreenshotType_tblGamerScreenShot", Storage = "_tblGamerScreenShots", ThisKey = "Id", OtherKey = "IdScreenShotType")]
        public EntitySet<tblGamerScreenShot> tblGamerScreenShots
        {
            get
            {
                return this._tblGamerScreenShots;
            }
            set
            {
                this._tblGamerScreenShots.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblScreenshotType_tblGamerScreenVideo", Storage = "_tblGamerScreenVideos", ThisKey = "Id", OtherKey = "IdScreenShotType")]
        public EntitySet<tblGamerScreenVideo> tblGamerScreenVideos
        {
            get
            {
                return this._tblGamerScreenVideos;
            }
            set
            {
                this._tblGamerScreenVideos.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblScreenshotType_tblPublishCertificationValet", Storage = "_tblPublishCertificationValets", ThisKey = "Id", OtherKey = "IdScreenshotType")]
        public EntitySet<tblPublishCertificationValet> tblPublishCertificationValets
        {
            get
            {
                return this._tblPublishCertificationValets;
            }
            set
            {
                this._tblPublishCertificationValets.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblScreenshotType_tblVersionScreenshot", Storage = "_tblVersionScreenshots", ThisKey = "Id", OtherKey = "IdScreenshotType")]
        public EntitySet<tblVersionScreenshot> tblVersionScreenshots
        {
            get
            {
                return this._tblVersionScreenshots;
            }
            set
            {
                this._tblVersionScreenshots.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblGamerScreenShots(tblGamerScreenShot entity)
        {
            this.SendPropertyChanging();
            entity.tblScreenshotType = this;
        }

        private void detach_tblGamerScreenShots(tblGamerScreenShot entity)
        {
            this.SendPropertyChanging();
            entity.tblScreenshotType = null;
        }

        private void attach_tblGamerScreenVideos(tblGamerScreenVideo entity)
        {
            this.SendPropertyChanging();
            entity.tblScreenshotType = this;
        }

        private void detach_tblGamerScreenVideos(tblGamerScreenVideo entity)
        {
            this.SendPropertyChanging();
            entity.tblScreenshotType = null;
        }

        private void attach_tblPublishCertificationValets(tblPublishCertificationValet entity)
        {
            this.SendPropertyChanging();
            entity.tblScreenshotType = this;
        }

        private void detach_tblPublishCertificationValets(tblPublishCertificationValet entity)
        {
            this.SendPropertyChanging();
            entity.tblScreenshotType = null;
        }

        private void attach_tblVersionScreenshots(tblVersionScreenshot entity)
        {
            this.SendPropertyChanging();
            entity.tblScreenshotType = this;
        }

        private void detach_tblVersionScreenshots(tblVersionScreenshot entity)
        {
            this.SendPropertyChanging();
            entity.tblScreenshotType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblSkillType")]
    public partial class tblSkillType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblVersionSkill> _tblVersionSkills;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblSkillType()
        {
            this._tblVersionSkills = new EntitySet<tblVersionSkill>(new Action<tblVersionSkill>(this.attach_tblVersionSkills), new Action<tblVersionSkill>(this.detach_tblVersionSkills));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSkillType_tblVersionSkill", Storage = "_tblVersionSkills", ThisKey = "Id", OtherKey = "idSkillType")]
        public EntitySet<tblVersionSkill> tblVersionSkills
        {
            get
            {
                return this._tblVersionSkills;
            }
            set
            {
                this._tblVersionSkills.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersionSkills(tblVersionSkill entity)
        {
            this.SendPropertyChanging();
            entity.tblSkillType = this;
        }

        private void detach_tblVersionSkills(tblVersionSkill entity)
        {
            this.SendPropertyChanging();
            entity.tblSkillType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblSourceMedia")]
    public partial class tblSourceMedia : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private int _IdVersion;

        private string _Location;

        private int _IdSourceMediaType;

        private int _IdSourceMediaSentType;

        private bool _IsDoc;

        private string _Description;

        private string _GamerComment;

        private System.Nullable<int> _IdDeficiencyType;

        private string _DeficiencyText;

        private EntitySet<tblGamerScreenShot> _tblGamerScreenShots;

        private EntitySet<tblGamerScreenVideo> _tblGamerScreenVideos;

        private EntitySet<tblSourceMediaFile> _tblSourceMediaFiles;

        private EntityRef<tblDeficiencyType> _tblDeficiencyType;

        private EntityRef<tblSourceMediaSentType> _tblSourceMediaSentType;

        private EntityRef<tblSourceMediaType> _tblSourceMediaType;

        private EntityRef<tblVersion> _tblVersion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnIdVersionChanging(int value);
        partial void OnIdVersionChanged();
        partial void OnLocationChanging(string value);
        partial void OnLocationChanged();
        partial void OnIdSourceMediaTypeChanging(int value);
        partial void OnIdSourceMediaTypeChanged();
        partial void OnIdSourceMediaSentTypeChanging(int value);
        partial void OnIdSourceMediaSentTypeChanged();
        partial void OnIsDocChanging(bool value);
        partial void OnIsDocChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnGamerCommentChanging(string value);
        partial void OnGamerCommentChanged();
        partial void OnIdDeficiencyTypeChanging(System.Nullable<int> value);
        partial void OnIdDeficiencyTypeChanged();
        partial void OnDeficiencyTextChanging(string value);
        partial void OnDeficiencyTextChanged();
        #endregion

        public tblSourceMedia()
        {
            this._tblGamerScreenShots = new EntitySet<tblGamerScreenShot>(new Action<tblGamerScreenShot>(this.attach_tblGamerScreenShots), new Action<tblGamerScreenShot>(this.detach_tblGamerScreenShots));
            this._tblGamerScreenVideos = new EntitySet<tblGamerScreenVideo>(new Action<tblGamerScreenVideo>(this.attach_tblGamerScreenVideos), new Action<tblGamerScreenVideo>(this.detach_tblGamerScreenVideos));
            this._tblSourceMediaFiles = new EntitySet<tblSourceMediaFile>(new Action<tblSourceMediaFile>(this.attach_tblSourceMediaFiles), new Action<tblSourceMediaFile>(this.detach_tblSourceMediaFiles));
            this._tblDeficiencyType = default(EntityRef<tblDeficiencyType>);
            this._tblSourceMediaSentType = default(EntityRef<tblSourceMediaSentType>);
            this._tblSourceMediaType = default(EntityRef<tblSourceMediaType>);
            this._tblVersion = default(EntityRef<tblVersion>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersion", DbType = "Int NOT NULL")]
        public int IdVersion
        {
            get
            {
                return this._IdVersion;
            }
            set
            {
                if ((this._IdVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersion = value;
                    this.SendPropertyChanged("IdVersion");
                    this.OnIdVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Location", DbType = "NVarChar(2000)")]
        public string Location
        {
            get
            {
                return this._Location;
            }
            set
            {
                if ((this._Location != value))
                {
                    this.OnLocationChanging(value);
                    this.SendPropertyChanging();
                    this._Location = value;
                    this.SendPropertyChanged("Location");
                    this.OnLocationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdSourceMediaType", DbType = "Int NOT NULL")]
        public int IdSourceMediaType
        {
            get
            {
                return this._IdSourceMediaType;
            }
            set
            {
                if ((this._IdSourceMediaType != value))
                {
                    if (this._tblSourceMediaType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdSourceMediaTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdSourceMediaType = value;
                    this.SendPropertyChanged("IdSourceMediaType");
                    this.OnIdSourceMediaTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdSourceMediaSentType", DbType = "Int NOT NULL")]
        public int IdSourceMediaSentType
        {
            get
            {
                return this._IdSourceMediaSentType;
            }
            set
            {
                if ((this._IdSourceMediaSentType != value))
                {
                    if (this._tblSourceMediaSentType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdSourceMediaSentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdSourceMediaSentType = value;
                    this.SendPropertyChanged("IdSourceMediaSentType");
                    this.OnIdSourceMediaSentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsDoc", DbType = "Bit NOT NULL")]
        public bool IsDoc
        {
            get
            {
                return this._IsDoc;
            }
            set
            {
                if ((this._IsDoc != value))
                {
                    this.OnIsDocChanging(value);
                    this.SendPropertyChanging();
                    this._IsDoc = value;
                    this.SendPropertyChanged("IsDoc");
                    this.OnIsDocChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "NText", UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GamerComment", DbType = "NVarChar(MAX)")]
        public string GamerComment
        {
            get
            {
                return this._GamerComment;
            }
            set
            {
                if ((this._GamerComment != value))
                {
                    this.OnGamerCommentChanging(value);
                    this.SendPropertyChanging();
                    this._GamerComment = value;
                    this.SendPropertyChanged("GamerComment");
                    this.OnGamerCommentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdDeficiencyType", DbType = "Int")]
        public System.Nullable<int> IdDeficiencyType
        {
            get
            {
                return this._IdDeficiencyType;
            }
            set
            {
                if ((this._IdDeficiencyType != value))
                {
                    if (this._tblDeficiencyType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdDeficiencyTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdDeficiencyType = value;
                    this.SendPropertyChanged("IdDeficiencyType");
                    this.OnIdDeficiencyTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DeficiencyText", DbType = "NVarChar(MAX)")]
        public string DeficiencyText
        {
            get
            {
                return this._DeficiencyText;
            }
            set
            {
                if ((this._DeficiencyText != value))
                {
                    this.OnDeficiencyTextChanging(value);
                    this.SendPropertyChanging();
                    this._DeficiencyText = value;
                    this.SendPropertyChanged("DeficiencyText");
                    this.OnDeficiencyTextChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceMedia_tblGamerScreenShot", Storage = "_tblGamerScreenShots", ThisKey = "Id", OtherKey = "IdSourceMedia")]
        public EntitySet<tblGamerScreenShot> tblGamerScreenShots
        {
            get
            {
                return this._tblGamerScreenShots;
            }
            set
            {
                this._tblGamerScreenShots.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceMedia_tblGamerScreenVideo", Storage = "_tblGamerScreenVideos", ThisKey = "Id", OtherKey = "IdSourceMedia")]
        public EntitySet<tblGamerScreenVideo> tblGamerScreenVideos
        {
            get
            {
                return this._tblGamerScreenVideos;
            }
            set
            {
                this._tblGamerScreenVideos.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceMedia_tblSourceMediaFile", Storage = "_tblSourceMediaFiles", ThisKey = "Id", OtherKey = "IdSourceMedia")]
        public EntitySet<tblSourceMediaFile> tblSourceMediaFiles
        {
            get
            {
                return this._tblSourceMediaFiles;
            }
            set
            {
                this._tblSourceMediaFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblDeficiencyType_tblSourceMedia", Storage = "_tblDeficiencyType", ThisKey = "IdDeficiencyType", OtherKey = "Id", IsForeignKey = true)]
        public tblDeficiencyType tblDeficiencyType
        {
            get
            {
                return this._tblDeficiencyType.Entity;
            }
            set
            {
                tblDeficiencyType previousValue = this._tblDeficiencyType.Entity;
                if (((previousValue != value)
                            || (this._tblDeficiencyType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblDeficiencyType.Entity = null;
                        previousValue.tblSourceMedias.Remove(this);
                    }
                    this._tblDeficiencyType.Entity = value;
                    if ((value != null))
                    {
                        value.tblSourceMedias.Add(this);
                        this._IdDeficiencyType = value.Id;
                    }
                    else
                    {
                        this._IdDeficiencyType = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblDeficiencyType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceMediaSentType_tblSourceMedia", Storage = "_tblSourceMediaSentType", ThisKey = "IdSourceMediaSentType", OtherKey = "Id", IsForeignKey = true)]
        public tblSourceMediaSentType tblSourceMediaSentType
        {
            get
            {
                return this._tblSourceMediaSentType.Entity;
            }
            set
            {
                tblSourceMediaSentType previousValue = this._tblSourceMediaSentType.Entity;
                if (((previousValue != value)
                            || (this._tblSourceMediaSentType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblSourceMediaSentType.Entity = null;
                        previousValue.tblSourceMedias.Remove(this);
                    }
                    this._tblSourceMediaSentType.Entity = value;
                    if ((value != null))
                    {
                        value.tblSourceMedias.Add(this);
                        this._IdSourceMediaSentType = value.Id;
                    }
                    else
                    {
                        this._IdSourceMediaSentType = default(int);
                    }
                    this.SendPropertyChanged("tblSourceMediaSentType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceMediaType_tblSourceMedia", Storage = "_tblSourceMediaType", ThisKey = "IdSourceMediaType", OtherKey = "Id", IsForeignKey = true)]
        public tblSourceMediaType tblSourceMediaType
        {
            get
            {
                return this._tblSourceMediaType.Entity;
            }
            set
            {
                tblSourceMediaType previousValue = this._tblSourceMediaType.Entity;
                if (((previousValue != value)
                            || (this._tblSourceMediaType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblSourceMediaType.Entity = null;
                        previousValue.tblSourceMedias.Remove(this);
                    }
                    this._tblSourceMediaType.Entity = value;
                    if ((value != null))
                    {
                        value.tblSourceMedias.Add(this);
                        this._IdSourceMediaType = value.Id;
                    }
                    else
                    {
                        this._IdSourceMediaType = default(int);
                    }
                    this.SendPropertyChanged("tblSourceMediaType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblSourceMedia", Storage = "_tblVersion", ThisKey = "IdVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblSourceMedias.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblSourceMedias.Add(this);
                        this._IdVersion = value.Id;
                    }
                    else
                    {
                        this._IdVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblGamerScreenShots(tblGamerScreenShot entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceMedia = this;
        }

        private void detach_tblGamerScreenShots(tblGamerScreenShot entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceMedia = null;
        }

        private void attach_tblGamerScreenVideos(tblGamerScreenVideo entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceMedia = this;
        }

        private void detach_tblGamerScreenVideos(tblGamerScreenVideo entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceMedia = null;
        }

        private void attach_tblSourceMediaFiles(tblSourceMediaFile entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceMedia = this;
        }

        private void detach_tblSourceMediaFiles(tblSourceMediaFile entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceMedia = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblSourceMediaFile")]
    public partial class tblSourceMediaFile : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdSourceMedia;

        private int _IdFile;

        private EntityRef<tblFile> _tblFile;

        private EntityRef<tblSourceMedia> _tblSourceMedia;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdSourceMediaChanging(int value);
        partial void OnIdSourceMediaChanged();
        partial void OnIdFileChanging(int value);
        partial void OnIdFileChanged();
        #endregion

        public tblSourceMediaFile()
        {
            this._tblFile = default(EntityRef<tblFile>);
            this._tblSourceMedia = default(EntityRef<tblSourceMedia>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdSourceMedia", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdSourceMedia
        {
            get
            {
                return this._IdSourceMedia;
            }
            set
            {
                if ((this._IdSourceMedia != value))
                {
                    if (this._tblSourceMedia.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdSourceMediaChanging(value);
                    this.SendPropertyChanging();
                    this._IdSourceMedia = value;
                    this.SendPropertyChanged("IdSourceMedia");
                    this.OnIdSourceMediaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdFile", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdFile
        {
            get
            {
                return this._IdFile;
            }
            set
            {
                if ((this._IdFile != value))
                {
                    if (this._tblFile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdFileChanging(value);
                    this.SendPropertyChanging();
                    this._IdFile = value;
                    this.SendPropertyChanged("IdFile");
                    this.OnIdFileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblSourceMediaFile", Storage = "_tblFile", ThisKey = "IdFile", OtherKey = "Id", IsForeignKey = true)]
        public tblFile tblFile
        {
            get
            {
                return this._tblFile.Entity;
            }
            set
            {
                tblFile previousValue = this._tblFile.Entity;
                if (((previousValue != value)
                            || (this._tblFile.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblFile.Entity = null;
                        previousValue.tblSourceMediaFiles.Remove(this);
                    }
                    this._tblFile.Entity = value;
                    if ((value != null))
                    {
                        value.tblSourceMediaFiles.Add(this);
                        this._IdFile = value.Id;
                    }
                    else
                    {
                        this._IdFile = default(int);
                    }
                    this.SendPropertyChanged("tblFile");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceMedia_tblSourceMediaFile", Storage = "_tblSourceMedia", ThisKey = "IdSourceMedia", OtherKey = "Id", IsForeignKey = true)]
        public tblSourceMedia tblSourceMedia
        {
            get
            {
                return this._tblSourceMedia.Entity;
            }
            set
            {
                tblSourceMedia previousValue = this._tblSourceMedia.Entity;
                if (((previousValue != value)
                            || (this._tblSourceMedia.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblSourceMedia.Entity = null;
                        previousValue.tblSourceMediaFiles.Remove(this);
                    }
                    this._tblSourceMedia.Entity = value;
                    if ((value != null))
                    {
                        value.tblSourceMediaFiles.Add(this);
                        this._IdSourceMedia = value.Id;
                    }
                    else
                    {
                        this._IdSourceMedia = default(int);
                    }
                    this.SendPropertyChanged("tblSourceMedia");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblSourceMediaSentType")]
    public partial class tblSourceMediaSentType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblSourceMedia> _tblSourceMedias;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblSourceMediaSentType()
        {
            this._tblSourceMedias = new EntitySet<tblSourceMedia>(new Action<tblSourceMedia>(this.attach_tblSourceMedias), new Action<tblSourceMedia>(this.detach_tblSourceMedias));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceMediaSentType_tblSourceMedia", Storage = "_tblSourceMedias", ThisKey = "Id", OtherKey = "IdSourceMediaSentType")]
        public EntitySet<tblSourceMedia> tblSourceMedias
        {
            get
            {
                return this._tblSourceMedias;
            }
            set
            {
                this._tblSourceMedias.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblSourceMedias(tblSourceMedia entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceMediaSentType = this;
        }

        private void detach_tblSourceMedias(tblSourceMedia entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceMediaSentType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblSourceMediaType")]
    public partial class tblSourceMediaType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblSourceMedia> _tblSourceMedias;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblSourceMediaType()
        {
            this._tblSourceMedias = new EntitySet<tblSourceMedia>(new Action<tblSourceMedia>(this.attach_tblSourceMedias), new Action<tblSourceMedia>(this.detach_tblSourceMedias));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceMediaType_tblSourceMedia", Storage = "_tblSourceMedias", ThisKey = "Id", OtherKey = "IdSourceMediaType")]
        public EntitySet<tblSourceMedia> tblSourceMedias
        {
            get
            {
                return this._tblSourceMedias;
            }
            set
            {
                this._tblSourceMedias.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblSourceMedias(tblSourceMedia entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceMediaType = this;
        }

        private void detach_tblSourceMedias(tblSourceMedia entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceMediaType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblSourceType")]
    public partial class tblSourceType : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private EntitySet<tblVersion> _tblVersions;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        #endregion

        public tblSourceType()
        {
            this._tblVersions = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions), new Action<tblVersion>(this.detach_tblVersions));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceType_tblVersion", Storage = "_tblVersions", ThisKey = "Id", OtherKey = "IdSourceType")]
        public EntitySet<tblVersion> tblVersions
        {
            get
            {
                return this._tblVersions;
            }
            set
            {
                this._tblVersions.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceType = this;
        }

        private void detach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblSourceType = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblStaticPage")]
    public partial class tblStaticPage : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Title;

        private string _TitlePictureUrl;

        private string _Intro;

        private string _Content;

        private System.DateTime _CreationDateTime;

        private int _IdAuthor;

        private string _ReadMoreLink;

        private System.Nullable<bool> _IsEdited;

        private System.Nullable<bool> _IsDeleted;

        private System.Nullable<int> _IdNewStaticPage;

        private EntitySet<tblStaticPageFile> _tblStaticPageFiles;

        private EntitySet<tblTag> _tblTags;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        partial void OnTitlePictureUrlChanging(string value);
        partial void OnTitlePictureUrlChanged();
        partial void OnIntroChanging(string value);
        partial void OnIntroChanged();
        partial void OnContentChanging(string value);
        partial void OnContentChanged();
        partial void OnCreationDateTimeChanging(System.DateTime value);
        partial void OnCreationDateTimeChanged();
        partial void OnIdAuthorChanging(int value);
        partial void OnIdAuthorChanged();
        partial void OnReadMoreLinkChanging(string value);
        partial void OnReadMoreLinkChanged();
        partial void OnIsEditedChanging(System.Nullable<bool> value);
        partial void OnIsEditedChanged();
        partial void OnIsDeletedChanging(System.Nullable<bool> value);
        partial void OnIsDeletedChanged();
        partial void OnIdNewStaticPageChanging(System.Nullable<int> value);
        partial void OnIdNewStaticPageChanged();
        #endregion

        public tblStaticPage()
        {
            this._tblStaticPageFiles = new EntitySet<tblStaticPageFile>(new Action<tblStaticPageFile>(this.attach_tblStaticPageFiles), new Action<tblStaticPageFile>(this.detach_tblStaticPageFiles));
            this._tblTags = new EntitySet<tblTag>(new Action<tblTag>(this.attach_tblTags), new Action<tblTag>(this.detach_tblTags));
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "NVarChar(1000)")]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if ((this._Title != value))
                {
                    this.OnTitleChanging(value);
                    this.SendPropertyChanging();
                    this._Title = value;
                    this.SendPropertyChanged("Title");
                    this.OnTitleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TitlePictureUrl", DbType = "NVarChar(1000)")]
        public string TitlePictureUrl
        {
            get
            {
                return this._TitlePictureUrl;
            }
            set
            {
                if ((this._TitlePictureUrl != value))
                {
                    this.OnTitlePictureUrlChanging(value);
                    this.SendPropertyChanging();
                    this._TitlePictureUrl = value;
                    this.SendPropertyChanged("TitlePictureUrl");
                    this.OnTitlePictureUrlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Intro", DbType = "NVarChar(MAX)")]
        public string Intro
        {
            get
            {
                return this._Intro;
            }
            set
            {
                if ((this._Intro != value))
                {
                    this.OnIntroChanging(value);
                    this.SendPropertyChanging();
                    this._Intro = value;
                    this.SendPropertyChanged("Intro");
                    this.OnIntroChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Content", DbType = "NText", UpdateCheck = UpdateCheck.Never)]
        public string Content
        {
            get
            {
                return this._Content;
            }
            set
            {
                if ((this._Content != value))
                {
                    this.OnContentChanging(value);
                    this.SendPropertyChanging();
                    this._Content = value;
                    this.SendPropertyChanged("Content");
                    this.OnContentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreationDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime CreationDateTime
        {
            get
            {
                return this._CreationDateTime;
            }
            set
            {
                if ((this._CreationDateTime != value))
                {
                    this.OnCreationDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._CreationDateTime = value;
                    this.SendPropertyChanged("CreationDateTime");
                    this.OnCreationDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdAuthor", DbType = "Int NOT NULL")]
        public int IdAuthor
        {
            get
            {
                return this._IdAuthor;
            }
            set
            {
                if ((this._IdAuthor != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdAuthorChanging(value);
                    this.SendPropertyChanging();
                    this._IdAuthor = value;
                    this.SendPropertyChanged("IdAuthor");
                    this.OnIdAuthorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReadMoreLink", DbType = "NVarChar(1000)")]
        public string ReadMoreLink
        {
            get
            {
                return this._ReadMoreLink;
            }
            set
            {
                if ((this._ReadMoreLink != value))
                {
                    this.OnReadMoreLinkChanging(value);
                    this.SendPropertyChanging();
                    this._ReadMoreLink = value;
                    this.SendPropertyChanged("ReadMoreLink");
                    this.OnReadMoreLinkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsEdited", DbType = "Bit")]
        public System.Nullable<bool> IsEdited
        {
            get
            {
                return this._IsEdited;
            }
            set
            {
                if ((this._IsEdited != value))
                {
                    this.OnIsEditedChanging(value);
                    this.SendPropertyChanging();
                    this._IsEdited = value;
                    this.SendPropertyChanged("IsEdited");
                    this.OnIsEditedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsDeleted", DbType = "Bit")]
        public System.Nullable<bool> IsDeleted
        {
            get
            {
                return this._IsDeleted;
            }
            set
            {
                if ((this._IsDeleted != value))
                {
                    this.OnIsDeletedChanging(value);
                    this.SendPropertyChanging();
                    this._IsDeleted = value;
                    this.SendPropertyChanged("IsDeleted");
                    this.OnIsDeletedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdNewStaticPage", DbType = "Int")]
        public System.Nullable<int> IdNewStaticPage
        {
            get
            {
                return this._IdNewStaticPage;
            }
            set
            {
                if ((this._IdNewStaticPage != value))
                {
                    this.OnIdNewStaticPageChanging(value);
                    this.SendPropertyChanging();
                    this._IdNewStaticPage = value;
                    this.SendPropertyChanged("IdNewStaticPage");
                    this.OnIdNewStaticPageChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblStaticPage_tblStaticPageFile", Storage = "_tblStaticPageFiles", ThisKey = "Id", OtherKey = "IdStaticPage")]
        public EntitySet<tblStaticPageFile> tblStaticPageFiles
        {
            get
            {
                return this._tblStaticPageFiles;
            }
            set
            {
                this._tblStaticPageFiles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblStaticPage_tblTag", Storage = "_tblTags", ThisKey = "Id", OtherKey = "IdNews")]
        public EntitySet<tblTag> tblTags
        {
            get
            {
                return this._tblTags;
            }
            set
            {
                this._tblTags.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblStaticPage", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdAuthor", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblStaticPages.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblStaticPages.Add(this);
                        this._IdAuthor = value.Id;
                    }
                    else
                    {
                        this._IdAuthor = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblStaticPageFiles(tblStaticPageFile entity)
        {
            this.SendPropertyChanging();
            entity.tblStaticPage = this;
        }

        private void detach_tblStaticPageFiles(tblStaticPageFile entity)
        {
            this.SendPropertyChanging();
            entity.tblStaticPage = null;
        }

        private void attach_tblTags(tblTag entity)
        {
            this.SendPropertyChanging();
            entity.tblStaticPage = this;
        }

        private void detach_tblTags(tblTag entity)
        {
            this.SendPropertyChanging();
            entity.tblStaticPage = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblStaticPageFile")]
    public partial class tblStaticPageFile : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdStaticPage;

        private int _IdFile;

        private EntityRef<tblFile> _tblFile;

        private EntityRef<tblStaticPage> _tblStaticPage;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdStaticPageChanging(int value);
        partial void OnIdStaticPageChanged();
        partial void OnIdFileChanging(int value);
        partial void OnIdFileChanged();
        #endregion

        public tblStaticPageFile()
        {
            this._tblFile = default(EntityRef<tblFile>);
            this._tblStaticPage = default(EntityRef<tblStaticPage>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdStaticPage", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdStaticPage
        {
            get
            {
                return this._IdStaticPage;
            }
            set
            {
                if ((this._IdStaticPage != value))
                {
                    if (this._tblStaticPage.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdStaticPageChanging(value);
                    this.SendPropertyChanging();
                    this._IdStaticPage = value;
                    this.SendPropertyChanged("IdStaticPage");
                    this.OnIdStaticPageChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdFile", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdFile
        {
            get
            {
                return this._IdFile;
            }
            set
            {
                if ((this._IdFile != value))
                {
                    if (this._tblFile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdFileChanging(value);
                    this.SendPropertyChanging();
                    this._IdFile = value;
                    this.SendPropertyChanged("IdFile");
                    this.OnIdFileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblStaticPageFile", Storage = "_tblFile", ThisKey = "IdFile", OtherKey = "Id", IsForeignKey = true)]
        public tblFile tblFile
        {
            get
            {
                return this._tblFile.Entity;
            }
            set
            {
                tblFile previousValue = this._tblFile.Entity;
                if (((previousValue != value)
                            || (this._tblFile.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblFile.Entity = null;
                        previousValue.tblStaticPageFiles.Remove(this);
                    }
                    this._tblFile.Entity = value;
                    if ((value != null))
                    {
                        value.tblStaticPageFiles.Add(this);
                        this._IdFile = value.Id;
                    }
                    else
                    {
                        this._IdFile = default(int);
                    }
                    this.SendPropertyChanged("tblFile");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblStaticPage_tblStaticPageFile", Storage = "_tblStaticPage", ThisKey = "IdStaticPage", OtherKey = "Id", IsForeignKey = true)]
        public tblStaticPage tblStaticPage
        {
            get
            {
                return this._tblStaticPage.Entity;
            }
            set
            {
                tblStaticPage previousValue = this._tblStaticPage.Entity;
                if (((previousValue != value)
                            || (this._tblStaticPage.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblStaticPage.Entity = null;
                        previousValue.tblStaticPageFiles.Remove(this);
                    }
                    this._tblStaticPage.Entity = value;
                    if ((value != null))
                    {
                        value.tblStaticPageFiles.Add(this);
                        this._IdStaticPage = value.Id;
                    }
                    else
                    {
                        this._IdStaticPage = default(int);
                    }
                    this.SendPropertyChanged("tblStaticPage");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblTag")]
    public partial class tblTag : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private int _IdNews;

        private EntityRef<tblStaticPage> _tblStaticPage;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnIdNewsChanging(int value);
        partial void OnIdNewsChanged();
        #endregion

        public tblTag()
        {
            this._tblStaticPage = default(EntityRef<tblStaticPage>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdNews", DbType = "Int NOT NULL")]
        public int IdNews
        {
            get
            {
                return this._IdNews;
            }
            set
            {
                if ((this._IdNews != value))
                {
                    if (this._tblStaticPage.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdNewsChanging(value);
                    this.SendPropertyChanging();
                    this._IdNews = value;
                    this.SendPropertyChanged("IdNews");
                    this.OnIdNewsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblStaticPage_tblTag", Storage = "_tblStaticPage", ThisKey = "IdNews", OtherKey = "Id", IsForeignKey = true)]
        public tblStaticPage tblStaticPage
        {
            get
            {
                return this._tblStaticPage.Entity;
            }
            set
            {
                tblStaticPage previousValue = this._tblStaticPage.Entity;
                if (((previousValue != value)
                            || (this._tblStaticPage.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblStaticPage.Entity = null;
                        previousValue.tblTags.Remove(this);
                    }
                    this._tblStaticPage.Entity = value;
                    if ((value != null))
                    {
                        value.tblTags.Add(this);
                        this._IdNews = value.Id;
                    }
                    else
                    {
                        this._IdNews = default(int);
                    }
                    this.SendPropertyChanged("tblStaticPage");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblUserDocumentFile")]
    public partial class tblUserDocumentFile : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdUser;

        private int _IdFile;

        private int _IdIdentificationType;

        private string _Comment;

        private EntityRef<tblFile> _tblFile;

        private EntityRef<tblIdentificationType> _tblIdentificationType;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdUserChanging(int value);
        partial void OnIdUserChanged();
        partial void OnIdFileChanging(int value);
        partial void OnIdFileChanged();
        partial void OnIdIdentificationTypeChanging(int value);
        partial void OnIdIdentificationTypeChanged();
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
        #endregion

        public tblUserDocumentFile()
        {
            this._tblFile = default(EntityRef<tblFile>);
            this._tblIdentificationType = default(EntityRef<tblIdentificationType>);
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdUser", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdUser
        {
            get
            {
                return this._IdUser;
            }
            set
            {
                if ((this._IdUser != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdUserChanging(value);
                    this.SendPropertyChanging();
                    this._IdUser = value;
                    this.SendPropertyChanged("IdUser");
                    this.OnIdUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdFile", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdFile
        {
            get
            {
                return this._IdFile;
            }
            set
            {
                if ((this._IdFile != value))
                {
                    if (this._tblFile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdFileChanging(value);
                    this.SendPropertyChanging();
                    this._IdFile = value;
                    this.SendPropertyChanged("IdFile");
                    this.OnIdFileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdIdentificationType", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdIdentificationType
        {
            get
            {
                return this._IdIdentificationType;
            }
            set
            {
                if ((this._IdIdentificationType != value))
                {
                    if (this._tblIdentificationType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdIdentificationTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdIdentificationType = value;
                    this.SendPropertyChanged("IdIdentificationType");
                    this.OnIdIdentificationTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Comment", DbType = "NVarChar(MAX)")]
        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                if ((this._Comment != value))
                {
                    this.OnCommentChanging(value);
                    this.SendPropertyChanging();
                    this._Comment = value;
                    this.SendPropertyChanged("Comment");
                    this.OnCommentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblUserDocumentFile", Storage = "_tblFile", ThisKey = "IdFile", OtherKey = "Id", IsForeignKey = true)]
        public tblFile tblFile
        {
            get
            {
                return this._tblFile.Entity;
            }
            set
            {
                tblFile previousValue = this._tblFile.Entity;
                if (((previousValue != value)
                            || (this._tblFile.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblFile.Entity = null;
                        previousValue.tblUserDocumentFiles.Remove(this);
                    }
                    this._tblFile.Entity = value;
                    if ((value != null))
                    {
                        value.tblUserDocumentFiles.Add(this);
                        this._IdFile = value.Id;
                    }
                    else
                    {
                        this._IdFile = default(int);
                    }
                    this.SendPropertyChanged("tblFile");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblIdentificationType_tblUserDocumentFile", Storage = "_tblIdentificationType", ThisKey = "IdIdentificationType", OtherKey = "Id", IsForeignKey = true)]
        public tblIdentificationType tblIdentificationType
        {
            get
            {
                return this._tblIdentificationType.Entity;
            }
            set
            {
                tblIdentificationType previousValue = this._tblIdentificationType.Entity;
                if (((previousValue != value)
                            || (this._tblIdentificationType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblIdentificationType.Entity = null;
                        previousValue.tblUserDocumentFiles.Remove(this);
                    }
                    this._tblIdentificationType.Entity = value;
                    if ((value != null))
                    {
                        value.tblUserDocumentFiles.Add(this);
                        this._IdIdentificationType = value.Id;
                    }
                    else
                    {
                        this._IdIdentificationType = default(int);
                    }
                    this.SendPropertyChanged("tblIdentificationType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblUserDocumentFile", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdUser", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblUserDocumentFiles.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblUserDocumentFiles.Add(this);
                        this._IdUser = value.Id;
                    }
                    else
                    {
                        this._IdUser = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersion")]
    public partial class tblVersion : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private int _IdPlatform;

        private System.Nullable<bool> _IsSourceAvailable;

        private int _IdSourceType;

        private int _IdGame;

        private System.Nullable<System.DateTime> _ReleaseDateTime;

        private string _Introduction;

        private string _IntroductionK1;

        private string _GamePlay;

        private string _ParentRecommendation;

        private int _IdQuality;

        private int _IdProducer;

        private int _IdEditableType;

        private int _IdLanguage;

        private System.Nullable<bool> _IsPersian;

        private System.Nullable<bool> _IsEdited;

        private string _OldID;

        private string _IntroductionMin;

        private System.Nullable<bool> _InAppPayments;

        private int _IdUser;

        private System.Nullable<int> _IdNarrator;

        private System.Nullable<int> _IdGamer;

        private System.Nullable<int> _IdAnalizor;

        private string _GameDuration;

        private string _AnalizDuration;

        private System.Nullable<int> _IdEditedVersion;

        private EntitySet<tblCertificationVersion> _tblCertificationVersions;

        private EntitySet<tblSourceMedia> _tblSourceMedias;

        private EntitySet<tblVersion> _tblVersions;

        private EntitySet<tblVersionAnaliz> _tblVersionAnalizs;

        private EntitySet<tblVersionCategory> _tblVersionCategories;

        private EntitySet<tblVersionEsra> _tblVersionEsras;

        private EntitySet<tblVersionExclusive> _tblVersionExclusives;

        private EntitySet<tblVersionGenre> _tblVersionGenres;

        private EntityRef<tblVersionNarrat> _tblVersionNarrat;

        private EntitySet<tblVersionPictogram> _tblVersionPictograms;

        private EntitySet<tblVersionScreenshot> _tblVersionScreenshots;

        private EntitySet<tblVersionSkill> _tblVersionSkills;

        private EntitySet<tblVersionViewAngle> _tblVersionViewAngles;

        private EntityRef<tblPlatform> _tblPlatform;

        private EntityRef<tblEditableType> _tblEditableType;

        private EntityRef<tblLanguage> _tblLanguage;

        private EntityRef<tblOrganizationBonyad> _tblOrganizationBonyad;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser1;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser2;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser3;

        private EntityRef<tblQuality> _tblQuality;

        private EntityRef<tblSourceType> _tblSourceType;

        private EntityRef<tblVersion> _tblVersion1;

        private EntityRef<tblGame> _tblGame;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnIdPlatformChanging(int value);
        partial void OnIdPlatformChanged();
        partial void OnIsSourceAvailableChanging(System.Nullable<bool> value);
        partial void OnIsSourceAvailableChanged();
        partial void OnIdSourceTypeChanging(int value);
        partial void OnIdSourceTypeChanged();
        partial void OnIdGameChanging(int value);
        partial void OnIdGameChanged();
        partial void OnReleaseDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnReleaseDateTimeChanged();
        partial void OnIntroductionChanging(string value);
        partial void OnIntroductionChanged();
        partial void OnIntroductionK1Changing(string value);
        partial void OnIntroductionK1Changed();
        partial void OnGamePlayChanging(string value);
        partial void OnGamePlayChanged();
        partial void OnParentRecommendationChanging(string value);
        partial void OnParentRecommendationChanged();
        partial void OnIdQualityChanging(int value);
        partial void OnIdQualityChanged();
        partial void OnIdProducerChanging(int value);
        partial void OnIdProducerChanged();
        partial void OnIdEditableTypeChanging(int value);
        partial void OnIdEditableTypeChanged();
        partial void OnIdLanguageChanging(int value);
        partial void OnIdLanguageChanged();
        partial void OnIsPersianChanging(System.Nullable<bool> value);
        partial void OnIsPersianChanged();
        partial void OnIsEditedChanging(System.Nullable<bool> value);
        partial void OnIsEditedChanged();
        partial void OnOldIDChanging(string value);
        partial void OnOldIDChanged();
        partial void OnIntroductionMinChanging(string value);
        partial void OnIntroductionMinChanged();
        partial void OnInAppPaymentsChanging(System.Nullable<bool> value);
        partial void OnInAppPaymentsChanged();
        partial void OnIdUserChanging(int value);
        partial void OnIdUserChanged();
        partial void OnIdNarratorChanging(System.Nullable<int> value);
        partial void OnIdNarratorChanged();
        partial void OnIdGamerChanging(System.Nullable<int> value);
        partial void OnIdGamerChanged();
        partial void OnIdAnalizorChanging(System.Nullable<int> value);
        partial void OnIdAnalizorChanged();
        partial void OnGameDurationChanging(string value);
        partial void OnGameDurationChanged();
        partial void OnAnalizDurationChanging(string value);
        partial void OnAnalizDurationChanged();
        partial void OnIdEditedVersionChanging(System.Nullable<int> value);
        partial void OnIdEditedVersionChanged();
        #endregion

        public tblVersion()
        {
            this._tblCertificationVersions = new EntitySet<tblCertificationVersion>(new Action<tblCertificationVersion>(this.attach_tblCertificationVersions), new Action<tblCertificationVersion>(this.detach_tblCertificationVersions));
            this._tblSourceMedias = new EntitySet<tblSourceMedia>(new Action<tblSourceMedia>(this.attach_tblSourceMedias), new Action<tblSourceMedia>(this.detach_tblSourceMedias));
            this._tblVersions = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions), new Action<tblVersion>(this.detach_tblVersions));
            this._tblVersionAnalizs = new EntitySet<tblVersionAnaliz>(new Action<tblVersionAnaliz>(this.attach_tblVersionAnalizs), new Action<tblVersionAnaliz>(this.detach_tblVersionAnalizs));
            this._tblVersionCategories = new EntitySet<tblVersionCategory>(new Action<tblVersionCategory>(this.attach_tblVersionCategories), new Action<tblVersionCategory>(this.detach_tblVersionCategories));
            this._tblVersionEsras = new EntitySet<tblVersionEsra>(new Action<tblVersionEsra>(this.attach_tblVersionEsras), new Action<tblVersionEsra>(this.detach_tblVersionEsras));
            this._tblVersionExclusives = new EntitySet<tblVersionExclusive>(new Action<tblVersionExclusive>(this.attach_tblVersionExclusives), new Action<tblVersionExclusive>(this.detach_tblVersionExclusives));
            this._tblVersionGenres = new EntitySet<tblVersionGenre>(new Action<tblVersionGenre>(this.attach_tblVersionGenres), new Action<tblVersionGenre>(this.detach_tblVersionGenres));
            this._tblVersionNarrat = default(EntityRef<tblVersionNarrat>);
            this._tblVersionPictograms = new EntitySet<tblVersionPictogram>(new Action<tblVersionPictogram>(this.attach_tblVersionPictograms), new Action<tblVersionPictogram>(this.detach_tblVersionPictograms));
            this._tblVersionScreenshots = new EntitySet<tblVersionScreenshot>(new Action<tblVersionScreenshot>(this.attach_tblVersionScreenshots), new Action<tblVersionScreenshot>(this.detach_tblVersionScreenshots));
            this._tblVersionSkills = new EntitySet<tblVersionSkill>(new Action<tblVersionSkill>(this.attach_tblVersionSkills), new Action<tblVersionSkill>(this.detach_tblVersionSkills));
            this._tblVersionViewAngles = new EntitySet<tblVersionViewAngle>(new Action<tblVersionViewAngle>(this.attach_tblVersionViewAngles), new Action<tblVersionViewAngle>(this.detach_tblVersionViewAngles));
            this._tblPlatform = default(EntityRef<tblPlatform>);
            this._tblEditableType = default(EntityRef<tblEditableType>);
            this._tblLanguage = default(EntityRef<tblLanguage>);
            this._tblOrganizationBonyad = default(EntityRef<tblOrganizationBonyad>);
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblProducerNExclusiveNUser1 = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblProducerNExclusiveNUser2 = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblProducerNExclusiveNUser3 = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblQuality = default(EntityRef<tblQuality>);
            this._tblSourceType = default(EntityRef<tblSourceType>);
            this._tblVersion1 = default(EntityRef<tblVersion>);
            this._tblGame = default(EntityRef<tblGame>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdPlatform", DbType = "Int NOT NULL")]
        public int IdPlatform
        {
            get
            {
                return this._IdPlatform;
            }
            set
            {
                if ((this._IdPlatform != value))
                {
                    if (this._tblPlatform.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdPlatformChanging(value);
                    this.SendPropertyChanging();
                    this._IdPlatform = value;
                    this.SendPropertyChanged("IdPlatform");
                    this.OnIdPlatformChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsSourceAvailable", DbType = "Bit")]
        public System.Nullable<bool> IsSourceAvailable
        {
            get
            {
                return this._IsSourceAvailable;
            }
            set
            {
                if ((this._IsSourceAvailable != value))
                {
                    this.OnIsSourceAvailableChanging(value);
                    this.SendPropertyChanging();
                    this._IsSourceAvailable = value;
                    this.SendPropertyChanged("IsSourceAvailable");
                    this.OnIsSourceAvailableChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdSourceType", DbType = "Int NOT NULL")]
        public int IdSourceType
        {
            get
            {
                return this._IdSourceType;
            }
            set
            {
                if ((this._IdSourceType != value))
                {
                    if (this._tblSourceType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdSourceTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdSourceType = value;
                    this.SendPropertyChanged("IdSourceType");
                    this.OnIdSourceTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdGame", DbType = "Int NOT NULL")]
        public int IdGame
        {
            get
            {
                return this._IdGame;
            }
            set
            {
                if ((this._IdGame != value))
                {
                    if (this._tblGame.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdGameChanging(value);
                    this.SendPropertyChanging();
                    this._IdGame = value;
                    this.SendPropertyChanged("IdGame");
                    this.OnIdGameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReleaseDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ReleaseDateTime
        {
            get
            {
                return this._ReleaseDateTime;
            }
            set
            {
                if ((this._ReleaseDateTime != value))
                {
                    this.OnReleaseDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._ReleaseDateTime = value;
                    this.SendPropertyChanged("ReleaseDateTime");
                    this.OnReleaseDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Introduction", DbType = "NVarChar(MAX)")]
        public string Introduction
        {
            get
            {
                return this._Introduction;
            }
            set
            {
                if ((this._Introduction != value))
                {
                    this.OnIntroductionChanging(value);
                    this.SendPropertyChanging();
                    this._Introduction = value;
                    this.SendPropertyChanged("Introduction");
                    this.OnIntroductionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IntroductionK1", DbType = "NVarChar(MAX)")]
        public string IntroductionK1
        {
            get
            {
                return this._IntroductionK1;
            }
            set
            {
                if ((this._IntroductionK1 != value))
                {
                    this.OnIntroductionK1Changing(value);
                    this.SendPropertyChanging();
                    this._IntroductionK1 = value;
                    this.SendPropertyChanged("IntroductionK1");
                    this.OnIntroductionK1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GamePlay", DbType = "NVarChar(MAX)")]
        public string GamePlay
        {
            get
            {
                return this._GamePlay;
            }
            set
            {
                if ((this._GamePlay != value))
                {
                    this.OnGamePlayChanging(value);
                    this.SendPropertyChanging();
                    this._GamePlay = value;
                    this.SendPropertyChanged("GamePlay");
                    this.OnGamePlayChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ParentRecommendation", DbType = "NVarChar(MAX)")]
        public string ParentRecommendation
        {
            get
            {
                return this._ParentRecommendation;
            }
            set
            {
                if ((this._ParentRecommendation != value))
                {
                    this.OnParentRecommendationChanging(value);
                    this.SendPropertyChanging();
                    this._ParentRecommendation = value;
                    this.SendPropertyChanged("ParentRecommendation");
                    this.OnParentRecommendationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdQuality", DbType = "Int NOT NULL")]
        public int IdQuality
        {
            get
            {
                return this._IdQuality;
            }
            set
            {
                if ((this._IdQuality != value))
                {
                    if (this._tblQuality.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdQualityChanging(value);
                    this.SendPropertyChanging();
                    this._IdQuality = value;
                    this.SendPropertyChanged("IdQuality");
                    this.OnIdQualityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdProducer", DbType = "Int NOT NULL")]
        public int IdProducer
        {
            get
            {
                return this._IdProducer;
            }
            set
            {
                if ((this._IdProducer != value))
                {
                    if (this._tblOrganizationBonyad.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdProducerChanging(value);
                    this.SendPropertyChanging();
                    this._IdProducer = value;
                    this.SendPropertyChanged("IdProducer");
                    this.OnIdProducerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdEditableType", DbType = "Int NOT NULL")]
        public int IdEditableType
        {
            get
            {
                return this._IdEditableType;
            }
            set
            {
                if ((this._IdEditableType != value))
                {
                    if (this._tblEditableType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdEditableTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdEditableType = value;
                    this.SendPropertyChanged("IdEditableType");
                    this.OnIdEditableTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdLanguage", DbType = "Int NOT NULL")]
        public int IdLanguage
        {
            get
            {
                return this._IdLanguage;
            }
            set
            {
                if ((this._IdLanguage != value))
                {
                    if (this._tblLanguage.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdLanguageChanging(value);
                    this.SendPropertyChanging();
                    this._IdLanguage = value;
                    this.SendPropertyChanged("IdLanguage");
                    this.OnIdLanguageChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPersian", DbType = "Bit")]
        public System.Nullable<bool> IsPersian
        {
            get
            {
                return this._IsPersian;
            }
            set
            {
                if ((this._IsPersian != value))
                {
                    this.OnIsPersianChanging(value);
                    this.SendPropertyChanging();
                    this._IsPersian = value;
                    this.SendPropertyChanged("IsPersian");
                    this.OnIsPersianChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsEdited", DbType = "Bit")]
        public System.Nullable<bool> IsEdited
        {
            get
            {
                return this._IsEdited;
            }
            set
            {
                if ((this._IsEdited != value))
                {
                    this.OnIsEditedChanging(value);
                    this.SendPropertyChanging();
                    this._IsEdited = value;
                    this.SendPropertyChanged("IsEdited");
                    this.OnIsEditedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OldID", DbType = "NVarChar(50)")]
        public string OldID
        {
            get
            {
                return this._OldID;
            }
            set
            {
                if ((this._OldID != value))
                {
                    this.OnOldIDChanging(value);
                    this.SendPropertyChanging();
                    this._OldID = value;
                    this.SendPropertyChanged("OldID");
                    this.OnOldIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IntroductionMin", DbType = "NVarChar(1000)")]
        public string IntroductionMin
        {
            get
            {
                return this._IntroductionMin;
            }
            set
            {
                if ((this._IntroductionMin != value))
                {
                    this.OnIntroductionMinChanging(value);
                    this.SendPropertyChanging();
                    this._IntroductionMin = value;
                    this.SendPropertyChanged("IntroductionMin");
                    this.OnIntroductionMinChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InAppPayments", DbType = "Bit")]
        public System.Nullable<bool> InAppPayments
        {
            get
            {
                return this._InAppPayments;
            }
            set
            {
                if ((this._InAppPayments != value))
                {
                    this.OnInAppPaymentsChanging(value);
                    this.SendPropertyChanging();
                    this._InAppPayments = value;
                    this.SendPropertyChanged("InAppPayments");
                    this.OnInAppPaymentsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdUser", DbType = "Int NOT NULL")]
        public int IdUser
        {
            get
            {
                return this._IdUser;
            }
            set
            {
                if ((this._IdUser != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdUserChanging(value);
                    this.SendPropertyChanging();
                    this._IdUser = value;
                    this.SendPropertyChanged("IdUser");
                    this.OnIdUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdNarrator", DbType = "Int")]
        public System.Nullable<int> IdNarrator
        {
            get
            {
                return this._IdNarrator;
            }
            set
            {
                if ((this._IdNarrator != value))
                {
                    if (this._tblProducerNExclusiveNUser1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdNarratorChanging(value);
                    this.SendPropertyChanging();
                    this._IdNarrator = value;
                    this.SendPropertyChanged("IdNarrator");
                    this.OnIdNarratorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdGamer", DbType = "Int")]
        public System.Nullable<int> IdGamer
        {
            get
            {
                return this._IdGamer;
            }
            set
            {
                if ((this._IdGamer != value))
                {
                    if (this._tblProducerNExclusiveNUser2.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdGamerChanging(value);
                    this.SendPropertyChanging();
                    this._IdGamer = value;
                    this.SendPropertyChanged("IdGamer");
                    this.OnIdGamerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdAnalizor", DbType = "Int")]
        public System.Nullable<int> IdAnalizor
        {
            get
            {
                return this._IdAnalizor;
            }
            set
            {
                if ((this._IdAnalizor != value))
                {
                    if (this._tblProducerNExclusiveNUser3.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdAnalizorChanging(value);
                    this.SendPropertyChanging();
                    this._IdAnalizor = value;
                    this.SendPropertyChanged("IdAnalizor");
                    this.OnIdAnalizorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GameDuration", DbType = "NVarChar(MAX)")]
        public string GameDuration
        {
            get
            {
                return this._GameDuration;
            }
            set
            {
                if ((this._GameDuration != value))
                {
                    this.OnGameDurationChanging(value);
                    this.SendPropertyChanging();
                    this._GameDuration = value;
                    this.SendPropertyChanged("GameDuration");
                    this.OnGameDurationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AnalizDuration", DbType = "NVarChar(MAX)")]
        public string AnalizDuration
        {
            get
            {
                return this._AnalizDuration;
            }
            set
            {
                if ((this._AnalizDuration != value))
                {
                    this.OnAnalizDurationChanging(value);
                    this.SendPropertyChanging();
                    this._AnalizDuration = value;
                    this.SendPropertyChanged("AnalizDuration");
                    this.OnAnalizDurationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdEditedVersion", DbType = "Int")]
        public System.Nullable<int> IdEditedVersion
        {
            get
            {
                return this._IdEditedVersion;
            }
            set
            {
                if ((this._IdEditedVersion != value))
                {
                    if (this._tblVersion1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdEditedVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdEditedVersion = value;
                    this.SendPropertyChanged("IdEditedVersion");
                    this.OnIdEditedVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblCertificationVersion", Storage = "_tblCertificationVersions", ThisKey = "Id", OtherKey = "IdVersion")]
        public EntitySet<tblCertificationVersion> tblCertificationVersions
        {
            get
            {
                return this._tblCertificationVersions;
            }
            set
            {
                this._tblCertificationVersions.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblSourceMedia", Storage = "_tblSourceMedias", ThisKey = "Id", OtherKey = "IdVersion")]
        public EntitySet<tblSourceMedia> tblSourceMedias
        {
            get
            {
                return this._tblSourceMedias;
            }
            set
            {
                this._tblSourceMedias.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersion", Storage = "_tblVersions", ThisKey = "Id", OtherKey = "IdEditedVersion")]
        public EntitySet<tblVersion> tblVersions
        {
            get
            {
                return this._tblVersions;
            }
            set
            {
                this._tblVersions.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionAnaliz", Storage = "_tblVersionAnalizs", ThisKey = "Id", OtherKey = "IdVersion")]
        public EntitySet<tblVersionAnaliz> tblVersionAnalizs
        {
            get
            {
                return this._tblVersionAnalizs;
            }
            set
            {
                this._tblVersionAnalizs.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionCategory", Storage = "_tblVersionCategories", ThisKey = "Id", OtherKey = "IdVersion")]
        public EntitySet<tblVersionCategory> tblVersionCategories
        {
            get
            {
                return this._tblVersionCategories;
            }
            set
            {
                this._tblVersionCategories.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionEsra", Storage = "_tblVersionEsras", ThisKey = "Id", OtherKey = "IdVersion")]
        public EntitySet<tblVersionEsra> tblVersionEsras
        {
            get
            {
                return this._tblVersionEsras;
            }
            set
            {
                this._tblVersionEsras.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionExclusive", Storage = "_tblVersionExclusives", ThisKey = "Id", OtherKey = "IdVersion")]
        public EntitySet<tblVersionExclusive> tblVersionExclusives
        {
            get
            {
                return this._tblVersionExclusives;
            }
            set
            {
                this._tblVersionExclusives.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionGenre", Storage = "_tblVersionGenres", ThisKey = "Id", OtherKey = "IdVersion")]
        public EntitySet<tblVersionGenre> tblVersionGenres
        {
            get
            {
                return this._tblVersionGenres;
            }
            set
            {
                this._tblVersionGenres.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionNarrat", Storage = "_tblVersionNarrat", ThisKey = "Id", OtherKey = "IdVersion", IsUnique = true, IsForeignKey = false)]
        public tblVersionNarrat tblVersionNarrat
        {
            get
            {
                return this._tblVersionNarrat.Entity;
            }
            set
            {
                tblVersionNarrat previousValue = this._tblVersionNarrat.Entity;
                if (((previousValue != value)
                            || (this._tblVersionNarrat.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersionNarrat.Entity = null;
                        previousValue.tblVersion = null;
                    }
                    this._tblVersionNarrat.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersion = this;
                    }
                    this.SendPropertyChanged("tblVersionNarrat");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionPictogram", Storage = "_tblVersionPictograms", ThisKey = "Id", OtherKey = "IdVersion")]
        public EntitySet<tblVersionPictogram> tblVersionPictograms
        {
            get
            {
                return this._tblVersionPictograms;
            }
            set
            {
                this._tblVersionPictograms.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionScreenshot", Storage = "_tblVersionScreenshots", ThisKey = "Id", OtherKey = "IdVersion")]
        public EntitySet<tblVersionScreenshot> tblVersionScreenshots
        {
            get
            {
                return this._tblVersionScreenshots;
            }
            set
            {
                this._tblVersionScreenshots.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionSkill", Storage = "_tblVersionSkills", ThisKey = "Id", OtherKey = "idVersion")]
        public EntitySet<tblVersionSkill> tblVersionSkills
        {
            get
            {
                return this._tblVersionSkills;
            }
            set
            {
                this._tblVersionSkills.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionViewAngle", Storage = "_tblVersionViewAngles", ThisKey = "Id", OtherKey = "idVersion")]
        public EntitySet<tblVersionViewAngle> tblVersionViewAngles
        {
            get
            {
                return this._tblVersionViewAngles;
            }
            set
            {
                this._tblVersionViewAngles.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPlatform_tblVersion", Storage = "_tblPlatform", ThisKey = "IdPlatform", OtherKey = "Id", IsForeignKey = true)]
        public tblPlatform tblPlatform
        {
            get
            {
                return this._tblPlatform.Entity;
            }
            set
            {
                tblPlatform previousValue = this._tblPlatform.Entity;
                if (((previousValue != value)
                            || (this._tblPlatform.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblPlatform.Entity = null;
                        previousValue.tblVersions.Remove(this);
                    }
                    this._tblPlatform.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions.Add(this);
                        this._IdPlatform = value.Id;
                    }
                    else
                    {
                        this._IdPlatform = default(int);
                    }
                    this.SendPropertyChanged("tblPlatform");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEditableType_tblVersion", Storage = "_tblEditableType", ThisKey = "IdEditableType", OtherKey = "Id", IsForeignKey = true)]
        public tblEditableType tblEditableType
        {
            get
            {
                return this._tblEditableType.Entity;
            }
            set
            {
                tblEditableType previousValue = this._tblEditableType.Entity;
                if (((previousValue != value)
                            || (this._tblEditableType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblEditableType.Entity = null;
                        previousValue.tblVersions.Remove(this);
                    }
                    this._tblEditableType.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions.Add(this);
                        this._IdEditableType = value.Id;
                    }
                    else
                    {
                        this._IdEditableType = default(int);
                    }
                    this.SendPropertyChanged("tblEditableType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblLanguage_tblVersion", Storage = "_tblLanguage", ThisKey = "IdLanguage", OtherKey = "Id", IsForeignKey = true)]
        public tblLanguage tblLanguage
        {
            get
            {
                return this._tblLanguage.Entity;
            }
            set
            {
                tblLanguage previousValue = this._tblLanguage.Entity;
                if (((previousValue != value)
                            || (this._tblLanguage.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblLanguage.Entity = null;
                        previousValue.tblVersions.Remove(this);
                    }
                    this._tblLanguage.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions.Add(this);
                        this._IdLanguage = value.Id;
                    }
                    else
                    {
                        this._IdLanguage = default(int);
                    }
                    this.SendPropertyChanged("tblLanguage");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblVersion", Storage = "_tblOrganizationBonyad", ThisKey = "IdProducer", OtherKey = "Id", IsForeignKey = true)]
        public tblOrganizationBonyad tblOrganizationBonyad
        {
            get
            {
                return this._tblOrganizationBonyad.Entity;
            }
            set
            {
                tblOrganizationBonyad previousValue = this._tblOrganizationBonyad.Entity;
                if (((previousValue != value)
                            || (this._tblOrganizationBonyad.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblOrganizationBonyad.Entity = null;
                        previousValue.tblVersions.Remove(this);
                    }
                    this._tblOrganizationBonyad.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions.Add(this);
                        this._IdProducer = value.Id;
                    }
                    else
                    {
                        this._IdProducer = default(int);
                    }
                    this.SendPropertyChanged("tblOrganizationBonyad");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersion", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdUser", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblVersions.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions.Add(this);
                        this._IdUser = value.Id;
                    }
                    else
                    {
                        this._IdUser = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersion1", Storage = "_tblProducerNExclusiveNUser1", ThisKey = "IdNarrator", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser1
        {
            get
            {
                return this._tblProducerNExclusiveNUser1.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser1.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser1.Entity = null;
                        previousValue.tblVersions1.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser1.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions1.Add(this);
                        this._IdNarrator = value.Id;
                    }
                    else
                    {
                        this._IdNarrator = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser1");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersion2", Storage = "_tblProducerNExclusiveNUser2", ThisKey = "IdGamer", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser2
        {
            get
            {
                return this._tblProducerNExclusiveNUser2.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser2.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser2.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser2.Entity = null;
                        previousValue.tblVersions2.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser2.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions2.Add(this);
                        this._IdGamer = value.Id;
                    }
                    else
                    {
                        this._IdGamer = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser2");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersion3", Storage = "_tblProducerNExclusiveNUser3", ThisKey = "IdAnalizor", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser3
        {
            get
            {
                return this._tblProducerNExclusiveNUser3.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser3.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser3.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser3.Entity = null;
                        previousValue.tblVersions3.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser3.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions3.Add(this);
                        this._IdAnalizor = value.Id;
                    }
                    else
                    {
                        this._IdAnalizor = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser3");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblQuality_tblVersion", Storage = "_tblQuality", ThisKey = "IdQuality", OtherKey = "Id", IsForeignKey = true)]
        public tblQuality tblQuality
        {
            get
            {
                return this._tblQuality.Entity;
            }
            set
            {
                tblQuality previousValue = this._tblQuality.Entity;
                if (((previousValue != value)
                            || (this._tblQuality.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblQuality.Entity = null;
                        previousValue.tblVersions.Remove(this);
                    }
                    this._tblQuality.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions.Add(this);
                        this._IdQuality = value.Id;
                    }
                    else
                    {
                        this._IdQuality = default(int);
                    }
                    this.SendPropertyChanged("tblQuality");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSourceType_tblVersion", Storage = "_tblSourceType", ThisKey = "IdSourceType", OtherKey = "Id", IsForeignKey = true)]
        public tblSourceType tblSourceType
        {
            get
            {
                return this._tblSourceType.Entity;
            }
            set
            {
                tblSourceType previousValue = this._tblSourceType.Entity;
                if (((previousValue != value)
                            || (this._tblSourceType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblSourceType.Entity = null;
                        previousValue.tblVersions.Remove(this);
                    }
                    this._tblSourceType.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions.Add(this);
                        this._IdSourceType = value.Id;
                    }
                    else
                    {
                        this._IdSourceType = default(int);
                    }
                    this.SendPropertyChanged("tblSourceType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersion", Storage = "_tblVersion1", ThisKey = "IdEditedVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion1
        {
            get
            {
                return this._tblVersion1.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion1.Entity;
                if (((previousValue != value)
                            || (this._tblVersion1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion1.Entity = null;
                        previousValue.tblVersions.Remove(this);
                    }
                    this._tblVersion1.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions.Add(this);
                        this._IdEditedVersion = value.Id;
                    }
                    else
                    {
                        this._IdEditedVersion = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblVersion1");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblGame_tblVersion", Storage = "_tblGame", ThisKey = "IdGame", OtherKey = "Id", IsForeignKey = true)]
        public tblGame tblGame
        {
            get
            {
                return this._tblGame.Entity;
            }
            set
            {
                tblGame previousValue = this._tblGame.Entity;
                if (((previousValue != value)
                            || (this._tblGame.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblGame.Entity = null;
                        previousValue.tblVersions.Remove(this);
                    }
                    this._tblGame.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersions.Add(this);
                        this._IdGame = value.Id;
                    }
                    else
                    {
                        this._IdGame = default(int);
                    }
                    this.SendPropertyChanged("tblGame");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblCertificationVersions(tblCertificationVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblCertificationVersions(tblCertificationVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }

        private void attach_tblSourceMedias(tblSourceMedia entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblSourceMedias(tblSourceMedia entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }

        private void attach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion1 = this;
        }

        private void detach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion1 = null;
        }

        private void attach_tblVersionAnalizs(tblVersionAnaliz entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblVersionAnalizs(tblVersionAnaliz entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }

        private void attach_tblVersionCategories(tblVersionCategory entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblVersionCategories(tblVersionCategory entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }

        private void attach_tblVersionEsras(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblVersionEsras(tblVersionEsra entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }

        private void attach_tblVersionExclusives(tblVersionExclusive entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblVersionExclusives(tblVersionExclusive entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }

        private void attach_tblVersionGenres(tblVersionGenre entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblVersionGenres(tblVersionGenre entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }

        private void attach_tblVersionPictograms(tblVersionPictogram entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblVersionPictograms(tblVersionPictogram entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }

        private void attach_tblVersionScreenshots(tblVersionScreenshot entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblVersionScreenshots(tblVersionScreenshot entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }

        private void attach_tblVersionSkills(tblVersionSkill entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblVersionSkills(tblVersionSkill entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }

        private void attach_tblVersionViewAngles(tblVersionViewAngle entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = this;
        }

        private void detach_tblVersionViewAngles(tblVersionViewAngle entity)
        {
            this.SendPropertyChanging();
            entity.tblVersion = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersionAnaliz")]
    public partial class tblVersionAnaliz : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private System.Nullable<int> _IdVersion;

        private System.Nullable<int> _IdPictogram;

        private System.Nullable<int> _idRate;

        private string _Title;

        private string _OccurredTime;

        private string _AnalizorComment;

        private System.Nullable<bool> _GoEdit;

        private System.Nullable<int> _IdFile;

        private EntitySet<tblAnalizGamePart> _tblAnalizGameParts;

        private EntityRef<tblFile> _tblFile;

        private EntityRef<tblRate> _tblRate;

        private EntityRef<tblVersion> _tblVersion;

        private EntityRef<tblPictogram> _tblPictogram;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnIdVersionChanging(System.Nullable<int> value);
        partial void OnIdVersionChanged();
        partial void OnIdPictogramChanging(System.Nullable<int> value);
        partial void OnIdPictogramChanged();
        partial void OnidRateChanging(System.Nullable<int> value);
        partial void OnidRateChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        partial void OnOccurredTimeChanging(string value);
        partial void OnOccurredTimeChanged();
        partial void OnAnalizorCommentChanging(string value);
        partial void OnAnalizorCommentChanged();
        partial void OnGoEditChanging(System.Nullable<bool> value);
        partial void OnGoEditChanged();
        partial void OnIdFileChanging(System.Nullable<int> value);
        partial void OnIdFileChanged();
        #endregion

        public tblVersionAnaliz()
        {
            this._tblAnalizGameParts = new EntitySet<tblAnalizGamePart>(new Action<tblAnalizGamePart>(this.attach_tblAnalizGameParts), new Action<tblAnalizGamePart>(this.detach_tblAnalizGameParts));
            this._tblFile = default(EntityRef<tblFile>);
            this._tblRate = default(EntityRef<tblRate>);
            this._tblVersion = default(EntityRef<tblVersion>);
            this._tblPictogram = default(EntityRef<tblPictogram>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersion", DbType = "Int")]
        public System.Nullable<int> IdVersion
        {
            get
            {
                return this._IdVersion;
            }
            set
            {
                if ((this._IdVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersion = value;
                    this.SendPropertyChanged("IdVersion");
                    this.OnIdVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdPictogram", DbType = "Int")]
        public System.Nullable<int> IdPictogram
        {
            get
            {
                return this._IdPictogram;
            }
            set
            {
                if ((this._IdPictogram != value))
                {
                    if (this._tblPictogram.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdPictogramChanging(value);
                    this.SendPropertyChanging();
                    this._IdPictogram = value;
                    this.SendPropertyChanged("IdPictogram");
                    this.OnIdPictogramChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_idRate", DbType = "Int")]
        public System.Nullable<int> idRate
        {
            get
            {
                return this._idRate;
            }
            set
            {
                if ((this._idRate != value))
                {
                    if (this._tblRate.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnidRateChanging(value);
                    this.SendPropertyChanging();
                    this._idRate = value;
                    this.SendPropertyChanged("idRate");
                    this.OnidRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Title", DbType = "NChar(10)")]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if ((this._Title != value))
                {
                    this.OnTitleChanging(value);
                    this.SendPropertyChanging();
                    this._Title = value;
                    this.SendPropertyChanged("Title");
                    this.OnTitleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OccurredTime", DbType = "NVarChar(MAX)")]
        public string OccurredTime
        {
            get
            {
                return this._OccurredTime;
            }
            set
            {
                if ((this._OccurredTime != value))
                {
                    this.OnOccurredTimeChanging(value);
                    this.SendPropertyChanging();
                    this._OccurredTime = value;
                    this.SendPropertyChanged("OccurredTime");
                    this.OnOccurredTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AnalizorComment", DbType = "NVarChar(MAX)")]
        public string AnalizorComment
        {
            get
            {
                return this._AnalizorComment;
            }
            set
            {
                if ((this._AnalizorComment != value))
                {
                    this.OnAnalizorCommentChanging(value);
                    this.SendPropertyChanging();
                    this._AnalizorComment = value;
                    this.SendPropertyChanged("AnalizorComment");
                    this.OnAnalizorCommentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GoEdit", DbType = "Bit")]
        public System.Nullable<bool> GoEdit
        {
            get
            {
                return this._GoEdit;
            }
            set
            {
                if ((this._GoEdit != value))
                {
                    this.OnGoEditChanging(value);
                    this.SendPropertyChanging();
                    this._GoEdit = value;
                    this.SendPropertyChanged("GoEdit");
                    this.OnGoEditChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdFile", DbType = "Int")]
        public System.Nullable<int> IdFile
        {
            get
            {
                return this._IdFile;
            }
            set
            {
                if ((this._IdFile != value))
                {
                    if (this._tblFile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdFileChanging(value);
                    this.SendPropertyChanging();
                    this._IdFile = value;
                    this.SendPropertyChanged("IdFile");
                    this.OnIdFileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersionAnaliz_tblAnalizGamePart", Storage = "_tblAnalizGameParts", ThisKey = "Id", OtherKey = "IdVersionEsraStatusPictogram")]
        public EntitySet<tblAnalizGamePart> tblAnalizGameParts
        {
            get
            {
                return this._tblAnalizGameParts;
            }
            set
            {
                this._tblAnalizGameParts.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblVersionAnaliz", Storage = "_tblFile", ThisKey = "IdFile", OtherKey = "Id", IsForeignKey = true)]
        public tblFile tblFile
        {
            get
            {
                return this._tblFile.Entity;
            }
            set
            {
                tblFile previousValue = this._tblFile.Entity;
                if (((previousValue != value)
                            || (this._tblFile.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblFile.Entity = null;
                        previousValue.tblVersionAnalizs.Remove(this);
                    }
                    this._tblFile.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionAnalizs.Add(this);
                        this._IdFile = value.Id;
                    }
                    else
                    {
                        this._IdFile = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblFile");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblRate_tblVersionAnaliz", Storage = "_tblRate", ThisKey = "idRate", OtherKey = "id", IsForeignKey = true)]
        public tblRate tblRate
        {
            get
            {
                return this._tblRate.Entity;
            }
            set
            {
                tblRate previousValue = this._tblRate.Entity;
                if (((previousValue != value)
                            || (this._tblRate.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblRate.Entity = null;
                        previousValue.tblVersionAnalizs.Remove(this);
                    }
                    this._tblRate.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionAnalizs.Add(this);
                        this._idRate = value.id;
                    }
                    else
                    {
                        this._idRate = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblRate");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionAnaliz", Storage = "_tblVersion", ThisKey = "IdVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblVersionAnalizs.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionAnalizs.Add(this);
                        this._IdVersion = value.Id;
                    }
                    else
                    {
                        this._IdVersion = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPictogram_tblVersionAnaliz", Storage = "_tblPictogram", ThisKey = "IdPictogram", OtherKey = "Id", IsForeignKey = true)]
        public tblPictogram tblPictogram
        {
            get
            {
                return this._tblPictogram.Entity;
            }
            set
            {
                tblPictogram previousValue = this._tblPictogram.Entity;
                if (((previousValue != value)
                            || (this._tblPictogram.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblPictogram.Entity = null;
                        previousValue.tblVersionAnalizs.Remove(this);
                    }
                    this._tblPictogram.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionAnalizs.Add(this);
                        this._IdPictogram = value.Id;
                    }
                    else
                    {
                        this._IdPictogram = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblPictogram");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblAnalizGameParts(tblAnalizGamePart entity)
        {
            this.SendPropertyChanging();
            entity.tblVersionAnaliz = this;
        }

        private void detach_tblAnalizGameParts(tblAnalizGamePart entity)
        {
            this.SendPropertyChanging();
            entity.tblVersionAnaliz = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersionCategory")]
    public partial class tblVersionCategory : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdVersion;

        private int _IdCategory;

        private EntityRef<tblGameCategory> _tblGameCategory;

        private EntityRef<tblVersion> _tblVersion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdVersionChanging(int value);
        partial void OnIdVersionChanged();
        partial void OnIdCategoryChanging(int value);
        partial void OnIdCategoryChanged();
        #endregion

        public tblVersionCategory()
        {
            this._tblGameCategory = default(EntityRef<tblGameCategory>);
            this._tblVersion = default(EntityRef<tblVersion>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersion", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdVersion
        {
            get
            {
                return this._IdVersion;
            }
            set
            {
                if ((this._IdVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersion = value;
                    this.SendPropertyChanged("IdVersion");
                    this.OnIdVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdCategory", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdCategory
        {
            get
            {
                return this._IdCategory;
            }
            set
            {
                if ((this._IdCategory != value))
                {
                    if (this._tblGameCategory.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._IdCategory = value;
                    this.SendPropertyChanged("IdCategory");
                    this.OnIdCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblGameCategory_tblVersionCategory", Storage = "_tblGameCategory", ThisKey = "IdCategory", OtherKey = "Id", IsForeignKey = true)]
        public tblGameCategory tblGameCategory
        {
            get
            {
                return this._tblGameCategory.Entity;
            }
            set
            {
                tblGameCategory previousValue = this._tblGameCategory.Entity;
                if (((previousValue != value)
                            || (this._tblGameCategory.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblGameCategory.Entity = null;
                        previousValue.tblVersionCategories.Remove(this);
                    }
                    this._tblGameCategory.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionCategories.Add(this);
                        this._IdCategory = value.Id;
                    }
                    else
                    {
                        this._IdCategory = default(int);
                    }
                    this.SendPropertyChanged("tblGameCategory");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionCategory", Storage = "_tblVersion", ThisKey = "IdVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblVersionCategories.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionCategories.Add(this);
                        this._IdVersion = value.Id;
                    }
                    else
                    {
                        this._IdVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersionEsra")]
    public partial class tblVersionEsra : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private int _IdVersion;

        private int _IdUser;

        private int _IdEsra;

        private string _EsraSummary;

        private System.Nullable<int> _IdEsraType;

        private System.Nullable<int> _IdSystem;

        private System.DateTime _CreationDateTime;

        private System.Nullable<int> _IdEsraStatus;

        private System.Nullable<bool> _ForEdit;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        private EntityRef<tblEsra> _tblEsra;

        private EntityRef<tblEsra> _tblEsra1;

        private EntityRef<tblEsraStatus> _tblEsraStatus;

        private EntityRef<tblEsraType> _tblEsraType;

        private EntityRef<tblVersion> _tblVersion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnIdVersionChanging(int value);
        partial void OnIdVersionChanged();
        partial void OnIdUserChanging(int value);
        partial void OnIdUserChanged();
        partial void OnIdEsraChanging(int value);
        partial void OnIdEsraChanged();
        partial void OnEsraSummaryChanging(string value);
        partial void OnEsraSummaryChanged();
        partial void OnIdEsraTypeChanging(System.Nullable<int> value);
        partial void OnIdEsraTypeChanged();
        partial void OnIdSystemChanging(System.Nullable<int> value);
        partial void OnIdSystemChanged();
        partial void OnCreationDateTimeChanging(System.DateTime value);
        partial void OnCreationDateTimeChanged();
        partial void OnIdEsraStatusChanging(System.Nullable<int> value);
        partial void OnIdEsraStatusChanged();
        partial void OnForEditChanging(System.Nullable<bool> value);
        partial void OnForEditChanged();
        #endregion

        public tblVersionEsra()
        {
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblEsra = default(EntityRef<tblEsra>);
            this._tblEsra1 = default(EntityRef<tblEsra>);
            this._tblEsraStatus = default(EntityRef<tblEsraStatus>);
            this._tblEsraType = default(EntityRef<tblEsraType>);
            this._tblVersion = default(EntityRef<tblVersion>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersion", DbType = "Int NOT NULL")]
        public int IdVersion
        {
            get
            {
                return this._IdVersion;
            }
            set
            {
                if ((this._IdVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersion = value;
                    this.SendPropertyChanged("IdVersion");
                    this.OnIdVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdUser", DbType = "Int NOT NULL")]
        public int IdUser
        {
            get
            {
                return this._IdUser;
            }
            set
            {
                if ((this._IdUser != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdUserChanging(value);
                    this.SendPropertyChanging();
                    this._IdUser = value;
                    this.SendPropertyChanged("IdUser");
                    this.OnIdUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdEsra", DbType = "Int NOT NULL")]
        public int IdEsra
        {
            get
            {
                return this._IdEsra;
            }
            set
            {
                if ((this._IdEsra != value))
                {
                    if (this._tblEsra.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdEsraChanging(value);
                    this.SendPropertyChanging();
                    this._IdEsra = value;
                    this.SendPropertyChanged("IdEsra");
                    this.OnIdEsraChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EsraSummary", DbType = "NVarChar(MAX)")]
        public string EsraSummary
        {
            get
            {
                return this._EsraSummary;
            }
            set
            {
                if ((this._EsraSummary != value))
                {
                    this.OnEsraSummaryChanging(value);
                    this.SendPropertyChanging();
                    this._EsraSummary = value;
                    this.SendPropertyChanged("EsraSummary");
                    this.OnEsraSummaryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdEsraType", DbType = "Int")]
        public System.Nullable<int> IdEsraType
        {
            get
            {
                return this._IdEsraType;
            }
            set
            {
                if ((this._IdEsraType != value))
                {
                    if (this._tblEsraType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdEsraTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdEsraType = value;
                    this.SendPropertyChanged("IdEsraType");
                    this.OnIdEsraTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdSystem", DbType = "Int")]
        public System.Nullable<int> IdSystem
        {
            get
            {
                return this._IdSystem;
            }
            set
            {
                if ((this._IdSystem != value))
                {
                    if (this._tblEsra1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdSystemChanging(value);
                    this.SendPropertyChanging();
                    this._IdSystem = value;
                    this.SendPropertyChanged("IdSystem");
                    this.OnIdSystemChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreationDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime CreationDateTime
        {
            get
            {
                return this._CreationDateTime;
            }
            set
            {
                if ((this._CreationDateTime != value))
                {
                    this.OnCreationDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._CreationDateTime = value;
                    this.SendPropertyChanged("CreationDateTime");
                    this.OnCreationDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdEsraStatus", DbType = "Int")]
        public System.Nullable<int> IdEsraStatus
        {
            get
            {
                return this._IdEsraStatus;
            }
            set
            {
                if ((this._IdEsraStatus != value))
                {
                    if (this._tblEsraStatus.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdEsraStatusChanging(value);
                    this.SendPropertyChanging();
                    this._IdEsraStatus = value;
                    this.SendPropertyChanged("IdEsraStatus");
                    this.OnIdEsraStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ForEdit", DbType = "Bit")]
        public System.Nullable<bool> ForEdit
        {
            get
            {
                return this._ForEdit;
            }
            set
            {
                if ((this._ForEdit != value))
                {
                    this.OnForEditChanging(value);
                    this.SendPropertyChanging();
                    this._ForEdit = value;
                    this.SendPropertyChanged("ForEdit");
                    this.OnForEditChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersionEsra", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdUser", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblVersionEsras.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionEsras.Add(this);
                        this._IdUser = value.Id;
                    }
                    else
                    {
                        this._IdUser = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEsra_tblVersionEsra", Storage = "_tblEsra", ThisKey = "IdEsra", OtherKey = "Id", IsForeignKey = true)]
        public tblEsra tblEsra
        {
            get
            {
                return this._tblEsra.Entity;
            }
            set
            {
                tblEsra previousValue = this._tblEsra.Entity;
                if (((previousValue != value)
                            || (this._tblEsra.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblEsra.Entity = null;
                        previousValue.tblVersionEsras.Remove(this);
                    }
                    this._tblEsra.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionEsras.Add(this);
                        this._IdEsra = value.Id;
                    }
                    else
                    {
                        this._IdEsra = default(int);
                    }
                    this.SendPropertyChanged("tblEsra");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEsra_tblVersionEsra1", Storage = "_tblEsra1", ThisKey = "IdSystem", OtherKey = "Id", IsForeignKey = true)]
        public tblEsra tblEsra1
        {
            get
            {
                return this._tblEsra1.Entity;
            }
            set
            {
                tblEsra previousValue = this._tblEsra1.Entity;
                if (((previousValue != value)
                            || (this._tblEsra1.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblEsra1.Entity = null;
                        previousValue.tblVersionEsras1.Remove(this);
                    }
                    this._tblEsra1.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionEsras1.Add(this);
                        this._IdSystem = value.Id;
                    }
                    else
                    {
                        this._IdSystem = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblEsra1");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEsraStatus_tblVersionEsra", Storage = "_tblEsraStatus", ThisKey = "IdEsraStatus", OtherKey = "Id", IsForeignKey = true)]
        public tblEsraStatus tblEsraStatus
        {
            get
            {
                return this._tblEsraStatus.Entity;
            }
            set
            {
                tblEsraStatus previousValue = this._tblEsraStatus.Entity;
                if (((previousValue != value)
                            || (this._tblEsraStatus.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblEsraStatus.Entity = null;
                        previousValue.tblVersionEsras.Remove(this);
                    }
                    this._tblEsraStatus.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionEsras.Add(this);
                        this._IdEsraStatus = value.Id;
                    }
                    else
                    {
                        this._IdEsraStatus = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblEsraStatus");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblEsraType_tblVersionEsra", Storage = "_tblEsraType", ThisKey = "IdEsraType", OtherKey = "Id", IsForeignKey = true)]
        public tblEsraType tblEsraType
        {
            get
            {
                return this._tblEsraType.Entity;
            }
            set
            {
                tblEsraType previousValue = this._tblEsraType.Entity;
                if (((previousValue != value)
                            || (this._tblEsraType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblEsraType.Entity = null;
                        previousValue.tblVersionEsras.Remove(this);
                    }
                    this._tblEsraType.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionEsras.Add(this);
                        this._IdEsraType = value.Id;
                    }
                    else
                    {
                        this._IdEsraType = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("tblEsraType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionEsra", Storage = "_tblVersion", ThisKey = "IdVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblVersionEsras.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionEsras.Add(this);
                        this._IdVersion = value.Id;
                    }
                    else
                    {
                        this._IdVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersionExclusive")]
    public partial class tblVersionExclusive : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdVersion;

        private int _IdExclusive;

        private System.DateTime _StartDateTime;

        private System.DateTime _EndDateTime;

        private bool _HolderType;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        private EntityRef<tblVersion> _tblVersion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdVersionChanging(int value);
        partial void OnIdVersionChanged();
        partial void OnIdExclusiveChanging(int value);
        partial void OnIdExclusiveChanged();
        partial void OnStartDateTimeChanging(System.DateTime value);
        partial void OnStartDateTimeChanged();
        partial void OnEndDateTimeChanging(System.DateTime value);
        partial void OnEndDateTimeChanged();
        partial void OnHolderTypeChanging(bool value);
        partial void OnHolderTypeChanged();
        #endregion

        public tblVersionExclusive()
        {
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblVersion = default(EntityRef<tblVersion>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersion", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdVersion
        {
            get
            {
                return this._IdVersion;
            }
            set
            {
                if ((this._IdVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersion = value;
                    this.SendPropertyChanged("IdVersion");
                    this.OnIdVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdExclusive", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdExclusive
        {
            get
            {
                return this._IdExclusive;
            }
            set
            {
                if ((this._IdExclusive != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdExclusiveChanging(value);
                    this.SendPropertyChanging();
                    this._IdExclusive = value;
                    this.SendPropertyChanged("IdExclusive");
                    this.OnIdExclusiveChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime StartDateTime
        {
            get
            {
                return this._StartDateTime;
            }
            set
            {
                if ((this._StartDateTime != value))
                {
                    this.OnStartDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._StartDateTime = value;
                    this.SendPropertyChanged("StartDateTime");
                    this.OnStartDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime EndDateTime
        {
            get
            {
                return this._EndDateTime;
            }
            set
            {
                if ((this._EndDateTime != value))
                {
                    this.OnEndDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._EndDateTime = value;
                    this.SendPropertyChanged("EndDateTime");
                    this.OnEndDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HolderType", DbType = "Bit NOT NULL")]
        public bool HolderType
        {
            get
            {
                return this._HolderType;
            }
            set
            {
                if ((this._HolderType != value))
                {
                    this.OnHolderTypeChanging(value);
                    this.SendPropertyChanging();
                    this._HolderType = value;
                    this.SendPropertyChanged("HolderType");
                    this.OnHolderTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersionExclusive", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdExclusive", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblVersionExclusives.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionExclusives.Add(this);
                        this._IdExclusive = value.Id;
                    }
                    else
                    {
                        this._IdExclusive = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionExclusive", Storage = "_tblVersion", ThisKey = "IdVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblVersionExclusives.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionExclusives.Add(this);
                        this._IdVersion = value.Id;
                    }
                    else
                    {
                        this._IdVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersionGenre")]
    public partial class tblVersionGenre : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdVersion;

        private int _IdGenre;

        private EntityRef<tblCategory> _tblCategory;

        private EntityRef<tblVersion> _tblVersion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdVersionChanging(int value);
        partial void OnIdVersionChanged();
        partial void OnIdGenreChanging(int value);
        partial void OnIdGenreChanged();
        #endregion

        public tblVersionGenre()
        {
            this._tblCategory = default(EntityRef<tblCategory>);
            this._tblVersion = default(EntityRef<tblVersion>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersion", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdVersion
        {
            get
            {
                return this._IdVersion;
            }
            set
            {
                if ((this._IdVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersion = value;
                    this.SendPropertyChanged("IdVersion");
                    this.OnIdVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdGenre", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdGenre
        {
            get
            {
                return this._IdGenre;
            }
            set
            {
                if ((this._IdGenre != value))
                {
                    if (this._tblCategory.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdGenreChanging(value);
                    this.SendPropertyChanging();
                    this._IdGenre = value;
                    this.SendPropertyChanged("IdGenre");
                    this.OnIdGenreChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblCategory_tblVersionGenre", Storage = "_tblCategory", ThisKey = "IdGenre", OtherKey = "Id", IsForeignKey = true)]
        public tblCategory tblCategory
        {
            get
            {
                return this._tblCategory.Entity;
            }
            set
            {
                tblCategory previousValue = this._tblCategory.Entity;
                if (((previousValue != value)
                            || (this._tblCategory.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblCategory.Entity = null;
                        previousValue.tblVersionGenres.Remove(this);
                    }
                    this._tblCategory.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionGenres.Add(this);
                        this._IdGenre = value.Id;
                    }
                    else
                    {
                        this._IdGenre = default(int);
                    }
                    this.SendPropertyChanged("tblCategory");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionGenre", Storage = "_tblVersion", ThisKey = "IdVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblVersionGenres.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionGenres.Add(this);
                        this._IdVersion = value.Id;
                    }
                    else
                    {
                        this._IdVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersionNarrat")]
    public partial class tblVersionNarrat : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdVersion;

        private string _NarratorSummary;

        private string _NarratorStory;

        private string _NarratorMetacritic;

        private EntityRef<tblVersion> _tblVersion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdVersionChanging(int value);
        partial void OnIdVersionChanged();
        partial void OnNarratorSummaryChanging(string value);
        partial void OnNarratorSummaryChanged();
        partial void OnNarratorStoryChanging(string value);
        partial void OnNarratorStoryChanged();
        partial void OnNarratorMetacriticChanging(string value);
        partial void OnNarratorMetacriticChanged();
        #endregion

        public tblVersionNarrat()
        {
            this._tblVersion = default(EntityRef<tblVersion>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersion", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdVersion
        {
            get
            {
                return this._IdVersion;
            }
            set
            {
                if ((this._IdVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersion = value;
                    this.SendPropertyChanged("IdVersion");
                    this.OnIdVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NarratorSummary", DbType = "NVarChar(MAX)")]
        public string NarratorSummary
        {
            get
            {
                return this._NarratorSummary;
            }
            set
            {
                if ((this._NarratorSummary != value))
                {
                    this.OnNarratorSummaryChanging(value);
                    this.SendPropertyChanging();
                    this._NarratorSummary = value;
                    this.SendPropertyChanged("NarratorSummary");
                    this.OnNarratorSummaryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NarratorStory", DbType = "NVarChar(MAX)")]
        public string NarratorStory
        {
            get
            {
                return this._NarratorStory;
            }
            set
            {
                if ((this._NarratorStory != value))
                {
                    this.OnNarratorStoryChanging(value);
                    this.SendPropertyChanging();
                    this._NarratorStory = value;
                    this.SendPropertyChanged("NarratorStory");
                    this.OnNarratorStoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NarratorMetacritic", DbType = "NVarChar(MAX)")]
        public string NarratorMetacritic
        {
            get
            {
                return this._NarratorMetacritic;
            }
            set
            {
                if ((this._NarratorMetacritic != value))
                {
                    this.OnNarratorMetacriticChanging(value);
                    this.SendPropertyChanging();
                    this._NarratorMetacritic = value;
                    this.SendPropertyChanged("NarratorMetacritic");
                    this.OnNarratorMetacriticChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionNarrat", Storage = "_tblVersion", ThisKey = "IdVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblVersionNarrat = null;
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionNarrat = this;
                        this._IdVersion = value.Id;
                    }
                    else
                    {
                        this._IdVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersionPictogram")]
    public partial class tblVersionPictogram : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdVersion;

        private int _IdPictogram;

        private int _IdUser;

        private bool _isSuggestion;

        private int _IdRate;

        private EntityRef<tblPictogram> _tblPictogram;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        private EntityRef<tblRate> _tblRate;

        private EntityRef<tblVersion> _tblVersion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdVersionChanging(int value);
        partial void OnIdVersionChanged();
        partial void OnIdPictogramChanging(int value);
        partial void OnIdPictogramChanged();
        partial void OnIdUserChanging(int value);
        partial void OnIdUserChanged();
        partial void OnisSuggestionChanging(bool value);
        partial void OnisSuggestionChanged();
        partial void OnIdRateChanging(int value);
        partial void OnIdRateChanged();
        #endregion

        public tblVersionPictogram()
        {
            this._tblPictogram = default(EntityRef<tblPictogram>);
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblRate = default(EntityRef<tblRate>);
            this._tblVersion = default(EntityRef<tblVersion>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersion", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdVersion
        {
            get
            {
                return this._IdVersion;
            }
            set
            {
                if ((this._IdVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersion = value;
                    this.SendPropertyChanged("IdVersion");
                    this.OnIdVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdPictogram", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdPictogram
        {
            get
            {
                return this._IdPictogram;
            }
            set
            {
                if ((this._IdPictogram != value))
                {
                    if (this._tblPictogram.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdPictogramChanging(value);
                    this.SendPropertyChanging();
                    this._IdPictogram = value;
                    this.SendPropertyChanged("IdPictogram");
                    this.OnIdPictogramChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdUser", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdUser
        {
            get
            {
                return this._IdUser;
            }
            set
            {
                if ((this._IdUser != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdUserChanging(value);
                    this.SendPropertyChanging();
                    this._IdUser = value;
                    this.SendPropertyChanged("IdUser");
                    this.OnIdUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_isSuggestion", DbType = "Bit NOT NULL")]
        public bool isSuggestion
        {
            get
            {
                return this._isSuggestion;
            }
            set
            {
                if ((this._isSuggestion != value))
                {
                    this.OnisSuggestionChanging(value);
                    this.SendPropertyChanging();
                    this._isSuggestion = value;
                    this.SendPropertyChanged("isSuggestion");
                    this.OnisSuggestionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdRate", DbType = "Int NOT NULL")]
        public int IdRate
        {
            get
            {
                return this._IdRate;
            }
            set
            {
                if ((this._IdRate != value))
                {
                    if (this._tblRate.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdRateChanging(value);
                    this.SendPropertyChanging();
                    this._IdRate = value;
                    this.SendPropertyChanged("IdRate");
                    this.OnIdRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblPictogram_tblVersionPictogram", Storage = "_tblPictogram", ThisKey = "IdPictogram", OtherKey = "Id", IsForeignKey = true)]
        public tblPictogram tblPictogram
        {
            get
            {
                return this._tblPictogram.Entity;
            }
            set
            {
                tblPictogram previousValue = this._tblPictogram.Entity;
                if (((previousValue != value)
                            || (this._tblPictogram.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblPictogram.Entity = null;
                        previousValue.tblVersionPictograms.Remove(this);
                    }
                    this._tblPictogram.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionPictograms.Add(this);
                        this._IdPictogram = value.Id;
                    }
                    else
                    {
                        this._IdPictogram = default(int);
                    }
                    this.SendPropertyChanged("tblPictogram");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersionPictogram", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdUser", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblVersionPictograms.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionPictograms.Add(this);
                        this._IdUser = value.Id;
                    }
                    else
                    {
                        this._IdUser = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblRate_tblVersionPictogram", Storage = "_tblRate", ThisKey = "IdRate", OtherKey = "id", IsForeignKey = true)]
        public tblRate tblRate
        {
            get
            {
                return this._tblRate.Entity;
            }
            set
            {
                tblRate previousValue = this._tblRate.Entity;
                if (((previousValue != value)
                            || (this._tblRate.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblRate.Entity = null;
                        previousValue.tblVersionPictograms.Remove(this);
                    }
                    this._tblRate.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionPictograms.Add(this);
                        this._IdRate = value.id;
                    }
                    else
                    {
                        this._IdRate = default(int);
                    }
                    this.SendPropertyChanged("tblRate");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionPictogram", Storage = "_tblVersion", ThisKey = "IdVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblVersionPictograms.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionPictograms.Add(this);
                        this._IdVersion = value.Id;
                    }
                    else
                    {
                        this._IdVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersionScreenshot")]
    public partial class tblVersionScreenshot : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _IdVersion;

        private int _IdFile;

        private int _IdScreenshotType;

        private EntityRef<tblFile> _tblFile;

        private EntityRef<tblVersion> _tblVersion;

        private EntityRef<tblScreenshotType> _tblScreenshotType;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdVersionChanging(int value);
        partial void OnIdVersionChanged();
        partial void OnIdFileChanging(int value);
        partial void OnIdFileChanged();
        partial void OnIdScreenshotTypeChanging(int value);
        partial void OnIdScreenshotTypeChanged();
        #endregion

        public tblVersionScreenshot()
        {
            this._tblFile = default(EntityRef<tblFile>);
            this._tblVersion = default(EntityRef<tblVersion>);
            this._tblScreenshotType = default(EntityRef<tblScreenshotType>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdVersion", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdVersion
        {
            get
            {
                return this._IdVersion;
            }
            set
            {
                if ((this._IdVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdVersionChanging(value);
                    this.SendPropertyChanging();
                    this._IdVersion = value;
                    this.SendPropertyChanged("IdVersion");
                    this.OnIdVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdFile", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdFile
        {
            get
            {
                return this._IdFile;
            }
            set
            {
                if ((this._IdFile != value))
                {
                    if (this._tblFile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdFileChanging(value);
                    this.SendPropertyChanging();
                    this._IdFile = value;
                    this.SendPropertyChanged("IdFile");
                    this.OnIdFileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdScreenshotType", DbType = "Int NOT NULL")]
        public int IdScreenshotType
        {
            get
            {
                return this._IdScreenshotType;
            }
            set
            {
                if ((this._IdScreenshotType != value))
                {
                    if (this._tblScreenshotType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdScreenshotTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdScreenshotType = value;
                    this.SendPropertyChanged("IdScreenshotType");
                    this.OnIdScreenshotTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblFile_tblVersionScreenshot", Storage = "_tblFile", ThisKey = "IdFile", OtherKey = "Id", IsForeignKey = true)]
        public tblFile tblFile
        {
            get
            {
                return this._tblFile.Entity;
            }
            set
            {
                tblFile previousValue = this._tblFile.Entity;
                if (((previousValue != value)
                            || (this._tblFile.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblFile.Entity = null;
                        previousValue.tblVersionScreenshots.Remove(this);
                    }
                    this._tblFile.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionScreenshots.Add(this);
                        this._IdFile = value.Id;
                    }
                    else
                    {
                        this._IdFile = default(int);
                    }
                    this.SendPropertyChanged("tblFile");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionScreenshot", Storage = "_tblVersion", ThisKey = "IdVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblVersionScreenshots.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionScreenshots.Add(this);
                        this._IdVersion = value.Id;
                    }
                    else
                    {
                        this._IdVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblScreenshotType_tblVersionScreenshot", Storage = "_tblScreenshotType", ThisKey = "IdScreenshotType", OtherKey = "Id", IsForeignKey = true)]
        public tblScreenshotType tblScreenshotType
        {
            get
            {
                return this._tblScreenshotType.Entity;
            }
            set
            {
                tblScreenshotType previousValue = this._tblScreenshotType.Entity;
                if (((previousValue != value)
                            || (this._tblScreenshotType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblScreenshotType.Entity = null;
                        previousValue.tblVersionScreenshots.Remove(this);
                    }
                    this._tblScreenshotType.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionScreenshots.Add(this);
                        this._IdScreenshotType = value.Id;
                    }
                    else
                    {
                        this._IdScreenshotType = default(int);
                    }
                    this.SendPropertyChanged("tblScreenshotType");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersionSkill")]
    public partial class tblVersionSkill : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _idSkillType;

        private int _idVersion;

        private int _IdUser;

        private bool _isSuggestion;

        private System.Nullable<int> _Rate;

        private EntityRef<tblProducerNExclusiveNUser> _tblProducerNExclusiveNUser;

        private EntityRef<tblSkillType> _tblSkillType;

        private EntityRef<tblVersion> _tblVersion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidSkillTypeChanging(int value);
        partial void OnidSkillTypeChanged();
        partial void OnidVersionChanging(int value);
        partial void OnidVersionChanged();
        partial void OnIdUserChanging(int value);
        partial void OnIdUserChanged();
        partial void OnisSuggestionChanging(bool value);
        partial void OnisSuggestionChanged();
        partial void OnRateChanging(System.Nullable<int> value);
        partial void OnRateChanged();
        #endregion

        public tblVersionSkill()
        {
            this._tblProducerNExclusiveNUser = default(EntityRef<tblProducerNExclusiveNUser>);
            this._tblSkillType = default(EntityRef<tblSkillType>);
            this._tblVersion = default(EntityRef<tblVersion>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_idSkillType", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int idSkillType
        {
            get
            {
                return this._idSkillType;
            }
            set
            {
                if ((this._idSkillType != value))
                {
                    if (this._tblSkillType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnidSkillTypeChanging(value);
                    this.SendPropertyChanging();
                    this._idSkillType = value;
                    this.SendPropertyChanged("idSkillType");
                    this.OnidSkillTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_idVersion", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int idVersion
        {
            get
            {
                return this._idVersion;
            }
            set
            {
                if ((this._idVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnidVersionChanging(value);
                    this.SendPropertyChanging();
                    this._idVersion = value;
                    this.SendPropertyChanged("idVersion");
                    this.OnidVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdUser", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int IdUser
        {
            get
            {
                return this._IdUser;
            }
            set
            {
                if ((this._IdUser != value))
                {
                    if (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdUserChanging(value);
                    this.SendPropertyChanging();
                    this._IdUser = value;
                    this.SendPropertyChanged("IdUser");
                    this.OnIdUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_isSuggestion", DbType = "Bit NOT NULL")]
        public bool isSuggestion
        {
            get
            {
                return this._isSuggestion;
            }
            set
            {
                if ((this._isSuggestion != value))
                {
                    this.OnisSuggestionChanging(value);
                    this.SendPropertyChanging();
                    this._isSuggestion = value;
                    this.SendPropertyChanged("isSuggestion");
                    this.OnisSuggestionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rate", DbType = "Int")]
        public System.Nullable<int> Rate
        {
            get
            {
                return this._Rate;
            }
            set
            {
                if ((this._Rate != value))
                {
                    this.OnRateChanging(value);
                    this.SendPropertyChanging();
                    this._Rate = value;
                    this.SendPropertyChanged("Rate");
                    this.OnRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblProducerNExclusiveNUser_tblVersionSkill", Storage = "_tblProducerNExclusiveNUser", ThisKey = "IdUser", OtherKey = "Id", IsForeignKey = true)]
        public tblProducerNExclusiveNUser tblProducerNExclusiveNUser
        {
            get
            {
                return this._tblProducerNExclusiveNUser.Entity;
            }
            set
            {
                tblProducerNExclusiveNUser previousValue = this._tblProducerNExclusiveNUser.Entity;
                if (((previousValue != value)
                            || (this._tblProducerNExclusiveNUser.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblProducerNExclusiveNUser.Entity = null;
                        previousValue.tblVersionSkills.Remove(this);
                    }
                    this._tblProducerNExclusiveNUser.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionSkills.Add(this);
                        this._IdUser = value.Id;
                    }
                    else
                    {
                        this._IdUser = default(int);
                    }
                    this.SendPropertyChanged("tblProducerNExclusiveNUser");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblSkillType_tblVersionSkill", Storage = "_tblSkillType", ThisKey = "idSkillType", OtherKey = "Id", IsForeignKey = true)]
        public tblSkillType tblSkillType
        {
            get
            {
                return this._tblSkillType.Entity;
            }
            set
            {
                tblSkillType previousValue = this._tblSkillType.Entity;
                if (((previousValue != value)
                            || (this._tblSkillType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblSkillType.Entity = null;
                        previousValue.tblVersionSkills.Remove(this);
                    }
                    this._tblSkillType.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionSkills.Add(this);
                        this._idSkillType = value.Id;
                    }
                    else
                    {
                        this._idSkillType = default(int);
                    }
                    this.SendPropertyChanged("tblSkillType");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionSkill", Storage = "_tblVersion", ThisKey = "idVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblVersionSkills.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionSkills.Add(this);
                        this._idVersion = value.Id;
                    }
                    else
                    {
                        this._idVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblVersionViewAngle")]
    public partial class tblVersionViewAngle : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _idViewAngleType;

        private int _idVersion;

        private EntityRef<tblVersion> _tblVersion;

        private EntityRef<tblViewAngleType> _tblViewAngleType;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidViewAngleTypeChanging(int value);
        partial void OnidViewAngleTypeChanged();
        partial void OnidVersionChanging(int value);
        partial void OnidVersionChanged();
        #endregion

        public tblVersionViewAngle()
        {
            this._tblVersion = default(EntityRef<tblVersion>);
            this._tblViewAngleType = default(EntityRef<tblViewAngleType>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_idViewAngleType", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int idViewAngleType
        {
            get
            {
                return this._idViewAngleType;
            }
            set
            {
                if ((this._idViewAngleType != value))
                {
                    if (this._tblViewAngleType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnidViewAngleTypeChanging(value);
                    this.SendPropertyChanging();
                    this._idViewAngleType = value;
                    this.SendPropertyChanged("idViewAngleType");
                    this.OnidViewAngleTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_idVersion", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int idVersion
        {
            get
            {
                return this._idVersion;
            }
            set
            {
                if ((this._idVersion != value))
                {
                    if (this._tblVersion.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnidVersionChanging(value);
                    this.SendPropertyChanging();
                    this._idVersion = value;
                    this.SendPropertyChanged("idVersion");
                    this.OnidVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblVersion_tblVersionViewAngle", Storage = "_tblVersion", ThisKey = "idVersion", OtherKey = "Id", IsForeignKey = true)]
        public tblVersion tblVersion
        {
            get
            {
                return this._tblVersion.Entity;
            }
            set
            {
                tblVersion previousValue = this._tblVersion.Entity;
                if (((previousValue != value)
                            || (this._tblVersion.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblVersion.Entity = null;
                        previousValue.tblVersionViewAngles.Remove(this);
                    }
                    this._tblVersion.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionViewAngles.Add(this);
                        this._idVersion = value.Id;
                    }
                    else
                    {
                        this._idVersion = default(int);
                    }
                    this.SendPropertyChanged("tblVersion");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblViewAngleType_tblVersionViewAngle", Storage = "_tblViewAngleType", ThisKey = "idViewAngleType", OtherKey = "id", IsForeignKey = true)]
        public tblViewAngleType tblViewAngleType
        {
            get
            {
                return this._tblViewAngleType.Entity;
            }
            set
            {
                tblViewAngleType previousValue = this._tblViewAngleType.Entity;
                if (((previousValue != value)
                            || (this._tblViewAngleType.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblViewAngleType.Entity = null;
                        previousValue.tblVersionViewAngles.Remove(this);
                    }
                    this._tblViewAngleType.Entity = value;
                    if ((value != null))
                    {
                        value.tblVersionViewAngles.Add(this);
                        this._idViewAngleType = value.id;
                    }
                    else
                    {
                        this._idViewAngleType = default(int);
                    }
                    this.SendPropertyChanged("tblViewAngleType");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Organizations")]
    public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private int _Type;

        private int _Parent;

        private bool _AutomaticCoding;

        private string _LetterCode;

        private string _DocumentCode;

        private string _FieldOfWork;

        private string _Manager;

        private string _Telephone;

        private string _Fax;

        private string _Mobilephone;

        private string _Website;

        private string _Mail;

        private string _Address;

        private string _PostBox;

        private bool _IsMyOrganization;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnTypeChanging(int value);
        partial void OnTypeChanged();
        partial void OnParentChanging(int value);
        partial void OnParentChanged();
        partial void OnAutomaticCodingChanging(bool value);
        partial void OnAutomaticCodingChanged();
        partial void OnLetterCodeChanging(string value);
        partial void OnLetterCodeChanged();
        partial void OnDocumentCodeChanging(string value);
        partial void OnDocumentCodeChanged();
        partial void OnFieldOfWorkChanging(string value);
        partial void OnFieldOfWorkChanged();
        partial void OnManagerChanging(string value);
        partial void OnManagerChanged();
        partial void OnTelephoneChanging(string value);
        partial void OnTelephoneChanged();
        partial void OnFaxChanging(string value);
        partial void OnFaxChanged();
        partial void OnMobilephoneChanging(string value);
        partial void OnMobilephoneChanged();
        partial void OnWebsiteChanging(string value);
        partial void OnWebsiteChanged();
        partial void OnMailChanging(string value);
        partial void OnMailChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnPostBoxChanging(string value);
        partial void OnPostBoxChanged();
        partial void OnIsMyOrganizationChanging(bool value);
        partial void OnIsMyOrganizationChanged();
        #endregion

        public Organization()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(MAX)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Type", DbType = "Int NOT NULL")]
        public int Type
        {
            get
            {
                return this._Type;
            }
            set
            {
                if ((this._Type != value))
                {
                    this.OnTypeChanging(value);
                    this.SendPropertyChanging();
                    this._Type = value;
                    this.SendPropertyChanged("Type");
                    this.OnTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Parent", DbType = "Int NOT NULL")]
        public int Parent
        {
            get
            {
                return this._Parent;
            }
            set
            {
                if ((this._Parent != value))
                {
                    this.OnParentChanging(value);
                    this.SendPropertyChanging();
                    this._Parent = value;
                    this.SendPropertyChanged("Parent");
                    this.OnParentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AutomaticCoding", DbType = "Bit NOT NULL")]
        public bool AutomaticCoding
        {
            get
            {
                return this._AutomaticCoding;
            }
            set
            {
                if ((this._AutomaticCoding != value))
                {
                    this.OnAutomaticCodingChanging(value);
                    this.SendPropertyChanging();
                    this._AutomaticCoding = value;
                    this.SendPropertyChanged("AutomaticCoding");
                    this.OnAutomaticCodingChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LetterCode", DbType = "NVarChar(MAX)")]
        public string LetterCode
        {
            get
            {
                return this._LetterCode;
            }
            set
            {
                if ((this._LetterCode != value))
                {
                    this.OnLetterCodeChanging(value);
                    this.SendPropertyChanging();
                    this._LetterCode = value;
                    this.SendPropertyChanged("LetterCode");
                    this.OnLetterCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentCode", DbType = "NVarChar(MAX)")]
        public string DocumentCode
        {
            get
            {
                return this._DocumentCode;
            }
            set
            {
                if ((this._DocumentCode != value))
                {
                    this.OnDocumentCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentCode = value;
                    this.SendPropertyChanged("DocumentCode");
                    this.OnDocumentCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FieldOfWork", DbType = "NVarChar(MAX)")]
        public string FieldOfWork
        {
            get
            {
                return this._FieldOfWork;
            }
            set
            {
                if ((this._FieldOfWork != value))
                {
                    this.OnFieldOfWorkChanging(value);
                    this.SendPropertyChanging();
                    this._FieldOfWork = value;
                    this.SendPropertyChanged("FieldOfWork");
                    this.OnFieldOfWorkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Manager", DbType = "NVarChar(MAX)")]
        public string Manager
        {
            get
            {
                return this._Manager;
            }
            set
            {
                if ((this._Manager != value))
                {
                    this.OnManagerChanging(value);
                    this.SendPropertyChanging();
                    this._Manager = value;
                    this.SendPropertyChanged("Manager");
                    this.OnManagerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Telephone", DbType = "NVarChar(MAX)")]
        public string Telephone
        {
            get
            {
                return this._Telephone;
            }
            set
            {
                if ((this._Telephone != value))
                {
                    this.OnTelephoneChanging(value);
                    this.SendPropertyChanging();
                    this._Telephone = value;
                    this.SendPropertyChanged("Telephone");
                    this.OnTelephoneChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fax", DbType = "NVarChar(MAX)")]
        public string Fax
        {
            get
            {
                return this._Fax;
            }
            set
            {
                if ((this._Fax != value))
                {
                    this.OnFaxChanging(value);
                    this.SendPropertyChanging();
                    this._Fax = value;
                    this.SendPropertyChanged("Fax");
                    this.OnFaxChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobilephone", DbType = "NVarChar(MAX)")]
        public string Mobilephone
        {
            get
            {
                return this._Mobilephone;
            }
            set
            {
                if ((this._Mobilephone != value))
                {
                    this.OnMobilephoneChanging(value);
                    this.SendPropertyChanging();
                    this._Mobilephone = value;
                    this.SendPropertyChanged("Mobilephone");
                    this.OnMobilephoneChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Website", DbType = "NVarChar(MAX)")]
        public string Website
        {
            get
            {
                return this._Website;
            }
            set
            {
                if ((this._Website != value))
                {
                    this.OnWebsiteChanging(value);
                    this.SendPropertyChanging();
                    this._Website = value;
                    this.SendPropertyChanged("Website");
                    this.OnWebsiteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mail", DbType = "NVarChar(MAX)")]
        public string Mail
        {
            get
            {
                return this._Mail;
            }
            set
            {
                if ((this._Mail != value))
                {
                    this.OnMailChanging(value);
                    this.SendPropertyChanging();
                    this._Mail = value;
                    this.SendPropertyChanged("Mail");
                    this.OnMailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "NVarChar(MAX)")]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging(value);
                    this.SendPropertyChanging();
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PostBox", DbType = "NVarChar(MAX)")]
        public string PostBox
        {
            get
            {
                return this._PostBox;
            }
            set
            {
                if ((this._PostBox != value))
                {
                    this.OnPostBoxChanging(value);
                    this.SendPropertyChanging();
                    this._PostBox = value;
                    this.SendPropertyChanged("PostBox");
                    this.OnPostBoxChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsMyOrganization", DbType = "Bit NOT NULL")]
        public bool IsMyOrganization
        {
            get
            {
                return this._IsMyOrganization;
            }
            set
            {
                if ((this._IsMyOrganization != value))
                {
                    this.OnIsMyOrganizationChanging(value);
                    this.SendPropertyChanging();
                    this._IsMyOrganization = value;
                    this.SendPropertyChanged("IsMyOrganization");
                    this.OnIsMyOrganizationChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.[vwRatingGameResults ]")]
    public partial class vwRatingGameResults_
    {

        private string _platformsTitle;

        private string _genresTitle;

        private string _agesTitle;

        private int _gameId;

        private string _gameName;

        private string _OrganizationName;

        private System.Nullable<System.DateTime> _ReleaseDateTime;
        private System.Nullable<System.DateTime> _Esra_Time;

        private string _gameName2;

        private int _genreId;

        private int _platformId;

        private int _agesId;

        private string _genreIdTemp;

        private string _platformIdTemp;

        private string _agesIdTemp;
        

        public vwRatingGameResults_()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_platformsTitle", DbType = "NVarChar(100)")]
        public string platformsTitle
        {
            get
            {
                return this._platformsTitle;
            }
            set
            {
                if ((this._platformsTitle != value))
                {
                    this._platformsTitle = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_genresTitle", DbType = "NVarChar(100)")]
        public string genresTitle
        {
            get
            {
                return this._genresTitle;
            }
            set
            {
                if ((this._genresTitle != value))
                {
                    this._genresTitle = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_agesTitle", DbType = "NVarChar(50)")]
        public string agesTitle
        {
            get
            {
                return this._agesTitle;
            }
            set
            {
                if ((this._agesTitle != value))
                {
                    this._agesTitle = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gameId", DbType = "Int NOT NULL")]
        public int gameId
        {
            get
            {
                return this._gameId;
            }
            set
            {
                if ((this._gameId != value))
                {
                    this._gameId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gameName", DbType = "NVarChar(100)")]
        public string gameName
        {
            get
            {
                return this._gameName;
            }
            set
            {
                if ((this._gameName != value))
                {
                    this._gameName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrganizationName", DbType = "NVarChar(MAX)")]
        public string OrganizationName
        {
            get
            {
                return this._OrganizationName;
            }
            set
            {
                if ((this._OrganizationName != value))
                {
                    this._OrganizationName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReleaseDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ReleaseDateTime
        {
            get
            {
                return this._ReleaseDateTime;
            }
            set
            {
                if ((this._ReleaseDateTime != value))
                {
                    this._ReleaseDateTime = value;
                }
            }
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Esra_Time", DbType = "DateTime")]
        public System.Nullable<System.DateTime> esra_time
        {
            get
            {
                return this._Esra_Time;
            }
            set
            {
                if ((this._Esra_Time != value))
                {
                    this._Esra_Time = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gameName2", DbType = "NVarChar(100)")]
        public string gameName2
        {
            get
            {
                return this._gameName2;
            }
            set
            {
                if ((this._gameName2 != value))
                {
                    this._gameName2 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_genreId", DbType = "Int NOT NULL")]
        public int genreId
        {
            get
            {
                return this._genreId;
            }
            set
            {
                if ((this._genreId != value))
                {
                    this._genreId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_platformId", DbType = "Int NOT NULL")]
        public int platformId
        {
            get
            {
                return this._platformId;
            }
            set
            {
                if ((this._platformId != value))
                {
                    this._platformId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_agesId", DbType = "Int NOT NULL")]
        public int agesId
        {
            get
            {
                return this._agesId;
            }
            set
            {
                if ((this._agesId != value))
                {
                    this._agesId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_genreIdTemp", DbType = "VarChar(11) NOT NULL", CanBeNull = false)]
        public string genreIdTemp
        {
            get
            {
                return this._genreIdTemp;
            }
            set
            {
                if ((this._genreIdTemp != value))
                {
                    this._genreIdTemp = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_platformIdTemp", DbType = "VarChar(14) NOT NULL", CanBeNull = false)]
        public string platformIdTemp
        {
            get
            {
                return this._platformIdTemp;
            }
            set
            {
                if ((this._platformIdTemp != value))
                {
                    this._platformIdTemp = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_agesIdTemp", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
        public string agesIdTemp
        {
            get
            {
                return this._agesIdTemp;
            }
            set
            {
                if ((this._agesIdTemp != value))
                {
                    this._agesIdTemp = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tblGame")]
    public partial class tblGame : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Name;

        private int _IdProducer;

        private string _Name2;

        private System.DateTime _PublishDateTime;

        private System.Nullable<bool> _IsOnline;

        private string _WebSite;

        private System.Nullable<bool> _ShowInEsraWebsite;

        private EntitySet<tblVersion> _tblVersions;

        private EntityRef<tblOrganizationBonyad> _tblOrganizationBonyad;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnIdProducerChanging(int value);
        partial void OnIdProducerChanged();
        partial void OnName2Changing(string value);
        partial void OnName2Changed();
        partial void OnPublishDateTimeChanging(System.DateTime value);
        partial void OnPublishDateTimeChanged();
        partial void OnIsOnlineChanging(System.Nullable<bool> value);
        partial void OnIsOnlineChanged();
        partial void OnWebSiteChanging(string value);
        partial void OnWebSiteChanged();
        partial void OnShowInEsraWebsiteChanging(System.Nullable<bool> value);
        partial void OnShowInEsraWebsiteChanged();
        #endregion

        public tblGame()
        {
            this._tblVersions = new EntitySet<tblVersion>(new Action<tblVersion>(this.attach_tblVersions), new Action<tblVersion>(this.detach_tblVersions));
            this._tblOrganizationBonyad = default(EntityRef<tblOrganizationBonyad>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(100)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdProducer", DbType = "Int NOT NULL")]
        public int IdProducer
        {
            get
            {
                return this._IdProducer;
            }
            set
            {
                if ((this._IdProducer != value))
                {
                    if (this._tblOrganizationBonyad.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnIdProducerChanging(value);
                    this.SendPropertyChanging();
                    this._IdProducer = value;
                    this.SendPropertyChanged("IdProducer");
                    this.OnIdProducerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name2", DbType = "NVarChar(100)")]
        public string Name2
        {
            get
            {
                return this._Name2;
            }
            set
            {
                if ((this._Name2 != value))
                {
                    this.OnName2Changing(value);
                    this.SendPropertyChanging();
                    this._Name2 = value;
                    this.SendPropertyChanged("Name2");
                    this.OnName2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PublishDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime PublishDateTime
        {
            get
            {
                return this._PublishDateTime;
            }
            set
            {
                if ((this._PublishDateTime != value))
                {
                    this.OnPublishDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._PublishDateTime = value;
                    this.SendPropertyChanged("PublishDateTime");
                    this.OnPublishDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsOnline", DbType = "Bit")]
        public System.Nullable<bool> IsOnline
        {
            get
            {
                return this._IsOnline;
            }
            set
            {
                if ((this._IsOnline != value))
                {
                    this.OnIsOnlineChanging(value);
                    this.SendPropertyChanging();
                    this._IsOnline = value;
                    this.SendPropertyChanged("IsOnline");
                    this.OnIsOnlineChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WebSite", DbType = "NVarChar(2000)")]
        public string WebSite
        {
            get
            {
                return this._WebSite;
            }
            set
            {
                if ((this._WebSite != value))
                {
                    this.OnWebSiteChanging(value);
                    this.SendPropertyChanging();
                    this._WebSite = value;
                    this.SendPropertyChanged("WebSite");
                    this.OnWebSiteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowInEsraWebsite", DbType = "Bit")]
        public System.Nullable<bool> ShowInEsraWebsite
        {
            get
            {
                return this._ShowInEsraWebsite;
            }
            set
            {
                if ((this._ShowInEsraWebsite != value))
                {
                    this.OnShowInEsraWebsiteChanging(value);
                    this.SendPropertyChanging();
                    this._ShowInEsraWebsite = value;
                    this.SendPropertyChanged("ShowInEsraWebsite");
                    this.OnShowInEsraWebsiteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblGame_tblVersion", Storage = "_tblVersions", ThisKey = "Id", OtherKey = "IdGame")]
        public EntitySet<tblVersion> tblVersions
        {
            get
            {
                return this._tblVersions;
            }
            set
            {
                this._tblVersions.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "tblOrganizationBonyad_tblGame", Storage = "_tblOrganizationBonyad", ThisKey = "IdProducer", OtherKey = "Id", IsForeignKey = true)]
        public tblOrganizationBonyad tblOrganizationBonyad
        {
            get
            {
                return this._tblOrganizationBonyad.Entity;
            }
            set
            {
                tblOrganizationBonyad previousValue = this._tblOrganizationBonyad.Entity;
                if (((previousValue != value)
                            || (this._tblOrganizationBonyad.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._tblOrganizationBonyad.Entity = null;
                        previousValue.tblGames.Remove(this);
                    }
                    this._tblOrganizationBonyad.Entity = value;
                    if ((value != null))
                    {
                        value.tblGames.Add(this);
                        this._IdProducer = value.Id;
                    }
                    else
                    {
                        this._IdProducer = default(int);
                    }
                    this.SendPropertyChanged("tblOrganizationBonyad");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblGame = this;
        }

        private void detach_tblVersions(tblVersion entity)
        {
            this.SendPropertyChanging();
            entity.tblGame = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.vwIntroductionGameResults")]
    public partial class vwIntroductionGameResult
    {
        private string _virayesh;
        private string _platformsTitle;

        private string _genresTitle;

        private string _agesTitle;

        private int _id;
        private int _version_id;

        private string _name;

        private string  _Aparatlink;

        private string _publisher;

        private string _gameName2;

        private int _genreIdInt;

        private int _platformIdInt;

        private int _esra_grade;

        private string _genreID;

        private string _platformID;

        private string _sourceName;

        private System.Nullable<int> _pictogramId;

        private string _pictogramName;

        private System.Nullable<int> _pictogramRate;

        private System.DateTime _publish_date;
        private System.DateTime _esra_time;

        private string _Picture;

        private System.Nullable<int> _categoryId;

        private string _categoryName;

        private System.Nullable<int> _fileTypeId;

        private int _source_id;

        private string _intro_intro;

        private string _intro_short;

        private string _intro_gameplay;

        private string _ParentRecommendation;

        private int _esra_skill;

        private int _esra_violence;

        private int _esra_fear;

        private int _esra_drugs;

        private int _esra_anomalies;

        private int _esra_despair;

        private string _PictureCover;

        private string _categoryIdTemp;

        private System.Nullable<bool> _ShowInEsraWebsite;

        public vwIntroductionGameResult()
        {
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Aparatlink", DbType = "NVarChar(MAX)")]
        public string AparatLink
        {
            get
            {
                return this._Aparatlink;
            }
            set
            {
                if ((this._Aparatlink != value))
                {
                    this._Aparatlink = value;
                }
            }
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_virayesh", DbType = "NVarChar(100)")]
        public string virayesh
        {
            get
            {
                return this._virayesh;
            }
            set
            {
                if ((this._virayesh != value))
                {
                    this._virayesh = value;
                }
            }
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_platformsTitle", DbType = "NVarChar(100)")]
        public string platformsTitle
        {
            get
            {
                return this._platformsTitle;
            }
            set
            {
                if ((this._platformsTitle != value))
                {
                    this._platformsTitle = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_genresTitle", DbType = "NVarChar(100)")]
        public string genresTitle
        {
            get
            {
                return this._genresTitle;
            }
            set
            {
                if ((this._genresTitle != value))
                {
                    this._genresTitle = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_agesTitle", DbType = "NVarChar(50)")]
        public string agesTitle
        {
            get
            {
                return this._agesTitle;
            }
            set
            {
                if ((this._agesTitle != value))
                {
                    this._agesTitle = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", DbType = "Int NOT NULL")]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this._id = value;
                }
            }
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_version_id", DbType = "Int NOT NULL")]
        public int version_id
        {
            get
            {
                return this._version_id;
            }
            set
            {
                if ((this._version_id != value))
                {
                    this._version_id = value;
                }
            }
        }


        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_name", DbType = "NVarChar(100)")]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this._name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_publisher", DbType = "NVarChar(MAX)")]
        public string publisher
        {
            get
            {
                return this._publisher;
            }
            set
            {
                if ((this._publisher != value))
                {
                    this._publisher = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gameName2", DbType = "NVarChar(100)")]
        public string gameName2
        {
            get
            {
                return this._gameName2;
            }
            set
            {
                if ((this._gameName2 != value))
                {
                    this._gameName2 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_genreIdInt", DbType = "Int NOT NULL")]
        public int genreIdInt
        {
            get
            {
                return this._genreIdInt;
            }
            set
            {
                if ((this._genreIdInt != value))
                {
                    this._genreIdInt = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_platformIdInt", DbType = "Int NOT NULL")]
        public int platformIdInt
        {
            get
            {
                return this._platformIdInt;
            }
            set
            {
                if ((this._platformIdInt != value))
                {
                    this._platformIdInt = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_grade", DbType = "Int NOT NULL")]
        public int esra_grade
        {
            get
            {
                return this._esra_grade;
            }
            set
            {
                if ((this._esra_grade != value))
                {
                    this._esra_grade = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_genreID", DbType = "VarChar(7) NOT NULL", CanBeNull = false)]
        public string genreID
        {
            get
            {
                return this._genreID;
            }
            set
            {
                if ((this._genreID != value))
                {
                    this._genreID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_platformID", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
        public string platformID
        {
            get
            {
                return this._platformID;
            }
            set
            {
                if ((this._platformID != value))
                {
                    this._platformID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_sourceName", DbType = "NVarChar(100)")]
        public string sourceName
        {
            get
            {
                return this._sourceName;
            }
            set
            {
                if ((this._sourceName != value))
                {
                    this._sourceName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pictogramId", DbType = "Int")]
        public System.Nullable<int> pictogramId
        {
            get
            {
                return this._pictogramId;
            }
            set
            {
                if ((this._pictogramId != value))
                {
                    this._pictogramId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pictogramName", DbType = "NVarChar(100)")]
        public string pictogramName
        {
            get
            {
                return this._pictogramName;
            }
            set
            {
                if ((this._pictogramName != value))
                {
                    this._pictogramName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pictogramRate", DbType = "Int")]
        public System.Nullable<int> pictogramRate
        {
            get
            {
                return this._pictogramRate;
            }
            set
            {
                if ((this._pictogramRate != value))
                {
                    this._pictogramRate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_publish_date", DbType = "DateTime NOT NULL")]
        public System.DateTime publish_date
        {
            get
            {
                return this._publish_date;
            }
            set
            {
                if ((this._publish_date != value))
                {
                    this._publish_date = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_time", DbType = "DateTime NOT NULL")]
        public System.DateTime esra_time
        {
            get
            {
                return this._esra_time;
            }
            set
            {
                if ((this._esra_time != value))
                {
                    this._esra_time = value;
                }
            }
        }


        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Picture", DbType = "NVarChar(1000)")]
        public string Picture
        {
            get
            {
                return this._Picture;
            }
            set
            {
                if ((this._Picture != value))
                {
                    this._Picture = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_categoryId", DbType = "Int")]
        public System.Nullable<int> categoryId
        {
            get
            {
                return this._categoryId;
            }
            set
            {
                if ((this._categoryId != value))
                {
                    this._categoryId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_categoryName", DbType = "NVarChar(100)")]
        public string categoryName
        {
            get
            {
                return this._categoryName;
            }
            set
            {
                if ((this._categoryName != value))
                {
                    this._categoryName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fileTypeId", DbType = "Int")]
        public System.Nullable<int> fileTypeId
        {
            get
            {
                return this._fileTypeId;
            }
            set
            {
                if ((this._fileTypeId != value))
                {
                    this._fileTypeId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_source_id", DbType = "Int NOT NULL")]
        public int source_id
        {
            get
            {
                return this._source_id;
            }
            set
            {
                if ((this._source_id != value))
                {
                    this._source_id = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_intro_intro", DbType = "NVarChar(MAX)")]
        public string intro_intro
        {
            get
            {
                return this._intro_intro;
            }
            set
            {
                if ((this._intro_intro != value))
                {
                    this._intro_intro = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_intro_short", DbType = "NVarChar(1000)")]
        public string intro_short
        {
            get
            {
                return this._intro_short;
            }
            set
            {
                if ((this._intro_short != value))
                {
                    this._intro_short = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_intro_gameplay", DbType = "NVarChar(MAX)")]
        public string intro_gameplay
        {
            get
            {
                return this._intro_gameplay;
            }
            set
            {
                if ((this._intro_gameplay != value))
                {
                    this._intro_gameplay = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ParentRecommendation", DbType = "NVarChar(MAX)")]
        public string ParentRecommendation
        {
            get
            {
                return this._ParentRecommendation;
            }
            set
            {
                if ((this._ParentRecommendation != value))
                {
                    this._ParentRecommendation = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_skill", DbType = "Int NOT NULL")]
        public int esra_skill
        {
            get
            {
                return this._esra_skill;
            }
            set
            {
                if ((this._esra_skill != value))
                {
                    this._esra_skill = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_violence", DbType = "Int NOT NULL")]
        public int esra_violence
        {
            get
            {
                return this._esra_violence;
            }
            set
            {
                if ((this._esra_violence != value))
                {
                    this._esra_violence = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_fear", DbType = "Int NOT NULL")]
        public int esra_fear
        {
            get
            {
                return this._esra_fear;
            }
            set
            {
                if ((this._esra_fear != value))
                {
                    this._esra_fear = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_drugs", DbType = "Int NOT NULL")]
        public int esra_drugs
        {
            get
            {
                return this._esra_drugs;
            }
            set
            {
                if ((this._esra_drugs != value))
                {
                    this._esra_drugs = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_anomalies", DbType = "Int NOT NULL")]
        public int esra_anomalies
        {
            get
            {
                return this._esra_anomalies;
            }
            set
            {
                if ((this._esra_anomalies != value))
                {
                    this._esra_anomalies = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_despair", DbType = "Int NOT NULL")]
        public int esra_despair
        {
            get
            {
                return this._esra_despair;
            }
            set
            {
                if ((this._esra_despair != value))
                {
                    this._esra_despair = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PictureCover", DbType = "VarChar(12) NOT NULL", CanBeNull = false)]
        public string PictureCover
        {
            get
            {
                return this._PictureCover;
            }
            set
            {
                if ((this._PictureCover != value))
                {
                    this._PictureCover = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_categoryIdTemp", DbType = "VarChar(14) NOT NULL", CanBeNull = false)]
        public string categoryIdTemp
        {
            get
            {
                return this._categoryIdTemp;
            }
            set
            {
                if ((this._categoryIdTemp != value))
                {
                    this._categoryIdTemp = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowInEsraWebsite", DbType = "Bit")]
        public System.Nullable<bool> ShowInEsraWebsite
        {
            get
            {
                return this._ShowInEsraWebsite;
            }
            set
            {
                if ((this._ShowInEsraWebsite != value))
                {
                    this._ShowInEsraWebsite = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.vwIntroductionmobilenot")]
    public partial class vwIntroductionMobileNot
    {
        private string _virayesh;
        private string _platformsTitle;

        private string _genresTitle;

        private string _agesTitle;

        private int _id;
        private int _version_id;

        private string _name;

        private string _Aparatlink;

        private string _publisher;

        private string _gameName2;

        private int _genreIdInt;

        private int _platformIdInt;

        private int _esra_grade;

        private string _genreID;

        private string _platformID;

        private string _sourceName;

        private System.Nullable<int> _pictogramId;

        private string _pictogramName;

        private System.Nullable<int> _pictogramRate;

        private System.DateTime _publish_date;
        private System.DateTime _esra_time;

        private string _Picture;

        private System.Nullable<int> _categoryId;

        private string _categoryName;

        private System.Nullable<int> _fileTypeId;

        private int _source_id;

        private string _intro_intro;

        private string _intro_short;

        private string _intro_gameplay;

        private string _ParentRecommendation;

        private int _esra_skill;

        private int _esra_violence;

        private int _esra_fear;

        private int _esra_drugs;

        private int _esra_anomalies;

        private int _esra_despair;

        private string _PictureCover;

        private string _categoryIdTemp;

        private System.Nullable<bool> _ShowInEsraWebsite;

        public vwIntroductionMobileNot()
        {
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Aparatlink", DbType = "NVarChar(MAX)")]
        public string AparatLink
        {
            get
            {
                return this._Aparatlink;
            }
            set
            {
                if ((this._Aparatlink != value))
                {
                    this._Aparatlink = value;
                }
            }
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_virayesh", DbType = "NVarChar(100)")]
        public string virayesh
        {
            get
            {
                return this._virayesh;
            }
            set
            {
                if ((this._virayesh != value))
                {
                    this._virayesh = value;
                }
            }
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_platformsTitle", DbType = "NVarChar(100)")]
        public string platformsTitle
        {
            get
            {
                return this._platformsTitle;
            }
            set
            {
                if ((this._platformsTitle != value))
                {
                    this._platformsTitle = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_genresTitle", DbType = "NVarChar(100)")]
        public string genresTitle
        {
            get
            {
                return this._genresTitle;
            }
            set
            {
                if ((this._genresTitle != value))
                {
                    this._genresTitle = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_agesTitle", DbType = "NVarChar(50)")]
        public string agesTitle
        {
            get
            {
                return this._agesTitle;
            }
            set
            {
                if ((this._agesTitle != value))
                {
                    this._agesTitle = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", DbType = "Int NOT NULL")]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this._id = value;
                }
            }
        }
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_version_id", DbType = "Int NOT NULL")]
        public int version_id
        {
            get
            {
                return this._version_id;
            }
            set
            {
                if ((this._version_id != value))
                {
                    this._version_id = value;
                }
            }
        }


        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_name", DbType = "NVarChar(100)")]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this._name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_publisher", DbType = "NVarChar(MAX)")]
        public string publisher
        {
            get
            {
                return this._publisher;
            }
            set
            {
                if ((this._publisher != value))
                {
                    this._publisher = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gameName2", DbType = "NVarChar(100)")]
        public string gameName2
        {
            get
            {
                return this._gameName2;
            }
            set
            {
                if ((this._gameName2 != value))
                {
                    this._gameName2 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_genreIdInt", DbType = "Int NOT NULL")]
        public int genreIdInt
        {
            get
            {
                return this._genreIdInt;
            }
            set
            {
                if ((this._genreIdInt != value))
                {
                    this._genreIdInt = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_platformIdInt", DbType = "Int NOT NULL")]
        public int platformIdInt
        {
            get
            {
                return this._platformIdInt;
            }
            set
            {
                if ((this._platformIdInt != value))
                {
                    this._platformIdInt = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_grade", DbType = "Int NOT NULL")]
        public int esra_grade
        {
            get
            {
                return this._esra_grade;
            }
            set
            {
                if ((this._esra_grade != value))
                {
                    this._esra_grade = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_genreID", DbType = "VarChar(7) NOT NULL", CanBeNull = false)]
        public string genreID
        {
            get
            {
                return this._genreID;
            }
            set
            {
                if ((this._genreID != value))
                {
                    this._genreID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_platformID", DbType = "VarChar(10) NOT NULL", CanBeNull = false)]
        public string platformID
        {
            get
            {
                return this._platformID;
            }
            set
            {
                if ((this._platformID != value))
                {
                    this._platformID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_sourceName", DbType = "NVarChar(100)")]
        public string sourceName
        {
            get
            {
                return this._sourceName;
            }
            set
            {
                if ((this._sourceName != value))
                {
                    this._sourceName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pictogramId", DbType = "Int")]
        public System.Nullable<int> pictogramId
        {
            get
            {
                return this._pictogramId;
            }
            set
            {
                if ((this._pictogramId != value))
                {
                    this._pictogramId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pictogramName", DbType = "NVarChar(100)")]
        public string pictogramName
        {
            get
            {
                return this._pictogramName;
            }
            set
            {
                if ((this._pictogramName != value))
                {
                    this._pictogramName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pictogramRate", DbType = "Int")]
        public System.Nullable<int> pictogramRate
        {
            get
            {
                return this._pictogramRate;
            }
            set
            {
                if ((this._pictogramRate != value))
                {
                    this._pictogramRate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_publish_date", DbType = "DateTime NOT NULL")]
        public System.DateTime publish_date
        {
            get
            {
                return this._publish_date;
            }
            set
            {
                if ((this._publish_date != value))
                {
                    this._publish_date = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_time", DbType = "DateTime NOT NULL")]
        public System.DateTime esra_time
        {
            get
            {
                return this._esra_time;
            }
            set
            {
                if ((this._esra_time != value))
                {
                    this._esra_time = value;
                }
            }
        }


        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Picture", DbType = "NVarChar(1000)")]
        public string Picture
        {
            get
            {
                return this._Picture;
            }
            set
            {
                if ((this._Picture != value))
                {
                    this._Picture = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_categoryId", DbType = "Int")]
        public System.Nullable<int> categoryId
        {
            get
            {
                return this._categoryId;
            }
            set
            {
                if ((this._categoryId != value))
                {
                    this._categoryId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_categoryName", DbType = "NVarChar(100)")]
        public string categoryName
        {
            get
            {
                return this._categoryName;
            }
            set
            {
                if ((this._categoryName != value))
                {
                    this._categoryName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fileTypeId", DbType = "Int")]
        public System.Nullable<int> fileTypeId
        {
            get
            {
                return this._fileTypeId;
            }
            set
            {
                if ((this._fileTypeId != value))
                {
                    this._fileTypeId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_source_id", DbType = "Int NOT NULL")]
        public int source_id
        {
            get
            {
                return this._source_id;
            }
            set
            {
                if ((this._source_id != value))
                {
                    this._source_id = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_intro_intro", DbType = "NVarChar(MAX)")]
        public string intro_intro
        {
            get
            {
                return this._intro_intro;
            }
            set
            {
                if ((this._intro_intro != value))
                {
                    this._intro_intro = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_intro_short", DbType = "NVarChar(1000)")]
        public string intro_short
        {
            get
            {
                return this._intro_short;
            }
            set
            {
                if ((this._intro_short != value))
                {
                    this._intro_short = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_intro_gameplay", DbType = "NVarChar(MAX)")]
        public string intro_gameplay
        {
            get
            {
                return this._intro_gameplay;
            }
            set
            {
                if ((this._intro_gameplay != value))
                {
                    this._intro_gameplay = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ParentRecommendation", DbType = "NVarChar(MAX)")]
        public string ParentRecommendation
        {
            get
            {
                return this._ParentRecommendation;
            }
            set
            {
                if ((this._ParentRecommendation != value))
                {
                    this._ParentRecommendation = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_skill", DbType = "Int NOT NULL")]
        public int esra_skill
        {
            get
            {
                return this._esra_skill;
            }
            set
            {
                if ((this._esra_skill != value))
                {
                    this._esra_skill = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_violence", DbType = "Int NOT NULL")]
        public int esra_violence
        {
            get
            {
                return this._esra_violence;
            }
            set
            {
                if ((this._esra_violence != value))
                {
                    this._esra_violence = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_fear", DbType = "Int NOT NULL")]
        public int esra_fear
        {
            get
            {
                return this._esra_fear;
            }
            set
            {
                if ((this._esra_fear != value))
                {
                    this._esra_fear = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_drugs", DbType = "Int NOT NULL")]
        public int esra_drugs
        {
            get
            {
                return this._esra_drugs;
            }
            set
            {
                if ((this._esra_drugs != value))
                {
                    this._esra_drugs = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_anomalies", DbType = "Int NOT NULL")]
        public int esra_anomalies
        {
            get
            {
                return this._esra_anomalies;
            }
            set
            {
                if ((this._esra_anomalies != value))
                {
                    this._esra_anomalies = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_esra_despair", DbType = "Int NOT NULL")]
        public int esra_despair
        {
            get
            {
                return this._esra_despair;
            }
            set
            {
                if ((this._esra_despair != value))
                {
                    this._esra_despair = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PictureCover", DbType = "VarChar(12) NOT NULL", CanBeNull = false)]
        public string PictureCover
        {
            get
            {
                return this._PictureCover;
            }
            set
            {
                if ((this._PictureCover != value))
                {
                    this._PictureCover = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_categoryIdTemp", DbType = "VarChar(14) NOT NULL", CanBeNull = false)]
        public string categoryIdTemp
        {
            get
            {
                return this._categoryIdTemp;
            }
            set
            {
                if ((this._categoryIdTemp != value))
                {
                    this._categoryIdTemp = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ShowInEsraWebsite", DbType = "Bit")]
        public System.Nullable<bool> ShowInEsraWebsite
        {
            get
            {
                return this._ShowInEsraWebsite;
            }
            set
            {
                if ((this._ShowInEsraWebsite != value))
                {
                    this._ShowInEsraWebsite = value;
                }
            }
        }
    }
}
#pragma warning restore 1591
